# Store Module Execution Plan (Binding)

binding: true
module: store
epic_ref: SAAS-013
version: 1.0

execution_policy:
  must_follow: true
  allow_code_changes_only_after: "Одобряю <TASK_ID>"
  constraints:
    - no public API changes without explicit approval
    - operate within files_scope
    - pass lints/tests and Swagger before DoD complete

context:
  goal: Store management system with settings, maintenance mode and tenant isolation

# DEFAULT PRE-COMMIT WORKFLOW
default_pre_commit_workflow: "МИНИМАЛЬНЫЙ (вспомогательный модуль)"
default_pre_commit_steps:
  - "«Автофикс» → linter/prettier"
  - "«Коммит» → feat(store): <TASK_ID> complete"

tasks:
  # Фаза 1: Базовая реализация
  - id: SAAS-013-00
    title: Обновить систему ролей в контроллере магазина
    branch: "feature/store/SAAS-013/store-roles-update"
    files_scope:
      - ".cursor/rules/models/store.mdc"
    steps:
      - добавить импорты RoleGuard и Roles в контроллер
      - ввести константы ролей (ADMIN_ROLES, MANAGER_ROLES, STAFF_ROLES, CUSTOMER_ROLES, ALL_ROLES)
      - обновить методы с правильными ролями:
        - управление настройками магазина: ADMIN_ROLES
        - управление режимом обслуживания: ADMIN_ROLES
        - просмотр настроек: MANAGER_ROLES
        - статистика магазина: MANAGER_ROLES
    dod:
      - все методы контроллера используют полную систему ролей
      - роли соответствуют новой иерархии (SUPER_ADMIN, PLATFORM_ADMIN, TENANT_OWNER, etc.)
      - тенантская изоляция ролей обеспечена
    gate:
      - require: "Одобряю SAAS-013-00"

  - id: SAAS-013-01
    title: Создать миграцию для таблицы store_settings
    branch: "feature/store/SAAS-013/store-core-tables"
    files_scope:
      - "db/migrations/**"
      - "src/domain/models/store-settings.ts"
    steps:
      - создать таблицу store_settings с tenant_id
      - добавить индексы для производительности
      - создать модель StoreSettingsModel
    dod:
      - миграция up/down успешна
      - StoreSettingsModel содержит tenant_id
      - индексы созданы для производительности
    gate:
      - require: "Одобряю SAAS-013-01"

  - id: SAAS-013-02
    title: Реализовать модель StoreSettingsModel
    branch: "feature/store/SAAS-013/store-core-models"
    files_scope:
      - "src/domain/models/store-settings.ts"
    steps:
      - добавить методы для работы с настройками магазина
      - реализовать методы для управления режимами работы
      - добавить методы для проверки статуса магазина
    dod:
      - все методы настроек реализованы
      - управление режимами работает корректно
      - проверка статуса функциональна
    gate:
      - require: "Одобряю SAAS-013-02"

  - id: SAAS-013-03
    title: Создать DTO классы с валидацией
    branch: "feature/store/SAAS-013/store-dto-validation"
    files_scope:
      - "src/infrastructure/dto/store/**"
      - "src/domain/dto/**"
    steps:
      - создать UpdateStoreSettingsDto для обновления настроек
      - создать SetMaintenanceModeDto для режима обслуживания
      - создать SetHolidayModeDto для праздничного режима
      - добавить валидаторы с русскими сообщениями
    dod:
      - DTO содержат все необходимые поля
      - валидация работает с русскими сообщениями
      - CustomValidationPipe обрабатывает все DTO
    gate:
      - require: "Одобряю SAAS-013-03"

  - id: SAAS-013-04
    title: Создать Response классы с Swagger
    branch: "feature/store/SAAS-013/store-response-swagger"
    files_scope:
      - "src/infrastructure/responses/store/**"
      - "src/infrastructure/common/decorators/swagger/store/**"
    steps:
      - создать Response классы с явными полями (не extends StoreSettingsModel)
      - добавить Swagger декораторы для всех полей
      - создать Response для настроек магазина
    dod:
      - Response классы не наследуются от модели
      - Swagger схемы корректны
      - документация полная
    gate:
      - require: "Одобряю SAAS-013-04"

  - id: SAAS-013-05
    title: Реализовать сервис с основной логикой
    branch: "feature/store/SAAS-013/store-service-methods"
    files_scope:
      - "src/infrastructure/services/store/**"
      - "src/domain/services/**"
    steps:
      - добавить методы для управления настройками магазина
      - реализовать методы для режимов работы
      - добавить методы для проверки лимитов заказов
      - добавить статистику магазина
    dod:
      - все методы сервиса реализованы
      - управление настройками работает корректно
      - режимы работы функциональны
      - статистика возвращает корректные данные
    gate:
      - require: "Одобряю SAAS-013-05"

  # Фаза 2: API и интеграции
  - id: SAAS-013-06
    title: Создать контроллер с API endpoints
    branch: "feature/store/SAAS-013/store-controller-endpoints"
    files_scope:
      - "src/infrastructure/controllers/store/**"
      - "src/infrastructure/common/decorators/swagger/store/**"
    steps:
      - добавить эндпоинты для настроек магазина (GET/PATCH /store/settings)
      - добавить эндпоинты для режимов работы (PATCH /store/maintenance, PATCH /store/holiday)
      - добавить эндпоинты для статуса магазина (GET /store/status)
      - добавить статистику (GET /admin/store/stats)
    dod:
      - все эндпоинты работают корректно
      - Swagger документация обновлена
      - Guards и роли применены правильно
    gate:
      - require: "Одобряю SAAS-013-06"

  - id: SAAS-013-07
    title: Настроить middleware для проверки статуса магазина
    branch: "feature/store/SAAS-013/store-status-middleware"
    files_scope:
      - "src/infrastructure/common/middleware/**"
      - "src/infrastructure/common/guards/**"
    steps:
      - реализовать middleware для проверки статуса магазина
      - добавить блокировку при режиме обслуживания
      - добавить проверку лимитов заказов
    dod:
      - middleware статуса работает корректно
      - блокировка при обслуживании функциональна
      - проверка лимитов активна
    gate:
      - require: "Одобряю SAAS-013-07"

  - id: SAAS-013-08
    title: Добавить обработку ошибок и валидацию
    branch: "feature/store/SAAS-013/store-error-handling"
    files_scope:
      - "src/infrastructure/common/filters/**"
      - "src/infrastructure/common/pipes/**"
    steps:
      - добавить обработку ошибок для настроек магазина
      - улучшить валидацию с русскими сообщениями
      - добавить логирование ошибок
    dod:
      - ошибки обрабатываются корректно
      - сообщения на русском языке
      - логирование работает
    gate:
      - require: "Одобряю SAAS-013-08"

  - id: SAAS-013-09
    title: Создать тесты для API настроек магазина
    branch: "feature/store/SAAS-013/store-api-tests"
    files_scope:
      - "src/infrastructure/controllers/store/tests/**"
      - "src/infrastructure/services/store/tests/**"
      - "src/infrastructure/repositories/store/tests/**"
    steps:
      - написать integration тесты для настроек магазина
      - написать unit тесты для сервисов
      - добавить негативные тесты
    dod:
      - все тесты проходят
      - покрытие критичных модулей ≥80%
      - негативные сценарии покрыты
    gate:
      - require: "Одобряю SAAS-013-09"

  # Фаза 3: Тестирование и качество
  - id: SAAS-013-10
    title: Написать unit тесты для сервисов
    branch: "feature/store/SAAS-013/store-unit-tests"
    files_scope:
      - "src/infrastructure/services/store/tests/**"
      - "src/infrastructure/repositories/store/tests/**"
    steps:
      - покрыть StoreService методами
      - покрыть методы управления режимами
      - покрыть методы проверки лимитов
    dod:
      - unit тесты покрывают все методы
      - тесты стабильны и быстры
      - моки настроены корректно
    gate:
      - require: "Одобряю SAAS-013-10"

  - id: SAAS-013-11
    title: Написать integration тесты для API
    branch: "feature/store/SAAS-013/store-integration-tests"
    files_scope:
      - "src/infrastructure/controllers/store/tests/**"
    steps:
      - покрыть все эндпоинты настроек магазина
      - покрыть эндпоинты режимов работы
      - покрыть эндпоинты статистики
    dod:
      - integration тесты покрывают все эндпоинты
      - тесты изолированы и детерминированы
      - негативные сценарии покрыты
    gate:
      - require: "Одобряю SAAS-013-11"

  - id: SAAS-013-12
    title: Провести рефакторинг и оптимизацию
    branch: "feature/store/SAAS-013/store-optimization"
    files_scope:
      - "src/infrastructure/**"
      - "src/domain/**"
    steps:
      - оптимизировать запросы к БД
      - рефакторить дублирующийся код
      - улучшить производительность
    dod:
      - код оптимизирован
      - дублирование устранено
      - производительность улучшена
    gate:
      - require: "Одобряю SAAS-013-12"

  # Дополнительные возможности
  - id: SAAS-013-13
    title: Автоматическое управление режимами работы
    branch: "feature/store/SAAS-013/store-auto-modes"
    files_scope:
      - "src/infrastructure/services/store/**"
      - "src/infrastructure/common/scheduler/**"
    steps:
      - реализовать автоматическое переключение режимов работы
      - добавить планировщик для праздничных дней
      - добавить автоматическое управление лимитами
    dod:
      - автоматическое переключение режимов работает
      - планировщик праздничных дней функционален
      - автоматическое управление лимитами активно
    gate:
      - require: "Одобряю SAAS-013-13"

  - id: SAAS-013-14
    title: Аналитика настроек магазина
    branch: "feature/store/SAAS-013/store-analytics"
    files_scope:
      - "src/infrastructure/controllers/store/**"
      - "src/infrastructure/services/store/**"
    steps:
      - создать эндпоинты аналитики настроек магазина
      - добавить метрики и дашборды
      - настроить отчеты по работе магазина
    dod:
      - аналитика настроек магазина работает
      - метрики корректны
      - отчеты генерируются
    gate:
      - require: "Одобряю SAAS-013-14"