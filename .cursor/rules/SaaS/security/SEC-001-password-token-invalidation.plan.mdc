# SEC-001: Password Update Token Invalidation (Security Fix)

binding: true
module: security
epic_ref: SEC-PASSWORD-MANAGEMENT
version: 1.0
priority: CRITICAL

execution_policy:
must_follow: true
allow_code_changes_only_after: "Одобряю SEC-001"
constraints:

- no changes to auth flow without security review
- must invalidate all user sessions on password change
- audit logging required for admin actions
- maintain backward compatibility with existing API

context:
goal: Исправить критичную уязвимость - refresh tokens не инвалидируются при admin force password update. Злоумышленник может продолжать использовать сессию после смены пароля админом.
severity: HIGH (CVSS 7.5)
found_during: TEST-030 code review (2025-10-10)
impact: Unauthorized access, session hijacking, user trust violation
current_behavior: updatePassword() меняет пароль, НО refresh tokens остаются валидными
expected_behavior: updatePassword() должен инвалидировать ВСЕ refresh tokens пользователя

tasks:

# ============================================================

# Core Fix (CRITICAL)

# ============================================================

- id: SEC-001-1
  title: Add refresh token invalidation to updatePassword
  branch: "security/SEC-001-1/password-update-token-invalidation"
  files_scope:
    - "src/infrastructure/services/user/user.service.ts"
    - "src/infrastructure/repositories/refresh-token/refresh-token.repository.ts"
      steps:
    - добавить RefreshTokenRepository dependency в UserService constructor
    - вызвать refreshTokenRepository.removeListRefreshTokens(userId) в updatePassword
    - добавить audit logging (logger.warn) для admin action
    - инвалидировать cache после всех операций
      dod:
    - refresh tokens удаляются при updatePassword
    - audit log содержит userId, timestamp, adminAction=true
    - cache инвалидируется корректно
    - backward compatibility сохранена (API не меняется)
      estimate: 1 hour
      gate:
    - require: "Одобряю SEC-001-1"
      pre_commit_workflow: "ТЩАТЕЛЬНЫЙ (критичный модуль: security/auth)"
      pre_commit_steps:
    - "«Ревью» → security implications, session management"
    - "«Автофикс» → linter/prettier"
    - "Тесты: unit + integration tests"
    - "«Коммит» → fix(security): SEC-001-1 invalidate tokens on password update"

# ============================================================

# Testing (CRITICAL)

# ============================================================

- id: SEC-001-2
  title: Add comprehensive tests for token invalidation
  branch: "security/SEC-001-2/password-invalidation-tests"
  files_scope:
    - "src/infrastructure/services/user/user.service.unit.test.ts"
    - "tests/integration/security/password-update-invalidation.integration.test.ts"
      steps:
    - добавить unit test: проверка вызова deleteAllByUserId
    - добавить unit test: проверка audit logging
    - добавить integration test: E2E login → admin update → refresh fails
    - добавить integration test: multiple sessions all invalidated
      dod:
    - unit tests: 2 новых теста проходят
    - integration tests: 2 новых теста проходят
    - coverage для updatePassword: 100%
    - все existing tests проходят (no regression)
      estimate: 1.5 hours
      gate:
    - require: "Одобряю SEC-001-2"
    - depends_on: SEC-001-1
      pre_commit_workflow: "ТЩАТЕЛЬНЫЙ (критичный модуль: security)"
      pre_commit_steps:
    - "«Ревью» → test coverage, security scenarios"
    - "«Автофикс» → linter/prettier"
    - "Тесты: npm test -- password-update"
    - "«Коммит» → test(security): SEC-001-2 password invalidation tests"

# ============================================================

# Enhancement (RECOMMENDED)

# ============================================================

- id: SEC-001-3
  title: Add user notification for admin password change
  branch: "security/SEC-001-3/password-change-notification"
  files_scope:
    - "src/infrastructure/services/user/user.service.ts"
    - "src/infrastructure/services/notification/notification.service.ts"
      steps:
    - создать notification template "password_changed_by_admin"
    - вызвать notificationService.sendPasswordChangedByAdmin(userId)
    - включить информацию: timestamp, reason, action required
    - тест для notification delivery
      dod:
    - notification отправляется после password update
    - template содержит необходимую информацию
    - пользователь получает email + in-app notification
    - тесты проходят
      estimate: 2 hours
      gate:
    - require: "Одобряю SEC-001-3"
    - depends_on: SEC-001-1
      priority: MEDIUM
      pre_commit_workflow: "СТАНДАРТНЫЙ (feature enhancement)"
      pre_commit_steps:
    - "«Ревью» → notification content, UX"
    - "«Автофикс» → linter/prettier"
    - "Тесты: notification tests"
    - "«Коммит» → feat(security): SEC-001-3 password change notification"

# ============================================================

# Documentation & Rollout

# ============================================================

- id: SEC-001-4
  title: Update documentation and create rollout plan
  branch: "security/SEC-001-4/documentation"
  files_scope:
    - "docs/SECURITY.md"
    - "docs/SEC-001-PASSWORD-UPDATE-TOKEN-INVALIDATION.md"
    - "CHANGELOG.md"
      steps:
    - обновить SECURITY.md с решением SEC-001
    - добавить в CHANGELOG security fix
    - создать release notes для пользователей
    - обновить API documentation (если нужно)
      dod:
    - SEC-001 отмечен как RESOLVED в SECURITY.md
    - CHANGELOG содержит security fix entry
    - Release notes подготовлены
      estimate: 30 minutes
      gate:
    - require: "Одобряю SEC-001-4"
    - depends_on: [SEC-001-1, SEC-001-2]
      pre_commit_workflow: "ОБЫЧНЫЙ (documentation)"
      pre_commit_steps:
    - "«Ревью» → documentation completeness"
    - "«Коммит» → docs(security): SEC-001-4 update security docs"

# ============================================================

# Progress Tracking

# ============================================================

progress:
SEC-001-1_status: pending
SEC-001-2_status: pending
SEC-001-3_status: pending
SEC-001-4_status: pending

total_estimate: 5-6 hours
critical_path: SEC-001-1 → SEC-001-2 (must have)
optional_path: SEC-001-3 (recommended), SEC-001-4 (documentation)

# ============================================================

# Success Metrics

# ============================================================

success_criteria:
security: - refresh_tokens_invalidated: true - audit_log_recorded: true - no_session_leakage: true - cvss_score_reduced: "7.5 → 0 (fixed)"

testing: - unit_tests_passing: 100% - integration_tests_passing: 100% - security_review_approved: true

production_readiness: - no_regression: true - backward_compatible: true - documented: true - stakeholders_notified: true

# ============================================================

# Rollout Plan

# ============================================================

rollout:
phase_1_development: - tasks: [SEC-001-1, SEC-001-2] - duration: 2.5 hours - deliverable: Code + Tests

phase_2_review: - security_review: 30 minutes - code_review: 30 minutes - qa_testing: 1 hour

phase_3_staging: - deploy_to_staging: true - manual_testing: 1 hour - monitor_logs: 24 hours

phase_4_production: - deploy_to_production: true - monitor_metrics: 48 hours - user_communication: if needed

# ============================================================

# Risk Assessment

# ============================================================

risks:
regression_risk:
probability: LOW
impact: HIGH
mitigation: "Comprehensive tests (unit + integration + manual)"

user_disruption:
probability: MEDIUM
impact: MEDIUM
mitigation: "Notify users before password change, clear communication"

api_breaking_change:
probability: NONE
impact: N/A
mitigation: "No API changes, backward compatible"

# ============================================================

# Related Issues

# ============================================================

related:

- TEST-030: Code review found this issue
- TEST-020: Similar cache unbounded issue (RoleGuard)
- PERF-001: Remove console.log from RoleGuard (from TEST-020)

standards:

- OWASP Session Management Cheat Sheet
- NIST SP 800-63B (Digital Identity Guidelines)
- GDPR Article 32 (Security of processing)

# ============================================================

# Notes

# ============================================================

notes:

- "Эта уязвимость критична для production deployment"
- "Пользователи ожидают, что смена пароля = logout всех сессий"
- "Существующий changePassword() (user-initiated) не имеет этой проблемы"
- "updatePassword() используется только админами, но это критичный сценарий"
- "Workaround: админ может вручную удалить refresh_tokens через SQL (не рекомендуется)"

best_practices:

- always_invalidate_sessions_on_password_change: true
- log_admin_security_actions: true
- notify_users_of_security_changes: true
- test_session_management_thoroughly: true
