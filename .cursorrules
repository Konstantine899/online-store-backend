# Cursor Rules для online-store-backend

## Общие принципы
- Отвечай на русском языке
- Следуй правилам из docs/project-rules.md и rules/*.mdc
- Не вносить изменения без явного подтверждения "Одобряю"

## Стиль кода
- TypeScript strict mode
- 4 пробела для отступов (не табы)
- Длина строки максимум 120 символов
- Single quotes для строк
- Trailing commas everywhere

## NestJS специфика
- Все зависимости через constructor injection
- DTO с class-validator для валидации
- Сообщения об ошибках на русском языке
- Использовать кастомные Swagger декораторы
- Репозитории для работы с БД, сервисы для бизнес-логики

## Именование
- Файлы: *.controller.ts, *.service.ts, *.dto.ts, *.response.ts
- Классы: PascalCase (UserController, AuthService)
- Методы: camelCase (createUser, getProductList)
- Интерфейсы: префикс I (IUserService)

## Импорты
- Использовать алиас @app/* вместо относительных путей
- Группировать: NestJS → внешние → внутренние
- Пустая строка между группами

## Безопасность
- Всегда валидировать входные данные через DTO
- Использовать @IsSanitizedString для текстовых полей
- Не логировать PII (email, пароли, токены)
- Включать correlation ID в логи

## Тестирование
- Unit тесты для сервисов/пайпов/гвардов
- Integration тесты для контроллеров/репозиториев
- Негативные сценарии обязательны
- Покрытие критичных модулей ≥ 80%

## Git
- Коммиты в формате Conventional Commits: type(scope): summary
- Ветки: feature/*, fix/*, chore/*
- Не коммитить без явного запроса


