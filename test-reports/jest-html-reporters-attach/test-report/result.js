window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":39,"numPassedTests":718,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":40,"numTotalTests":722,"startTime":1759858377424,"success":false,"testResults":[{"numFailingTests":4,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858386861,"loadTestEnvironmentEnd":1759858377891,"loadTestEnvironmentStart":1759858377809,"runtime":8968,"setupAfterEnvEnd":1759858382600,"setupAfterEnvStart":1759858378209,"setupFilesEnd":1759858377893,"setupFilesStart":1759858377893,"slow":true,"start":1759858377893},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\auth-flow.integration.test.ts","failureMessage":"  ● Auth Flow (e2e integration) › Полный сценарий: Registration → Login → Access → Refresh → Logout › Step 1: Registration - должен успешно зарегистрировать пользователя\n\n    expect(received).toHaveProperty(path, value)\n\n    Matcher error: received value must not be null nor undefined\n\n    Received has value: undefined\n\n      42 |             expect(response.status).toBe(HttpStatus.CREATED);\n      43 |             expect(response.body).toHaveProperty('accessToken');\n    > 44 |             expect(response.body.user).toHaveProperty('email', uniqueEmail);\n         |                                        ^\n      45 |\n      46 |             accessToken = response.body.accessToken;\n      47 |\n\n      at Object.<anonymous> (tests/integration/auth-flow.integration.test.ts:44:40)\n\n  ● Auth Flow (e2e integration) › Полный сценарий: Registration → Login → Access → Refresh → Logout › Step 2: Access - должен получить доступ к защищённому endpoint с access токеном\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 403\n\n      66 |                 .set('Authorization', `Bearer ${accessToken}`);\n      67 |\n    > 68 |             expect(response.status).toBe(HttpStatus.OK);\n         |                                     ^\n      69 |             expect(response.body).toHaveProperty('email', uniqueEmail);\n      70 |             expect(response.body).toHaveProperty('roles');\n      71 |         });\n\n      at Object.<anonymous> (tests/integration/auth-flow.integration.test.ts:68:37)\n\n  ● Auth Flow (e2e integration) › Полный сценарий: Registration → Login → Access → Refresh → Logout › Step 4: Access with new token - должен работать с обновлённым токеном\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 403\n\n      109 |                 .set('Authorization', `Bearer ${accessToken}`);\n      110 |\n    > 111 |             expect(response.status).toBe(HttpStatus.OK);\n          |                                     ^\n      112 |         });\n      113 |\n      114 |         it('Step 5: Logout - должен успешно выйти из системы', async () => {\n\n      at Object.<anonymous> (tests/integration/auth-flow.integration.test.ts:111:37)\n\n  ● Auth Flow (e2e integration) › Refresh token rotation › должен разрешить использование нового refresh токена\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 401\n\n      240 |                 .set('Cookie', secondRefreshCookie);\n      241 |\n    > 242 |             expect(response.status).toBe(HttpStatus.OK);\n          |                                     ^\n      243 |             expect(response.body).toHaveProperty('accessToken');\n      244 |         });\n      245 |     });\n\n      at Object.<anonymous> (tests/integration/auth-flow.integration.test.ts:242:37)\n","testResults":[{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":283,"failureMessages":["Error: expect(received).toHaveProperty(path, value)\n\nMatcher error: received value must not be null nor undefined\n\nReceived has value: undefined\n    at Object.<anonymous> (F:\\git\\online-store-backend\\tests\\integration\\auth-flow.integration.test.ts:44:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 1: Registration - должен успешно зарегистрировать пользователя","status":"failed","title":"Step 1: Registration - должен успешно зарегистрировать пользователя"},{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":19,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 403\n    at Object.<anonymous> (F:\\git\\online-store-backend\\tests\\integration\\auth-flow.integration.test.ts:68:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 2: Access - должен получить доступ к защищённому endpoint с access токеном","status":"failed","title":"Step 2: Access - должен получить доступ к защищённому endpoint с access токеном"},{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":5,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 3: Refresh - должен обновить access токен через refresh cookie","status":"passed","title":"Step 3: Refresh - должен обновить access токен через refresh cookie"},{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":12,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 403\n    at Object.<anonymous> (F:\\git\\online-store-backend\\tests\\integration\\auth-flow.integration.test.ts:111:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 4: Access with new token - должен работать с обновлённым токеном","status":"failed","title":"Step 4: Access with new token - должен работать с обновлённым токеном"},{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":2,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 5: Logout - должен успешно выйти из системы","status":"passed","title":"Step 5: Logout - должен успешно выйти из системы"},{"ancestorTitles":["Auth Flow (e2e integration)","Полный сценарий: Registration → Login → Access → Refresh → Logout"],"duration":2,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Полный сценарий: Registration → Login → Access → Refresh → Logout Step 6: Access after logout - должен запретить доступ после logout","status":"passed","title":"Step 6: Access after logout - должен запретить доступ после logout"},{"ancestorTitles":["Auth Flow (e2e integration)","Login flow"],"duration":125,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Login flow должен успешно войти с корректными credentials","status":"passed","title":"должен успешно войти с корректными credentials"},{"ancestorTitles":["Auth Flow (e2e integration)","Login flow"],"duration":13,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Login flow должен вернуть 400 для некорректного email","status":"passed","title":"должен вернуть 400 для некорректного email"},{"ancestorTitles":["Auth Flow (e2e integration)","Login flow"],"duration":88,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Login flow должен вернуть 401 для неправильного пароля","status":"passed","title":"должен вернуть 401 для неправильного пароля"},{"ancestorTitles":["Auth Flow (e2e integration)","Login flow"],"duration":87,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Login flow должен вернуть 401 для несуществующего пользователя","status":"passed","title":"должен вернуть 401 для несуществующего пользователя"},{"ancestorTitles":["Auth Flow (e2e integration)","Refresh token rotation"],"duration":25,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Refresh token rotation должен запретить использование старого refresh токена после ротации","status":"passed","title":"должен запретить использование старого refresh токена после ротации"},{"ancestorTitles":["Auth Flow (e2e integration)","Refresh token rotation"],"duration":20,"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 401\n    at Object.<anonymous> (F:\\git\\online-store-backend\\tests\\integration\\auth-flow.integration.test.ts:242:37)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Auth Flow (e2e integration) Refresh token rotation должен разрешить использование нового refresh токена","status":"failed","title":"должен разрешить использование нового refresh токена"},{"ancestorTitles":["Auth Flow (e2e integration)","Token expiration"],"duration":11,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Token expiration должен вернуть 401 для expired access токена","status":"passed","title":"должен вернуть 401 для expired access токена"},{"ancestorTitles":["Auth Flow (e2e integration)","Token expiration"],"duration":10,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Token expiration должен вернуть 401 для невалидного refresh cookie","status":"passed","title":"должен вернуть 401 для невалидного refresh cookie"},{"ancestorTitles":["Auth Flow (e2e integration)","Registration валидация"],"duration":18,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Registration валидация должен отклонить регистрацию с существующим email","status":"passed","title":"должен отклонить регистрацию с существующим email"},{"ancestorTitles":["Auth Flow (e2e integration)","Registration валидация"],"duration":10,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Registration валидация должен отклонить регистрацию со слабым паролем","status":"passed","title":"должен отклонить регистрацию со слабым паролем"},{"ancestorTitles":["Auth Flow (e2e integration)","Registration валидация"],"duration":12,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Registration валидация должен отклонить регистрацию без обязательных полей","status":"passed","title":"должен отклонить регистрацию без обязательных полей"},{"ancestorTitles":["Auth Flow (e2e integration)","Authorization header валидация"],"duration":9,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Authorization header валидация должен вернуть 401 при отсутствии Authorization header","status":"passed","title":"должен вернуть 401 при отсутствии Authorization header"},{"ancestorTitles":["Auth Flow (e2e integration)","Authorization header валидация"],"duration":11,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Authorization header валидация должен вернуть 401 для невалидного формата токена","status":"passed","title":"должен вернуть 401 для невалидного формата токена"},{"ancestorTitles":["Auth Flow (e2e integration)","Authorization header валидация"],"duration":9,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Authorization header валидация должен вернуть 401/403 для пустого Bearer токена","status":"passed","title":"должен вернуть 401/403 для пустого Bearer токена"},{"ancestorTitles":["Auth Flow (e2e integration)","Concurrent auth operations"],"duration":207,"failureMessages":[],"fullName":"Auth Flow (e2e integration) Concurrent auth operations должен обрабатывать параллельные refresh requests корректно","status":"passed","title":"должен обрабатывать параллельные refresh requests корректно"}]},{"numFailingTests":0,"numPassingTests":44,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858414514,"loadTestEnvironmentEnd":1759858386877,"loadTestEnvironmentStart":1759858386869,"runtime":27636,"setupAfterEnvEnd":1759858386923,"setupAfterEnvStart":1759858386920,"setupFilesEnd":1759858386878,"setupFilesStart":1759858386878,"slow":true,"start":1759858386878},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\notification\\tests\\sms-provider.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SmsProviderService","sendSms"],"duration":240,"failureMessages":[],"fullName":"SmsProviderService sendSms should send SMS successfully with valid Russian phone number","status":"passed","title":"should send SMS successfully with valid Russian phone number"},{"ancestorTitles":["SmsProviderService","sendSms"],"duration":217,"failureMessages":[],"fullName":"SmsProviderService sendSms should send SMS with international phone number","status":"passed","title":"should send SMS with international phone number"},{"ancestorTitles":["SmsProviderService","sendSms"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService sendSms should fail with invalid phone number format","status":"passed","title":"should fail with invalid phone number format"},{"ancestorTitles":["SmsProviderService","sendSms"],"duration":212,"failureMessages":[],"fullName":"SmsProviderService sendSms should calculate cost correctly for Latin text","status":"passed","title":"should calculate cost correctly for Latin text"},{"ancestorTitles":["SmsProviderService","sendSms"],"duration":221,"failureMessages":[],"fullName":"SmsProviderService sendSms should calculate cost correctly for Cyrillic text","status":"passed","title":"should calculate cost correctly for Cyrillic text"},{"ancestorTitles":["SmsProviderService","sendSms"],"duration":216,"failureMessages":[],"fullName":"SmsProviderService sendSms should calculate cost for multiple SMS","status":"passed","title":"should calculate cost for multiple SMS"},{"ancestorTitles":["SmsProviderService","sendBulkSms"],"duration":433,"failureMessages":[],"fullName":"SmsProviderService sendBulkSms should send multiple SMS successfully","status":"passed","title":"should send multiple SMS successfully"},{"ancestorTitles":["SmsProviderService","sendBulkSms"],"duration":215,"failureMessages":[],"fullName":"SmsProviderService sendBulkSms should handle mixed success and failure in bulk SMS","status":"passed","title":"should handle mixed success and failure in bulk SMS"},{"ancestorTitles":["SmsProviderService","sendBulkSms"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService sendBulkSms should handle empty bulk SMS list","status":"passed","title":"should handle empty bulk SMS list"},{"ancestorTitles":["SmsProviderService","validatePhoneNumber"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService validatePhoneNumber should validate correct Russian phone numbers","status":"passed","title":"should validate correct Russian phone numbers"},{"ancestorTitles":["SmsProviderService","validatePhoneNumber"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService validatePhoneNumber should validate correct international phone numbers","status":"passed","title":"should validate correct international phone numbers"},{"ancestorTitles":["SmsProviderService","validatePhoneNumber"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService validatePhoneNumber should reject invalid phone numbers","status":"passed","title":"should reject invalid phone numbers"},{"ancestorTitles":["SmsProviderService","validatePhoneNumber"],"duration":9,"failureMessages":[],"fullName":"SmsProviderService validatePhoneNumber should debug specific invalid numbers","status":"passed","title":"should debug specific invalid numbers"},{"ancestorTitles":["SmsProviderService","getDeliveryReport"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService getDeliveryReport should return delivery report for message","status":"passed","title":"should return delivery report for message"},{"ancestorTitles":["SmsProviderService","getDeliveryReport"],"duration":46,"failureMessages":[],"fullName":"SmsProviderService getDeliveryReport should handle errors in getDeliveryReport","status":"passed","title":"should handle errors in getDeliveryReport"},{"ancestorTitles":["SmsProviderService","getProviderInfo"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService getProviderInfo should return provider information","status":"passed","title":"should return provider information"},{"ancestorTitles":["SmsProviderService","getBalance"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService getBalance should return mock balance","status":"passed","title":"should return mock balance"},{"ancestorTitles":["SmsProviderService","getSmsHistory"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService getSmsHistory should return empty SMS history","status":"passed","title":"should return empty SMS history"},{"ancestorTitles":["SmsProviderService","getSmsHistory"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService getSmsHistory should return empty SMS history for specific phone","status":"passed","title":"should return empty SMS history for specific phone"},{"ancestorTitles":["SmsProviderService","getBlacklist"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService getBlacklist should return empty blacklist","status":"passed","title":"should return empty blacklist"},{"ancestorTitles":["SmsProviderService","addToBlacklist"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService addToBlacklist should add phone to blacklist","status":"passed","title":"should add phone to blacklist"},{"ancestorTitles":["SmsProviderService","removeFromBlacklist"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService removeFromBlacklist should remove phone from blacklist","status":"passed","title":"should remove phone from blacklist"},{"ancestorTitles":["SmsProviderService","getStatistics"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService getStatistics should return mock statistics","status":"passed","title":"should return mock statistics"},{"ancestorTitles":["SmsProviderService","getStatistics"],"duration":7,"failureMessages":[],"fullName":"SmsProviderService getStatistics should return statistics for different period","status":"passed","title":"should return statistics for different period"},{"ancestorTitles":["SmsProviderService","validateMessage"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService validateMessage should validate correct message","status":"passed","title":"should validate correct message"},{"ancestorTitles":["SmsProviderService","validateMessage"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService validateMessage should reject message that is too long","status":"passed","title":"should reject message that is too long"},{"ancestorTitles":["SmsProviderService","validateMessage"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService validateMessage should reject message with forbidden characters","status":"passed","title":"should reject message with forbidden characters"},{"ancestorTitles":["SmsProviderService","validateMessage"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService validateMessage should reject message with multiple errors","status":"passed","title":"should reject message with multiple errors"},{"ancestorTitles":["SmsProviderService","getSupportedCountries"],"duration":11,"failureMessages":[],"fullName":"SmsProviderService getSupportedCountries should return list of supported countries","status":"passed","title":"should return list of supported countries"},{"ancestorTitles":["SmsProviderService","Error handling"],"duration":14,"failureMessages":[],"fullName":"SmsProviderService Error handling should handle errors gracefully in sendSms","status":"passed","title":"should handle errors gracefully in sendSms"},{"ancestorTitles":["SmsProviderService","Error handling"],"duration":4,"failureMessages":[],"fullName":"SmsProviderService Error handling should handle non-Error exceptions in sendSms","status":"passed","title":"should handle non-Error exceptions in sendSms"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":20708,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should handle large bulk SMS operations efficiently","status":"passed","title":"should handle large bulk SMS operations efficiently"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should cache phone validation efficiently","status":"passed","title":"should cache phone validation efficiently"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should handle provider info caching efficiently","status":"passed","title":"should handle provider info caching efficiently"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should handle supported countries caching efficiently","status":"passed","title":"should handle supported countries caching efficiently"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should handle message validation efficiently","status":"passed","title":"should handle message validation efficiently"},{"ancestorTitles":["SmsProviderService","Performance Tests"],"duration":227,"failureMessages":[],"fullName":"SmsProviderService Performance Tests should handle cost calculation efficiently","status":"passed","title":"should handle cost calculation efficiently"},{"ancestorTitles":["SmsProviderService","Caching Tests"],"duration":3,"failureMessages":[],"fullName":"SmsProviderService Caching Tests should cache phone validation results","status":"passed","title":"should cache phone validation results"},{"ancestorTitles":["SmsProviderService","Caching Tests"],"duration":5,"failureMessages":[],"fullName":"SmsProviderService Caching Tests should cache provider info","status":"passed","title":"should cache provider info"},{"ancestorTitles":["SmsProviderService","Caching Tests"],"duration":6,"failureMessages":[],"fullName":"SmsProviderService Caching Tests should cache supported countries","status":"passed","title":"should cache supported countries"},{"ancestorTitles":["SmsProviderService","Caching Tests"],"duration":3,"failureMessages":[],"fullName":"SmsProviderService Caching Tests should handle cache invalidation for phone validation","status":"passed","title":"should handle cache invalidation for phone validation"},{"ancestorTitles":["SmsProviderService","Edge Cases and Stress Tests"],"duration":209,"failureMessages":[],"fullName":"SmsProviderService Edge Cases and Stress Tests should handle very long messages efficiently","status":"passed","title":"should handle very long messages efficiently"},{"ancestorTitles":["SmsProviderService","Edge Cases and Stress Tests"],"duration":216,"failureMessages":[],"fullName":"SmsProviderService Edge Cases and Stress Tests should handle mixed character sets efficiently","status":"passed","title":"should handle mixed character sets efficiently"},{"ancestorTitles":["SmsProviderService","Edge Cases and Stress Tests"],"duration":4099,"failureMessages":[],"fullName":"SmsProviderService Edge Cases and Stress Tests should handle concurrent bulk operations","status":"passed","title":"should handle concurrent bulk operations"}]},{"numFailingTests":0,"numPassingTests":39,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858432772,"loadTestEnvironmentEnd":1759858414525,"loadTestEnvironmentStart":1759858414519,"runtime":18247,"setupAfterEnvEnd":1759858414567,"setupAfterEnvStart":1759858414562,"setupFilesEnd":1759858414525,"setupFilesStart":1759858414525,"slow":true,"start":1759858414525},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\notification\\tests\\notification.controller.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["NotificationController (Integration)","GET /notifications"],"duration":59,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications should return user notifications with pagination","status":"passed","title":"should return user notifications with pagination"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications"],"duration":67,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications should filter notifications by status","status":"passed","title":"should filter notifications by status"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications"],"duration":43,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications should filter notifications by type","status":"passed","title":"should filter notifications by type"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/unread-count"],"duration":41,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/unread-count should return unread count","status":"passed","title":"should return unread count"},{"ancestorTitles":["NotificationController (Integration)","PUT /notifications/:id/read"],"duration":48,"failureMessages":[],"fullName":"NotificationController (Integration) PUT /notifications/:id/read should mark notification as read","status":"passed","title":"should mark notification as read"},{"ancestorTitles":["NotificationController (Integration)","PUT /notifications/:id/read"],"duration":20,"failureMessages":[],"fullName":"NotificationController (Integration) PUT /notifications/:id/read should return 404 for non-existent notification","status":"passed","title":"should return 404 for non-existent notification"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/settings"],"duration":13,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/settings should return user notification settings","status":"passed","title":"should return user notification settings"},{"ancestorTitles":["NotificationController (Integration)","PUT /notifications/settings"],"duration":12,"failureMessages":[],"fullName":"NotificationController (Integration) PUT /notifications/settings should update user notification settings","status":"passed","title":"should update user notification settings"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/templates"],"duration":36,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/templates should return notification templates","status":"passed","title":"should return notification templates"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/templates"],"duration":35,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/templates should filter templates by type","status":"passed","title":"should filter templates by type"},{"ancestorTitles":["NotificationController (Integration)","POST /notifications/templates"],"duration":33,"failureMessages":[],"fullName":"NotificationController (Integration) POST /notifications/templates should create notification template","status":"passed","title":"should create notification template"},{"ancestorTitles":["NotificationController (Integration)","PUT /notifications/templates/:id"],"duration":34,"failureMessages":[],"fullName":"NotificationController (Integration) PUT /notifications/templates/:id should update notification template","status":"passed","title":"should update notification template"},{"ancestorTitles":["NotificationController (Integration)","PUT /notifications/templates/:id"],"duration":17,"failureMessages":[],"fullName":"NotificationController (Integration) PUT /notifications/templates/:id should return 404 for non-existent template","status":"passed","title":"should return 404 for non-existent template"},{"ancestorTitles":["NotificationController (Integration)","DELETE /notifications/templates/:id"],"duration":25,"failureMessages":[],"fullName":"NotificationController (Integration) DELETE /notifications/templates/:id should delete notification template","status":"passed","title":"should delete notification template"},{"ancestorTitles":["NotificationController (Integration)","DELETE /notifications/templates/:id"],"duration":14,"failureMessages":[],"fullName":"NotificationController (Integration) DELETE /notifications/templates/:id should return 404 for non-existent template","status":"passed","title":"should return 404 for non-existent template"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/statistics"],"duration":15,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/statistics should return notification statistics","status":"passed","title":"should return notification statistics"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/statistics"],"duration":13,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/statistics should filter statistics by period","status":"passed","title":"should filter statistics by period"},{"ancestorTitles":["NotificationController (Integration)","GET /notifications/statistics"],"duration":15,"failureMessages":[],"fullName":"NotificationController (Integration) GET /notifications/statistics should filter statistics by type","status":"passed","title":"should filter statistics by type"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":19,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should allow CUSTOMER role to access user notifications","status":"passed","title":"should allow CUSTOMER role to access user notifications"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":13,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should allow CUSTOMER role to access unread count","status":"passed","title":"should allow CUSTOMER role to access unread count"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":13,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should allow CUSTOMER role to access settings","status":"passed","title":"should allow CUSTOMER role to access settings"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":10,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should allow CUSTOMER role to update settings","status":"passed","title":"should allow CUSTOMER role to update settings"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":8,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should deny access for unauthorized users","status":"passed","title":"should deny access for unauthorized users"},{"ancestorTitles":["NotificationController (Integration)","Role-based access control"],"duration":11,"failureMessages":[],"fullName":"NotificationController (Integration) Role-based access control should deny access for insufficient permissions","status":"passed","title":"should deny access for insufficient permissions"},{"ancestorTitles":["NotificationController (Integration)","Tenant isolation"],"duration":57,"failureMessages":[],"fullName":"NotificationController (Integration) Tenant isolation should prevent access to other users notifications","status":"passed","title":"should prevent access to other users notifications"},{"ancestorTitles":["NotificationController (Integration)","Tenant isolation"],"duration":25,"failureMessages":[],"fullName":"NotificationController (Integration) Tenant isolation should prevent marking other users notifications as read","status":"passed","title":"should prevent marking other users notifications as read"},{"ancestorTitles":["NotificationController (Integration)","Tenant isolation"],"duration":71,"failureMessages":[],"fullName":"NotificationController (Integration) Tenant isolation should handle multiple users efficiently","status":"passed","title":"should handle multiple users efficiently"},{"ancestorTitles":["NotificationController (Integration)","Validation tests"],"duration":11,"failureMessages":[],"fullName":"NotificationController (Integration) Validation tests should validate template creation data","status":"passed","title":"should validate template creation data"},{"ancestorTitles":["NotificationController (Integration)","Validation tests"],"duration":24,"failureMessages":[],"fullName":"NotificationController (Integration) Validation tests should validate template update data","status":"passed","title":"should validate template update data"},{"ancestorTitles":["NotificationController (Integration)","Validation tests"],"duration":8,"failureMessages":[],"fullName":"NotificationController (Integration) Validation tests should validate pagination limits","status":"passed","title":"should validate pagination limits"},{"ancestorTitles":["NotificationController (Integration)","Validation tests"],"duration":9,"failureMessages":[],"fullName":"NotificationController (Integration) Validation tests should validate statistics period format","status":"passed","title":"should validate statistics period format"},{"ancestorTitles":["NotificationController (Integration)","Validation tests"],"duration":29,"failureMessages":[],"fullName":"NotificationController (Integration) Validation tests should validate bulk operations efficiently","status":"passed","title":"should validate bulk operations efficiently"},{"ancestorTitles":["NotificationController (Integration)","Error handling"],"duration":13,"failureMessages":[],"fullName":"NotificationController (Integration) Error handling should handle database errors gracefully","status":"passed","title":"should handle database errors gracefully"},{"ancestorTitles":["NotificationController (Integration)","Error handling"],"duration":12,"failureMessages":[],"fullName":"NotificationController (Integration) Error handling should handle service errors gracefully","status":"passed","title":"should handle service errors gracefully"},{"ancestorTitles":["NotificationController (Integration)","Error handling"],"duration":23,"failureMessages":[],"fullName":"NotificationController (Integration) Error handling should handle multiple error scenarios efficiently","status":"passed","title":"should handle multiple error scenarios efficiently"},{"ancestorTitles":["NotificationController (Integration)","Performance tests"],"duration":581,"failureMessages":[],"fullName":"NotificationController (Integration) Performance tests should handle large number of notifications efficiently","status":"passed","title":"should handle large number of notifications efficiently"},{"ancestorTitles":["NotificationController (Integration)","Performance tests"],"duration":151,"failureMessages":[],"fullName":"NotificationController (Integration) Performance tests should handle bulk template operations efficiently","status":"passed","title":"should handle bulk template operations efficiently"},{"ancestorTitles":["NotificationController (Integration)","Performance tests"],"duration":105,"failureMessages":[],"fullName":"NotificationController (Integration) Performance tests should handle concurrent requests efficiently","status":"passed","title":"should handle concurrent requests efficiently"},{"ancestorTitles":["NotificationController (Integration)","Performance tests"],"duration":53,"failureMessages":[],"fullName":"NotificationController (Integration) Performance tests should handle caching efficiently","status":"passed","title":"should handle caching efficiently"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858435201,"loadTestEnvironmentEnd":1759858432787,"loadTestEnvironmentStart":1759858432777,"runtime":2414,"setupAfterEnvEnd":1759858432820,"setupAfterEnvStart":1759858432817,"setupFilesEnd":1759858432787,"setupFilesStart":1759858432787,"slow":false,"start":1759858432787},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\product\\product.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProductController Pagination V2","GET /product/list-v2"],"duration":32,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/list-v2 должен возвращать продукты в новом формате { data, meta }","status":"passed","title":"должен возвращать продукты в новом формате { data, meta }"},{"ancestorTitles":["ProductController Pagination V2","GET /product/list-v2"],"duration":22,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/list-v2 должен корректно обрабатывать пагинацию","status":"passed","title":"должен корректно обрабатывать пагинацию"},{"ancestorTitles":["ProductController Pagination V2","GET /product/brand/:brandId/list-v2"],"duration":19,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/brand/:brandId/list-v2 должен возвращать продукты бренда в новом формате","status":"passed","title":"должен возвращать продукты бренда в новом формате"}]},{"numFailingTests":0,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858437725,"loadTestEnvironmentEnd":1759858435212,"loadTestEnvironmentStart":1759858435205,"runtime":2513,"setupAfterEnvEnd":1759858435242,"setupAfterEnvStart":1759858435240,"setupFilesEnd":1759858435212,"setupFilesStart":1759858435212,"slow":false,"start":1759858435212},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-admin.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":35,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 200: returns user statistics for admin","status":"passed","title":"200: returns user statistics for admin"},{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":16,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 403: regular user cannot access admin stats","status":"passed","title":"403: regular user cannot access admin stats"},{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":28,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/block/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/block/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":26,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/unblock/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/unblock/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":26,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/suspend/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/suspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":26,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/unsuspend/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/unsuspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":29,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/delete/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/delete/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":24,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/restore/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/restore/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":26,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/premium/upgrade/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/premium/upgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":22,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/premium/downgrade/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/premium/downgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":25,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/employee/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/employee/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":22,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/employee/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/employee/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":24,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/vip/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/vip/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":23,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/vip/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/vip/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":26,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/highvalue/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/highvalue/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":21,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/highvalue/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/highvalue/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":24,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/wholesale/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/wholesale/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":24,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/wholesale/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/wholesale/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":25,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/affiliate/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/affiliate/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":25,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/affiliate/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/affiliate/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/block/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/block/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/unblock/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/unblock/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/suspend/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/suspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/unsuspend/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/unsuspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":9,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/delete/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/delete/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/restore/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/restore/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":12,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/premium/upgrade/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/premium/upgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/premium/downgrade/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/premium/downgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/employee/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/employee/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/employee/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/employee/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":12,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/vip/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/vip/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":9,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/vip/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/vip/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/highvalue/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/highvalue/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/highvalue/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/highvalue/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/wholesale/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/wholesale/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":10,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/wholesale/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/wholesale/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/affiliate/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/affiliate/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":11,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/affiliate/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/affiliate/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":8,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 401: admin endpoints require auth","status":"passed","title":"401: admin endpoints require auth"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":33,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 403: regular user cannot access admin endpoints","status":"passed","title":"403: regular user cannot access admin endpoints"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":117,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can list users","status":"passed","title":"200: admin can list users"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":111,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 400: invalid query parameters","status":"passed","title":"400: invalid query parameters"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":230,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can create and delete users","status":"passed","title":"200: admin can create and delete users"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":157,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can update user profile","status":"passed","title":"200: admin can update user profile"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":25,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 409: duplicate email on update","status":"passed","title":"409: duplicate email on update"},{"ancestorTitles":["User Admin Integration Tests","Role management"],"duration":170,"failureMessages":[],"fullName":"User Admin Integration Tests Role management 200: admin can add and remove roles","status":"passed","title":"200: admin can add and remove roles"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858439173,"loadTestEnvironmentEnd":1759858437732,"loadTestEnvironmentStart":1759858437728,"runtime":1441,"setupAfterEnvEnd":1759858437762,"setupAfterEnvStart":1759858437759,"setupFilesEnd":1759858437732,"setupFilesStart":1759858437732,"slow":false,"start":1759858437732},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-profile.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":36,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 200: updates phone with valid number","status":"passed","title":"200: updates phone with valid number"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":15,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 400: rejects invalid phone format","status":"passed","title":"400: rejects invalid phone format"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":13,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":301,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 409: rejects duplicate phone for another user","status":"passed","title":"409: rejects duplicate phone for another user"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":38,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 200: user updates own profile","status":"passed","title":"200: user updates own profile"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":35,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 200: partial update only firstName","status":"passed","title":"200: partial update only firstName"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":10,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Profile Integration Tests","Password management"],"duration":77,"failureMessages":[],"fullName":"User Profile Integration Tests Password management 400: wrong old password","status":"passed","title":"400: wrong old password"},{"ancestorTitles":["User Profile Integration Tests","Misc endpoints"],"duration":15,"failureMessages":[],"fullName":"User Profile Integration Tests Misc endpoints 200: GET /user/me with minimal body","status":"passed","title":"200: GET /user/me with minimal body"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858440846,"loadTestEnvironmentEnd":1759858439179,"loadTestEnvironmentStart":1759858439175,"runtime":1667,"setupAfterEnvEnd":1759858439207,"setupAfterEnvStart":1759858439205,"setupFilesEnd":1759858439179,"setupFilesStart":1759858439179,"slow":false,"start":1759858439179},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-verification.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":23,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 401: requires auth for verification requests","status":"passed","title":"401: requires auth for verification requests"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":115,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: email verification request with auth","status":"passed","title":"200: email verification request with auth"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":115,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: phone verification request with auth","status":"passed","title":"200: phone verification request with auth"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":142,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 400: invalid verification codes","status":"passed","title":"400: invalid verification codes"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":144,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: admin can verify user email/phone","status":"passed","title":"200: admin can verify user email/phone"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":117,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 404: admin cannot verify non-existent user","status":"passed","title":"404: admin cannot verify non-existent user"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858442711,"loadTestEnvironmentEnd":1759858440854,"loadTestEnvironmentStart":1759858440850,"runtime":1857,"setupAfterEnvEnd":1759858440888,"setupAfterEnvStart":1759858440885,"setupFilesEnd":1759858440854,"setupFilesStart":1759858440854,"slow":false,"start":1759858440854},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\notification\\tests\\email-provider.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EmailProviderService","sendEmail"],"duration":123,"failureMessages":[],"fullName":"EmailProviderService sendEmail should send email successfully with valid email","status":"passed","title":"should send email successfully with valid email"},{"ancestorTitles":["EmailProviderService","sendEmail"],"duration":106,"failureMessages":[],"fullName":"EmailProviderService sendEmail should send email with HTML content","status":"passed","title":"should send email with HTML content"},{"ancestorTitles":["EmailProviderService","sendEmail"],"duration":5,"failureMessages":[],"fullName":"EmailProviderService sendEmail should fail with invalid email format","status":"passed","title":"should fail with invalid email format"},{"ancestorTitles":["EmailProviderService","sendEmail"],"duration":104,"failureMessages":[],"fullName":"EmailProviderService sendEmail should handle email with attachments","status":"passed","title":"should handle email with attachments"},{"ancestorTitles":["EmailProviderService","sendBulkEmails"],"duration":108,"failureMessages":[],"fullName":"EmailProviderService sendBulkEmails should send multiple emails successfully","status":"passed","title":"should send multiple emails successfully"},{"ancestorTitles":["EmailProviderService","sendBulkEmails"],"duration":109,"failureMessages":[],"fullName":"EmailProviderService sendBulkEmails should handle mixed success and failure in bulk emails","status":"passed","title":"should handle mixed success and failure in bulk emails"},{"ancestorTitles":["EmailProviderService","sendBulkEmails"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService sendBulkEmails should handle empty bulk email list","status":"passed","title":"should handle empty bulk email list"},{"ancestorTitles":["EmailProviderService","validateEmail"],"duration":4,"failureMessages":[],"fullName":"EmailProviderService validateEmail should validate correct email formats","status":"passed","title":"should validate correct email formats"},{"ancestorTitles":["EmailProviderService","validateEmail"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService validateEmail should reject invalid email formats","status":"passed","title":"should reject invalid email formats"},{"ancestorTitles":["EmailProviderService","getProviderInfo"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService getProviderInfo should return provider information","status":"passed","title":"should return provider information"},{"ancestorTitles":["EmailProviderService","getDeliveryStatus"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService getDeliveryStatus should return delivery status for message","status":"passed","title":"should return delivery status for message"},{"ancestorTitles":["EmailProviderService","getBounceList"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService getBounceList should return empty bounce list","status":"passed","title":"should return empty bounce list"},{"ancestorTitles":["EmailProviderService","getComplaintList"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService getComplaintList should return empty complaint list","status":"passed","title":"should return empty complaint list"},{"ancestorTitles":["EmailProviderService","validateAttachment"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService validateAttachment should validate string attachment within size limit","status":"passed","title":"should validate string attachment within size limit"},{"ancestorTitles":["EmailProviderService","validateAttachment"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService validateAttachment should validate buffer attachment within size limit","status":"passed","title":"should validate buffer attachment within size limit"},{"ancestorTitles":["EmailProviderService","validateAttachment"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService validateAttachment should reject attachment exceeding size limit","status":"passed","title":"should reject attachment exceeding size limit"},{"ancestorTitles":["EmailProviderService","validateAttachment"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService validateAttachment should reject invalid attachment content","status":"passed","title":"should reject invalid attachment content"},{"ancestorTitles":["EmailProviderService","getQuotaInfo"],"duration":4,"failureMessages":[],"fullName":"EmailProviderService getQuotaInfo should return quota information","status":"passed","title":"should return quota information"},{"ancestorTitles":["EmailProviderService","Error handling"],"duration":19,"failureMessages":[],"fullName":"EmailProviderService Error handling should handle errors gracefully in sendEmail","status":"passed","title":"should handle errors gracefully in sendEmail"},{"ancestorTitles":["EmailProviderService","Error handling"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService Error handling should handle non-Error exceptions in sendEmail","status":"passed","title":"should handle non-Error exceptions in sendEmail"},{"ancestorTitles":["EmailProviderService","Performance Tests"],"duration":1091,"failureMessages":[],"fullName":"EmailProviderService Performance Tests should handle large bulk email operations efficiently","status":"passed","title":"should handle large bulk email operations efficiently"},{"ancestorTitles":["EmailProviderService","Performance Tests"],"duration":4,"failureMessages":[],"fullName":"EmailProviderService Performance Tests should cache email validation efficiently","status":"passed","title":"should cache email validation efficiently"},{"ancestorTitles":["EmailProviderService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService Performance Tests should handle provider info caching efficiently","status":"passed","title":"should handle provider info caching efficiently"},{"ancestorTitles":["EmailProviderService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService Performance Tests should handle quota info caching efficiently","status":"passed","title":"should handle quota info caching efficiently"},{"ancestorTitles":["EmailProviderService","Performance Tests"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService Performance Tests should handle attachment validation efficiently","status":"passed","title":"should handle attachment validation efficiently"},{"ancestorTitles":["EmailProviderService","Caching Tests"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService Caching Tests should cache email validation results","status":"passed","title":"should cache email validation results"},{"ancestorTitles":["EmailProviderService","Caching Tests"],"duration":3,"failureMessages":[],"fullName":"EmailProviderService Caching Tests should cache provider info","status":"passed","title":"should cache provider info"},{"ancestorTitles":["EmailProviderService","Caching Tests"],"duration":2,"failureMessages":[],"fullName":"EmailProviderService Caching Tests should handle cache invalidation for email validation","status":"passed","title":"should handle cache invalidation for email validation"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858443934,"loadTestEnvironmentEnd":1759858442718,"loadTestEnvironmentStart":1759858442714,"runtime":1216,"setupAfterEnvEnd":1759858442757,"setupAfterEnvStart":1759858442754,"setupFilesEnd":1759858442718,"setupFilesStart":1759858442718,"slow":false,"start":1759858442718},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-flags.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":43,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: updates flags with valid data","status":"passed","title":"200: updates flags with valid data"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":38,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: updates only provided flags","status":"passed","title":"200: updates only provided flags"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":16,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: invalid data types","status":"passed","title":"400: invalid data types"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":16,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":29,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: accepts empty object","status":"passed","title":"200: accepts empty object"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":79,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: null and undefined values in flags","status":"passed","title":"400: null and undefined values in flags"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":13,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: array instead of object","status":"passed","title":"400: array instead of object"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858445345,"loadTestEnvironmentEnd":1759858443942,"loadTestEnvironmentStart":1759858443937,"runtime":1403,"setupAfterEnvEnd":1759858443991,"setupAfterEnvStart":1759858443988,"setupFilesEnd":1759858443942,"setupFilesStart":1759858443942,"slow":false,"start":1759858443942},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-addresses.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":25,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 401: requires auth for all address endpoints","status":"passed","title":"401: requires auth for all address endpoints"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":187,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 200: full CRUD flow with auth","status":"passed","title":"200: full CRUD flow with auth"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":28,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 400: validation errors on create","status":"passed","title":"400: validation errors on create"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":53,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 404: non-existent address operations","status":"passed","title":"404: non-existent address operations"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":35,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 400: invalid id parameter","status":"passed","title":"400: invalid id parameter"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":139,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 200: setting new default unsets previous default","status":"passed","title":"200: setting new default unsets previous default"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858446707,"loadTestEnvironmentEnd":1759858445353,"loadTestEnvironmentStart":1759858445348,"runtime":1353,"setupAfterEnvEnd":1759858445390,"setupAfterEnvStart":1759858445387,"setupFilesEnd":1759858445354,"setupFilesStart":1759858445354,"slow":false,"start":1759858445354},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-preferences.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":48,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: updates preferences with valid data","status":"passed","title":"200: updates preferences with valid data"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":52,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: updates only provided preferences","status":"passed","title":"200: updates only provided preferences"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":24,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 400: invalid enum values","status":"passed","title":"400: invalid enum values"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":17,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":40,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: accepts empty object","status":"passed","title":"200: accepts empty object"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":24,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 400: very long strings in preferences","status":"passed","title":"400: very long strings in preferences"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":171,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: special characters in preferences","status":"passed","title":"200: special characters in preferences"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858447520,"loadTestEnvironmentEnd":1759858446715,"loadTestEnvironmentStart":1759858446709,"runtime":805,"setupAfterEnvEnd":1759858446748,"setupAfterEnvStart":1759858446745,"setupFilesEnd":1759858446715,"setupFilesStart":1759858446715,"slow":false,"start":1759858446715},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\swagger-disabled.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Swagger Access Control (integration)","Swagger documentation endpoint"],"duration":1,"failureMessages":[],"fullName":"Swagger Access Control (integration) Swagger documentation endpoint should return 404 when SWAGGER_ENABLED=false","status":"passed","title":"should return 404 when SWAGGER_ENABLED=false"},{"ancestorTitles":["Swagger Access Control (integration)","Swagger documentation endpoint"],"duration":1,"failureMessages":[],"fullName":"Swagger Access Control (integration) Swagger documentation endpoint should return 404 for JSON endpoint when SWAGGER_ENABLED=false","status":"passed","title":"should return 404 for JSON endpoint when SWAGGER_ENABLED=false"},{"ancestorTitles":["Swagger Access Control (integration)","Swagger documentation endpoint"],"duration":15,"failureMessages":[],"fullName":"Swagger Access Control (integration) Swagger documentation endpoint should be accessible when SWAGGER_ENABLED=true","status":"passed","title":"should be accessible when SWAGGER_ENABLED=true"},{"ancestorTitles":["Swagger Access Control (integration)","Swagger documentation endpoint"],"duration":14,"failureMessages":[],"fullName":"Swagger Access Control (integration) Swagger documentation endpoint should serve OpenAPI JSON spec when SWAGGER_ENABLED=true","status":"passed","title":"should serve OpenAPI JSON spec when SWAGGER_ENABLED=true"},{"ancestorTitles":["Swagger Access Control (integration)","Environment-based defaults"],"duration":1,"failureMessages":[],"fullName":"Swagger Access Control (integration) Environment-based defaults should respect SWAGGER_ENABLED environment variable","status":"passed","title":"should respect SWAGGER_ENABLED environment variable"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858448579,"loadTestEnvironmentEnd":1759858447526,"loadTestEnvironmentStart":1759858447522,"runtime":1053,"setupAfterEnvEnd":1759858447557,"setupAfterEnvStart":1759858447555,"setupFilesEnd":1759858447526,"setupFilesStart":1759858447526,"slow":false,"start":1759858447526},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user-address\\user-address.controller.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":49,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should create address successfully","status":"passed","title":"should create address successfully"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":14,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should get addresses list","status":"passed","title":"should get addresses list"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":53,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should update address","status":"passed","title":"should update address"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":53,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should set default address","status":"passed","title":"should set default address"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":41,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should remove address","status":"passed","title":"should remove address"},{"ancestorTitles":["UserAddressController (integration)","Error Handling"],"duration":9,"failureMessages":[],"fullName":"UserAddressController (integration) Error Handling should return 401 when no token","status":"passed","title":"should return 401 when no token"},{"ancestorTitles":["UserAddressController (integration)","Error Handling"],"duration":11,"failureMessages":[],"fullName":"UserAddressController (integration) Error Handling should return 400 on validation error","status":"passed","title":"should return 400 on validation error"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858449596,"loadTestEnvironmentEnd":1759858448584,"loadTestEnvironmentStart":1759858448581,"runtime":1012,"setupAfterEnvEnd":1759858448611,"setupAfterEnvStart":1759858448608,"setupFilesEnd":1759858448584,"setupFilesStart":1759858448584,"slow":false,"start":1759858448584},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\rbac.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RBAC (e2e integration)","Guest (без токена)"],"duration":9,"failureMessages":[],"fullName":"RBAC (e2e integration) Guest (без токена) должен вернуть 401 при доступе к /auth/check без токена","status":"passed","title":"должен вернуть 401 при доступе к /auth/check без токена"},{"ancestorTitles":["RBAC (e2e integration)","USER роль (ограниченный доступ)"],"duration":16,"failureMessages":[],"fullName":"RBAC (e2e integration) USER роль (ограниченный доступ) должен разрешить проверку авторизации для USER → 200","status":"passed","title":"должен разрешить проверку авторизации для USER → 200"},{"ancestorTitles":["RBAC (e2e integration)","ADMIN роль (полный доступ)"],"duration":18,"failureMessages":[],"fullName":"RBAC (e2e integration) ADMIN роль (полный доступ) должен разрешить проверку авторизации для ADMIN → 200","status":"passed","title":"должен разрешить проверку авторизации для ADMIN → 200"},{"ancestorTitles":["RBAC (e2e integration)","Публичные endpoints (доступны всем)"],"duration":13,"failureMessages":[],"fullName":"RBAC (e2e integration) Публичные endpoints (доступны всем) должен разрешить доступ к health endpoint без токена → 200","status":"passed","title":"должен разрешить доступ к health endpoint без токена → 200"},{"ancestorTitles":["RBAC (e2e integration)","Проверка сообщений об ошибках RBAC"],"duration":9,"failureMessages":[],"fullName":"RBAC (e2e integration) Проверка сообщений об ошибках RBAC должен вернуть корректное русское сообщение об ошибке для 401","status":"passed","title":"должен вернуть корректное русское сообщение об ошибке для 401"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858450420,"loadTestEnvironmentEnd":1759858449606,"loadTestEnvironmentStart":1759858449599,"runtime":814,"setupAfterEnvEnd":1759858449632,"setupAfterEnvStart":1759858449630,"setupFilesEnd":1759858449606,"setupFilesStart":1759858449606,"slow":false,"start":1759858449606},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\security-headers.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Security Headers (integration)"],"duration":17,"failureMessages":[],"fullName":"Security Headers (integration) should include security headers on responses","status":"passed","title":"should include security headers on responses"},{"ancestorTitles":["Security Headers (integration)"],"duration":14,"failureMessages":[],"fullName":"Security Headers (integration) should not include ACAO for disallowed Origin when CORS is enabled","status":"passed","title":"should not include ACAO for disallowed Origin when CORS is enabled"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858451373,"loadTestEnvironmentEnd":1759858450425,"loadTestEnvironmentStart":1759858450422,"runtime":948,"setupAfterEnvEnd":1759858450454,"setupAfterEnvStart":1759858450452,"setupFilesEnd":1759858450425,"setupFilesStart":1759858450425,"slow":false,"start":1759858450425},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\input-validation.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в регистрации"],"duration":17,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в регистрации должен отклонить email с XSS скриптом","status":"passed","title":"должен отклонить email с XSS скриптом"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в регистрации"],"duration":11,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в регистрации должен отклонить email с javascript: протоколом","status":"passed","title":"должен отклонить email с javascript: протоколом"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в регистрации"],"duration":9,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в регистрации должен отклонить email с HTML тегами","status":"passed","title":"должен отклонить email с HTML тегами"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в регистрации"],"duration":13,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в регистрации должен отклонить слабый пароль","status":"passed","title":"должен отклонить слабый пароль"},{"ancestorTitles":["Input Validation and Sanitization (integration)","Защита от лишних полей (whitelist)"],"duration":10,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) Защита от лишних полей (whitelist) должен отклонить запрос с лишними полями","status":"passed","title":"должен отклонить запрос с лишними полями"},{"ancestorTitles":["Input Validation and Sanitization (integration)","Валидация длины строк"],"duration":10,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) Валидация длины строк должен отклонить слишком длинный email","status":"passed","title":"должен отклонить слишком длинный email"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в создании пользователя (Admin)"],"duration":2,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в создании пользователя (Admin) должен отклонить firstName с XSS скриптом","status":"passed","title":"должен отклонить firstName с XSS скриптом"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в создании пользователя (Admin)"],"duration":1,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в создании пользователя (Admin) должен отклонить lastName с HTML тегами","status":"passed","title":"должен отклонить lastName с HTML тегами"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в создании продукта"],"duration":2,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в создании продукта должен отклонить название продукта с XSS скриптом","status":"passed","title":"должен отклонить название продукта с XSS скриптом"},{"ancestorTitles":["Input Validation and Sanitization (integration)","XSS защита в создании продукта"],"duration":2,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) XSS защита в создании продукта должен отклонить название продукта с javascript: протоколом","status":"passed","title":"должен отклонить название продукта с javascript: протоколом"},{"ancestorTitles":["Input Validation and Sanitization (integration)","Валидация типов данных"],"duration":25,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) Валидация типов данных должен отклонить некорректный тип для числового поля","status":"passed","title":"должен отклонить некорректный тип для числового поля"},{"ancestorTitles":["Input Validation and Sanitization (integration)","Русские сообщения об ошибках"],"duration":11,"failureMessages":[],"fullName":"Input Validation and Sanitization (integration) Русские сообщения об ошибках должен возвращать сообщения об ошибках на русском языке","status":"passed","title":"должен возвращать сообщения об ошибках на русском языке"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858452159,"loadTestEnvironmentEnd":1759858451379,"loadTestEnvironmentStart":1759858451375,"runtime":780,"setupAfterEnvEnd":1759858451411,"setupAfterEnvStart":1759858451408,"setupFilesEnd":1759858451379,"setupFilesStart":1759858451379,"slow":false,"start":1759858451379},"testFilePath":"F:\\git\\online-store-backend\\tests\\integration\\auth-bruteforce.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BruteforceGuard profiles (integration)"],"duration":30,"failureMessages":[],"fullName":"BruteforceGuard profiles (integration) should return 429 after exceeding login attempts","status":"passed","title":"should return 429 after exceeding login attempts"},{"ancestorTitles":["BruteforceGuard profiles (integration)"],"duration":28,"failureMessages":[],"fullName":"BruteforceGuard profiles (integration) should return 429 after exceeding refresh attempts","status":"passed","title":"should return 429 after exceeding refresh attempts"},{"ancestorTitles":["BruteforceGuard profiles (integration)"],"duration":30,"failureMessages":[],"fullName":"BruteforceGuard profiles (integration) should return 429 after exceeding registration attempts","status":"passed","title":"should return 429 after exceeding registration attempts"}]},{"numFailingTests":0,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858452816,"loadTestEnvironmentEnd":1759858452165,"loadTestEnvironmentStart":1759858452161,"runtime":651,"setupAfterEnvEnd":1759858452192,"setupAfterEnvStart":1759858452190,"setupFilesEnd":1759858452165,"setupFilesStart":1759858452165,"slow":false,"start":1759858452165},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\user.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService","createUser"],"duration":15,"failureMessages":[],"fullName":"UserService createUser должен успешно создать обычного пользователя","status":"passed","title":"должен успешно создать обычного пользователя"},{"ancestorTitles":["UserService","createUser"],"duration":22,"failureMessages":[],"fullName":"UserService createUser должен создать пользователя с ADMIN ролью для специального email","status":"passed","title":"должен создать пользователя с ADMIN ролью для специального email"},{"ancestorTitles":["UserService","createUser"],"duration":78,"failureMessages":[],"fullName":"UserService createUser должен выбросить BadRequestException если пользователь уже существует","status":"passed","title":"должен выбросить BadRequestException если пользователь уже существует"},{"ancestorTitles":["UserService","getUser"],"duration":31,"failureMessages":[],"fullName":"UserService getUser должен успешно получить пользователя по ID","status":"passed","title":"должен успешно получить пользователя по ID"},{"ancestorTitles":["UserService","getUser"],"duration":9,"failureMessages":[],"fullName":"UserService getUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updateUser"],"duration":7,"failureMessages":[],"fullName":"UserService updateUser должен успешно обновить пользователя","status":"passed","title":"должен успешно обновить пользователя"},{"ancestorTitles":["UserService","updateUser"],"duration":7,"failureMessages":[],"fullName":"UserService updateUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updateUser"],"duration":8,"failureMessages":[],"fullName":"UserService updateUser должен выбросить ConflictException если email уже используется","status":"passed","title":"должен выбросить ConflictException если email уже используется"},{"ancestorTitles":["UserService","updateUser"],"duration":8,"failureMessages":[],"fullName":"UserService updateUser должен выбросить ConflictException (409) если репозиторий вернул SequelizeUniqueConstraintError","status":"passed","title":"должен выбросить ConflictException (409) если репозиторий вернул SequelizeUniqueConstraintError"},{"ancestorTitles":["UserService","removeUser"],"duration":5,"failureMessages":[],"fullName":"UserService removeUser должен успешно удалить пользователя","status":"passed","title":"должен успешно удалить пользователя"},{"ancestorTitles":["UserService","removeUser"],"duration":5,"failureMessages":[],"fullName":"UserService removeUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","addRole"],"duration":6,"failureMessages":[],"fullName":"UserService addRole должен успешно добавить роль пользователю","status":"passed","title":"должен успешно добавить роль пользователю"},{"ancestorTitles":["UserService","addRole"],"duration":4,"failureMessages":[],"fullName":"UserService addRole должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","addRole"],"duration":4,"failureMessages":[],"fullName":"UserService addRole должен выбросить NotFoundException если роль не найдена","status":"passed","title":"должен выбросить NotFoundException если роль не найдена"},{"ancestorTitles":["UserService","addRole"],"duration":4,"failureMessages":[],"fullName":"UserService addRole должен выбросить ConflictException если роль уже присвоена","status":"passed","title":"должен выбросить ConflictException если роль уже присвоена"},{"ancestorTitles":["UserService","removeUserRole"],"duration":5,"failureMessages":[],"fullName":"UserService removeUserRole должен успешно удалить роль у пользователя","status":"passed","title":"должен успешно удалить роль у пользователя"},{"ancestorTitles":["UserService","removeUserRole"],"duration":4,"failureMessages":[],"fullName":"UserService removeUserRole должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","findAuthenticatedUser"],"duration":16,"failureMessages":[],"fullName":"UserService findAuthenticatedUser должен успешно найти аутентифицированного пользователя","status":"passed","title":"должен успешно найти аутентифицированного пользователя"},{"ancestorTitles":["UserService","checkUserAuth"],"duration":4,"failureMessages":[],"fullName":"UserService checkUserAuth должен успешно проверить авторизацию пользователя","status":"passed","title":"должен успешно проверить авторизацию пользователя"},{"ancestorTitles":["UserService","checkUserAuth"],"duration":4,"failureMessages":[],"fullName":"UserService checkUserAuth должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","findUserByEmail"],"duration":4,"failureMessages":[],"fullName":"UserService findUserByEmail должен успешно найти пользователя по email","status":"passed","title":"должен успешно найти пользователя по email"},{"ancestorTitles":["UserService","findUserByEmail"],"duration":3,"failureMessages":[],"fullName":"UserService findUserByEmail должен вернуть null если пользователь не найден","status":"passed","title":"должен вернуть null если пользователь не найден"},{"ancestorTitles":["UserService","getListUsers"],"duration":3,"failureMessages":[],"fullName":"UserService getListUsers должен успешно получить список пользователей","status":"passed","title":"должен успешно получить список пользователей"},{"ancestorTitles":["UserService","getListUsers"],"duration":4,"failureMessages":[],"fullName":"UserService getListUsers должен выбросить NotFoundException если список пуст","status":"passed","title":"должен выбросить NotFoundException если список пуст"},{"ancestorTitles":["UserService","createUser - дополнительные случаи"],"duration":4,"failureMessages":[],"fullName":"UserService createUser - дополнительные случаи должен создать роль USER если она не существует","status":"passed","title":"должен создать роль USER если она не существует"},{"ancestorTitles":["UserService","updatePhone"],"duration":5,"failureMessages":[],"fullName":"UserService updatePhone должен выбросить ConflictException если телефон уже используется","status":"passed","title":"должен выбросить ConflictException если телефон уже используется"},{"ancestorTitles":["UserService","updateFlags"],"duration":4,"failureMessages":[],"fullName":"UserService updateFlags должен успешно обновить флаги пользователя","status":"passed","title":"должен успешно обновить флаги пользователя"},{"ancestorTitles":["UserService","updateFlags"],"duration":3,"failureMessages":[],"fullName":"UserService updateFlags должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updatePreferences"],"duration":4,"failureMessages":[],"fullName":"UserService updatePreferences должен успешно обновить предпочтения пользователя","status":"passed","title":"должен успешно обновить предпочтения пользователя"},{"ancestorTitles":["UserService","updatePreferences"],"duration":7,"failureMessages":[],"fullName":"UserService updatePreferences должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":9,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyEmailFlag: успешно","status":"passed","title":"verifyEmailFlag: успешно"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":6,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyEmailFlag: 404","status":"passed","title":"verifyEmailFlag: 404"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":6,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyPhoneFlag: успешно","status":"passed","title":"verifyPhoneFlag: успешно"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":8,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyPhoneFlag: 404","status":"passed","title":"verifyPhoneFlag: 404"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":5,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock blockUser: успешно","status":"passed","title":"blockUser: успешно"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":5,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock blockUser: 404","status":"passed","title":"blockUser: 404"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":7,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock unblockUser: успешно","status":"passed","title":"unblockUser: успешно"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":6,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock unblockUser: 404","status":"passed","title":"unblockUser: 404"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend suspendUser: успешно","status":"passed","title":"suspendUser: успешно"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend suspendUser: 404","status":"passed","title":"suspendUser: 404"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend unsuspendUser: успешно","status":"passed","title":"unsuspendUser: успешно"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":3,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend unsuspendUser: 404","status":"passed","title":"unsuspendUser: 404"},{"ancestorTitles":["UserService","changePassword"],"duration":12,"failureMessages":[],"fullName":"UserService changePassword 404: пользователь не найден","status":"passed","title":"404: пользователь не найден"},{"ancestorTitles":["UserService","changePassword"],"duration":3,"failureMessages":[],"fullName":"UserService changePassword 400: неверный текущий пароль","status":"passed","title":"400: неверный текущий пароль"},{"ancestorTitles":["UserService","self-service verification"],"duration":3,"failureMessages":[],"fullName":"UserService self-service verification requestVerificationCode: вызывает репозиторий с корректными аргументами","status":"passed","title":"requestVerificationCode: вызывает репозиторий с корректными аргументами"},{"ancestorTitles":["UserService","self-service verification"],"duration":3,"failureMessages":[],"fullName":"UserService self-service verification confirmVerificationCode: успех при true","status":"passed","title":"confirmVerificationCode: успех при true"},{"ancestorTitles":["UserService","self-service verification"],"duration":4,"failureMessages":[],"fullName":"UserService self-service verification confirmVerificationCode: 400 при неверном/просроченном коде","status":"passed","title":"confirmVerificationCode: 400 при неверном/просроченном коде"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858453220,"loadTestEnvironmentEnd":1759858452826,"loadTestEnvironmentStart":1759858452820,"runtime":393,"setupAfterEnvEnd":1759858452859,"setupAfterEnvStart":1759858452856,"setupFilesEnd":1759858452827,"setupFilesStart":1759858452827,"slow":false,"start":1759858452827},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\order\\order.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["OrderService","adminGetStoreOrderList"],"duration":7,"failureMessages":[],"fullName":"OrderService adminGetStoreOrderList должен получить список заказов магазина","status":"passed","title":"должен получить список заказов магазина"},{"ancestorTitles":["OrderService","adminGetStoreOrderList"],"duration":20,"failureMessages":[],"fullName":"OrderService adminGetStoreOrderList должен выбросить NotFoundException если список заказов пуст","status":"passed","title":"должен выбросить NotFoundException если список заказов пуст"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен получить список заказов пользователя","status":"passed","title":"должен получить список заказов пользователя"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":6,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен выбросить NotFoundException если список заказов пользователя пуст","status":"passed","title":"должен выбросить NotFoundException если список заказов пользователя пуст"},{"ancestorTitles":["OrderService","adminGetOrderUser"],"duration":3,"failureMessages":[],"fullName":"OrderService adminGetOrderUser должен получить заказ пользователя","status":"passed","title":"должен получить заказ пользователя"},{"ancestorTitles":["OrderService","adminGetOrderUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderUser должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен создать новый заказ если у пользователя нет заказов","status":"passed","title":"должен создать новый заказ если у пользователя нет заказов"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен вернуть существующий заказ если у пользователя уже есть заказы","status":"passed","title":"должен вернуть существующий заказ если у пользователя уже есть заказы"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен выбросить ошибку если userId не указан","status":"passed","title":"должен выбросить ошибку если userId не указан"},{"ancestorTitles":["OrderService","adminRemoveOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminRemoveOrder должен удалить заказ","status":"passed","title":"должен удалить заказ"},{"ancestorTitles":["OrderService","adminRemoveOrder"],"duration":2,"failureMessages":[],"fullName":"OrderService adminRemoveOrder должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","userGetOrderList"],"duration":7,"failureMessages":[],"fullName":"OrderService userGetOrderList должен получить список заказов пользователя","status":"passed","title":"должен получить список заказов пользователя"},{"ancestorTitles":["OrderService","userGetOrderList"],"duration":2,"failureMessages":[],"fullName":"OrderService userGetOrderList должен выбросить NotFoundException если заказы не найдены","status":"passed","title":"должен выбросить NotFoundException если заказы не найдены"},{"ancestorTitles":["OrderService","userGetOrder"],"duration":2,"failureMessages":[],"fullName":"OrderService userGetOrder должен получить заказ пользователя","status":"passed","title":"должен получить заказ пользователя"},{"ancestorTitles":["OrderService","userGetOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService userGetOrder должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","userCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService userCreateOrder должен создать заказ пользователя","status":"passed","title":"должен создать заказ пользователя"},{"ancestorTitles":["OrderService","guestCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService guestCreateOrder должен создать заказ гостя","status":"passed","title":"должен создать заказ гостя"},{"ancestorTitles":["OrderService","guestCreateOrder"],"duration":2,"failureMessages":[],"fullName":"OrderService guestCreateOrder должен выбросить ошибку если userId или cartId не указаны","status":"passed","title":"должен выбросить ошибку если userId или cartId не указаны"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":3,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен создать заказ и очистить корзину","status":"passed","title":"должен создать заказ и очистить корзину"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":2,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":3,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен выбросить NotFoundException если корзина пуста","status":"passed","title":"должен выбросить NotFoundException если корзина пуста"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":2,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен пропустить проверку пользователя если userId равен 0","status":"passed","title":"должен пропустить проверку пользователя если userId равен 0"},{"ancestorTitles":["OrderService","notFound (private method)"],"duration":3,"failureMessages":[],"fullName":"OrderService notFound (private method) должен выбросить NotFoundException с правильным сообщением","status":"passed","title":"должен выбросить NotFoundException с правильным сообщением"},{"ancestorTitles":["OrderService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"OrderService Edge cases должен обработать заказ с нулевой суммой","status":"passed","title":"должен обработать заказ с нулевой суммой"},{"ancestorTitles":["OrderService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"OrderService Edge cases должен обработать заказ без комментария","status":"passed","title":"должен обработать заказ без комментария"},{"ancestorTitles":["OrderService","Error handling"],"duration":3,"failureMessages":[],"fullName":"OrderService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["OrderService","Error handling"],"duration":10,"failureMessages":[],"fullName":"OrderService Error handling должен корректно обрабатывать ошибки при работе с корзиной","status":"passed","title":"должен корректно обрабатывать ошибки при работе с корзиной"}]},{"numFailingTests":0,"numPassingTests":39,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858453833,"loadTestEnvironmentEnd":1759858453227,"loadTestEnvironmentStart":1759858453222,"runtime":606,"setupAfterEnvEnd":1759858453256,"setupAfterEnvStart":1759858453253,"setupFilesEnd":1759858453227,"setupFilesStart":1759858453227,"slow":false,"start":1759858453227},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\product\\product.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProductService","productCreate"],"duration":10,"failureMessages":[],"fullName":"ProductService productCreate должен успешно создать товар с изображением","status":"passed","title":"должен успешно создать товар с изображением"},{"ancestorTitles":["ProductService","productCreate"],"duration":40,"failureMessages":[],"fullName":"ProductService productCreate должен пробросить ошибку если FileService.createFile выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если FileService.createFile выбрасывает исключение"},{"ancestorTitles":["ProductService","productCreate"],"duration":5,"failureMessages":[],"fullName":"ProductService productCreate должен пробросить ошибку если ProductRepository.create выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.create выбрасывает исключение"},{"ancestorTitles":["ProductService","getProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService getProduct должен успешно получить товар по ID","status":"passed","title":"должен успешно получить товар по ID"},{"ancestorTitles":["ProductService","getProduct"],"duration":11,"failureMessages":[],"fullName":"ProductService getProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","getProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService getProduct должен пробросить ошибку если ProductRepository.findProductProperty выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.findProductProperty выбрасывает исключение"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":7,"failureMessages":[],"fullName":"ProductService getListProductV2 должен успешно получить список товаров с поиском и сортировкой","status":"passed","title":"должен успешно получить список товаров с поиском и сортировкой"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":6,"failureMessages":[],"fullName":"ProductService getListProductV2 должен использовать значения по умолчанию для сортировки","status":"passed","title":"должен использовать значения по умолчанию для сортировки"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":6,"failureMessages":[],"fullName":"ProductService getListProductV2 должен корректно обработать page=0","status":"passed","title":"должен корректно обработать page=0"},{"ancestorTitles":["ProductService","getListProductByBrandIdV2"],"duration":4,"failureMessages":[],"fullName":"ProductService getListProductByBrandIdV2 должен успешно получить товары по бренду","status":"passed","title":"должен успешно получить товары по бренду"},{"ancestorTitles":["ProductService","getListProductByBrandIdV2"],"duration":6,"failureMessages":[],"fullName":"ProductService getListProductByBrandIdV2 должен пробросить ошибку если ProductRepository.findListProductByBrandId выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.findListProductByBrandId выбрасывает исключение"},{"ancestorTitles":["ProductService","getListProductByCategoryIdV2"],"duration":5,"failureMessages":[],"fullName":"ProductService getListProductByCategoryIdV2 должен успешно получить товары по категории","status":"passed","title":"должен успешно получить товары по категории"},{"ancestorTitles":["ProductService","getAllByBrandIdAndCategoryIdV2"],"duration":14,"failureMessages":[],"fullName":"ProductService getAllByBrandIdAndCategoryIdV2 должен успешно получить товары по бренду и категории","status":"passed","title":"должен успешно получить товары по бренду и категории"},{"ancestorTitles":["ProductService","removeProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService removeProduct должен успешно удалить товар","status":"passed","title":"должен успешно удалить товар"},{"ancestorTitles":["ProductService","removeProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","removeProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление файла не удалось","status":"passed","title":"должен выбросить ConflictException если удаление файла не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление характеристик не удалось","status":"passed","title":"должен выбросить ConflictException если удаление характеристик не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление рейтинга не удалось","status":"passed","title":"должен выбросить ConflictException если удаление рейтинга не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление товара не удалось","status":"passed","title":"должен выбросить ConflictException если удаление товара не удалось"},{"ancestorTitles":["ProductService","updateProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService updateProduct должен успешно обновить товар","status":"passed","title":"должен успешно обновить товар"},{"ancestorTitles":["ProductService","updateProduct"],"duration":3,"failureMessages":[],"fullName":"ProductService updateProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","updateProduct"],"duration":3,"failureMessages":[],"fullName":"ProductService updateProduct должен пробросить ошибку если FileService.updateFile выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если FileService.updateFile выбрасывает исключение"},{"ancestorTitles":["ProductService","updateProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService updateProduct должен пробросить ошибку если ProductRepository.updateProduct выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.updateProduct выбрасывает исключение"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":6,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен корректно рассчитать пагинацию для обычных значений","status":"passed","title":"должен корректно рассчитать пагинацию для обычных значений"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":3,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен исправить page=0 на page=1","status":"passed","title":"должен исправить page=0 на page=1"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":15,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен обработать отрицательные значения page","status":"passed","title":"должен обработать отрицательные значения page"},{"ancestorTitles":["ProductService","getMetadata (private method)"],"duration":4,"failureMessages":[],"fullName":"ProductService getMetadata (private method) должен корректно рассчитать метаданные","status":"passed","title":"должен корректно рассчитать метаданные"},{"ancestorTitles":["ProductService","getMetadata (private method)"],"duration":3,"failureMessages":[],"fullName":"ProductService getMetadata (private method) должен обработать случай с пустым списком","status":"passed","title":"должен обработать случай с пустым списком"},{"ancestorTitles":["ProductService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать пустой поисковый запрос","status":"passed","title":"должен обработать пустой поисковый запрос"},{"ancestorTitles":["ProductService","Edge cases"],"duration":6,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать null значения в зависимостях","status":"passed","title":"должен обработать null значения в зависимостях"},{"ancestorTitles":["ProductService","Edge cases"],"duration":6,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать большие значения пагинации","status":"passed","title":"должен обработать большие значения пагинации"},{"ancestorTitles":["ProductService","Edge cases"],"duration":5,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать ошибки при работе с файлами","status":"passed","title":"должен обработать ошибки при работе с файлами"},{"ancestorTitles":["ProductService","Integration scenarios"],"duration":6,"failureMessages":[],"fullName":"ProductService Integration scenarios должен выполнить полный цикл создания и удаления товара","status":"passed","title":"должен выполнить полный цикл создания и удаления товара"},{"ancestorTitles":["ProductService","Integration scenarios"],"duration":7,"failureMessages":[],"fullName":"ProductService Integration scenarios должен выполнить поиск с различными фильтрами","status":"passed","title":"должен выполнить поиск с различными фильтрами"},{"ancestorTitles":["ProductService","Error handling"],"duration":7,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["ProductService","Error handling"],"duration":7,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки файловой системы","status":"passed","title":"должен корректно обрабатывать ошибки файловой системы"},{"ancestorTitles":["ProductService","Error handling"],"duration":7,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки рейтингового сервиса","status":"passed","title":"должен корректно обрабатывать ошибки рейтингового сервиса"},{"ancestorTitles":["ProductService","Performance scenarios"],"duration":6,"failureMessages":[],"fullName":"ProductService Performance scenarios должен эффективно обрабатывать большие списки товаров","status":"passed","title":"должен эффективно обрабатывать большие списки товаров"},{"ancestorTitles":["ProductService","Performance scenarios"],"duration":15,"failureMessages":[],"fullName":"ProductService Performance scenarios должен корректно обрабатывать пустые результаты поиска","status":"passed","title":"должен корректно обрабатывать пустые результаты поиска"}]},{"numFailingTests":0,"numPassingTests":30,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858454700,"loadTestEnvironmentEnd":1759858453862,"loadTestEnvironmentStart":1759858453843,"runtime":836,"setupAfterEnvEnd":1759858454142,"setupAfterEnvStart":1759858454093,"setupFilesEnd":1759858453864,"setupFilesStart":1759858453864,"slow":false,"start":1759858453864},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\token\\token.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TokenService","generateAccessToken"],"duration":8,"failureMessages":[],"fullName":"TokenService generateAccessToken должен успешно сгенерировать access токен","status":"passed","title":"должен успешно сгенерировать access токен"},{"ancestorTitles":["TokenService","generateAccessToken"],"duration":19,"failureMessages":[],"fullName":"TokenService generateAccessToken должен пробросить ошибку если JwtService.signAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.signAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":5,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен успешно сгенерировать refresh токен","status":"passed","title":"должен успешно сгенерировать refresh токен"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":5,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен пробросить ошибку если RefreshTokenRepository.createRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если RefreshTokenRepository.createRefreshToken выбрасывает исключение"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":7,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен пробросить ошибку если JwtService.signAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.signAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен успешно декодировать валидный refresh токен","status":"passed","title":"должен успешно декодировать валидный refresh токен"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":7,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен выбросить UnprocessableEntityException для истекшего токена","status":"passed","title":"должен выбросить UnprocessableEntityException для истекшего токена"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен выбросить UnprocessableEntityException для неверного формата токена","status":"passed","title":"должен выбросить UnprocessableEntityException для неверного формата токена"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен успешно получить пользователя из payload","status":"passed","title":"должен успешно получить пользователя из payload"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен выбросить UnprocessableEntityException для отсутствующего subject","status":"passed","title":"должен выбросить UnprocessableEntityException для отсутствующего subject"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен пробросить ошибку если UserRepository.findUser выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если UserRepository.findUser выбрасывает исключение"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен успешно получить сохраненный refresh токен","status":"passed","title":"должен успешно получить сохраненный refresh токен"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен выбросить UnprocessableEntityException для отсутствующего jti","status":"passed","title":"должен выбросить UnprocessableEntityException для отсутствующего jti"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен вернуть null если токен не найден","status":"passed","title":"должен вернуть null если токен не найден"},{"ancestorTitles":["TokenService","decodedAccessToken"],"duration":4,"failureMessages":[],"fullName":"TokenService decodedAccessToken должен успешно декодировать access токен","status":"passed","title":"должен успешно декодировать access токен"},{"ancestorTitles":["TokenService","decodedAccessToken"],"duration":3,"failureMessages":[],"fullName":"TokenService decodedAccessToken должен пробросить ошибку если JwtService.verifyAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.verifyAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":9,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен успешно обновить refresh токен","status":"passed","title":"должен успешно обновить refresh токен"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен выбросить NotFoundException если refresh токен не найден","status":"passed","title":"должен выбросить NotFoundException если refresh токен не найден"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен выбросить UnprocessableEntityException если пользователь не найден","status":"passed","title":"должен выбросить UnprocessableEntityException если пользователь не найден"},{"ancestorTitles":["TokenService","createAccessTokenFromRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService createAccessTokenFromRefreshToken должен успешно создать access токен из refresh токена","status":"passed","title":"должен успешно создать access токен из refresh токена"},{"ancestorTitles":["TokenService","hashRefreshToken"],"duration":60,"failureMessages":[],"fullName":"TokenService hashRefreshToken должен успешно захешировать refresh токен","status":"passed","title":"должен успешно захешировать refresh токен"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":2,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен успешно получить дату истечения токена","status":"passed","title":"должен успешно получить дату истечения токена"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":4,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен вернуть undefined если токен не содержит exp","status":"passed","title":"должен вернуть undefined если токен не содержит exp"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":2,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен вернуть undefined если токен невалидный","status":"passed","title":"должен вернуть undefined если токен невалидный"},{"ancestorTitles":["TokenService","removeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService removeRefreshToken должен удалить единственный refresh токен","status":"passed","title":"должен удалить единственный refresh токен"},{"ancestorTitles":["TokenService","removeRefreshToken"],"duration":2,"failureMessages":[],"fullName":"TokenService removeRefreshToken должен удалить все refresh токены если их больше одного","status":"passed","title":"должен удалить все refresh токены если их больше одного"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен успешно ротировать refresh токен","status":"passed","title":"должен успешно ротировать refresh токен"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить NotFoundException если токен не найден","status":"passed","title":"должен выбросить NotFoundException если токен не найден"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить UnprocessableEntityException если пользователь токена не совпадает","status":"passed","title":"должен выбросить UnprocessableEntityException если пользователь токена не совпадает"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить UnprocessableEntityException если токен истек","status":"passed","title":"должен выбросить UnprocessableEntityException если токен истек"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858454940,"loadTestEnvironmentEnd":1759858454705,"loadTestEnvironmentStart":1759858454701,"runtime":235,"setupAfterEnvEnd":1759858454734,"setupAfterEnvStart":1759858454732,"setupFilesEnd":1759858454705,"setupFilesStart":1759858454705,"slow":false,"start":1759858454705},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\responses\\paginate\\paginated.response.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PaginatedResponse"],"duration":2,"failureMessages":[],"fullName":"PaginatedResponse должен создавать объект с правильной структурой","status":"passed","title":"должен создавать объект с правильной структурой"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858455324,"loadTestEnvironmentEnd":1759858454947,"loadTestEnvironmentStart":1759858454942,"runtime":377,"setupAfterEnvEnd":1759858454986,"setupAfterEnvStart":1759858454983,"setupFilesEnd":1759858454947,"setupFilesStart":1759858454947,"slow":false,"start":1759858454947},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\cart\\cart.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CartService","getCart"],"duration":18,"failureMessages":[],"fullName":"CartService getCart должен получить корзину, создать новую или пробросить ошибку","status":"passed","title":"должен получить корзину, создать новую или пробросить ошибку"},{"ancestorTitles":["CartService","appendToCart"],"duration":6,"failureMessages":[],"fullName":"CartService appendToCart должен добавить товар, создать корзину или выбросить ошибки","status":"passed","title":"должен добавить товар, создать корзину или выбросить ошибки"},{"ancestorTitles":["CartService","Cart operations"],"duration":8,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию increment","status":"passed","title":"должен выполнить операцию increment"},{"ancestorTitles":["CartService","Cart operations"],"duration":3,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию decrement","status":"passed","title":"должен выполнить операцию decrement"},{"ancestorTitles":["CartService","Cart operations"],"duration":3,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию removeProductFromCart","status":"passed","title":"должен выполнить операцию removeProductFromCart"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":5,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен очистить корзину","status":"passed","title":"должен очистить корзину"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":4,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен создать новую корзину и очистить если cartId отсутствует","status":"passed","title":"должен создать новую корзину и очистить если cartId отсутствует"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":3,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно трансформировать данные корзины с товарами","status":"passed","title":"должен корректно трансформировать данные корзины с товарами"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно трансформировать пустую корзину","status":"passed","title":"должен корректно трансформировать пустую корзину"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":2,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно обработать корзину без товаров","status":"passed","title":"должен корректно обработать корзину без товаров"},{"ancestorTitles":["CartService","findCart (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService findCart (private method) должен вернуть корзину если она найдена","status":"passed","title":"должен вернуть корзину если она найдена"},{"ancestorTitles":["CartService","findCart (private method)"],"duration":2,"failureMessages":[],"fullName":"CartService findCart (private method) должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["CartService","findProduct (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService findProduct (private method) должен вернуть товар если он найден","status":"passed","title":"должен вернуть товар если он найден"},{"ancestorTitles":["CartService","findProduct (private method)"],"duration":8,"failureMessages":[],"fullName":"CartService findProduct (private method) должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["CartService","notFound (private method)"],"duration":4,"failureMessages":[],"fullName":"CartService notFound (private method) должен выбросить NotFoundException с правильным сообщением","status":"passed","title":"должен выбросить NotFoundException с правильным сообщением"},{"ancestorTitles":["CartService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"CartService Edge cases должен обработать корзину с несколькими товарами","status":"passed","title":"должен обработать корзину с несколькими товарами"},{"ancestorTitles":["CartService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"CartService Edge cases должен обработать товар с нулевой ценой","status":"passed","title":"должен обработать товар с нулевой ценой"},{"ancestorTitles":["CartService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"CartService Edge cases должен обработать товар с дробной ценой","status":"passed","title":"должен обработать товар с дробной ценой"},{"ancestorTitles":["CartService","Integration scenarios"],"duration":5,"failureMessages":[],"fullName":"CartService Integration scenarios должен выполнить полный цикл работы с корзиной","status":"passed","title":"должен выполнить полный цикл работы с корзиной"},{"ancestorTitles":["CartService","Error handling"],"duration":3,"failureMessages":[],"fullName":"CartService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["CartService","Error handling"],"duration":3,"failureMessages":[],"fullName":"CartService Error handling должен корректно обрабатывать ошибки при работе с товарами","status":"passed","title":"должен корректно обрабатывать ошибки при работе с товарами"}]},{"numFailingTests":0,"numPassingTests":40,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858455895,"loadTestEnvironmentEnd":1759858455331,"loadTestEnvironmentStart":1759858455327,"runtime":564,"setupAfterEnvEnd":1759858455364,"setupAfterEnvStart":1759858455360,"setupFilesEnd":1759858455331,"setupFilesStart":1759858455331,"slow":false,"start":1759858455331},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\notification\\notification.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["NotificationService","createNotification"],"duration":11,"failureMessages":[],"fullName":"NotificationService createNotification should create notification successfully","status":"passed","title":"should create notification successfully"},{"ancestorTitles":["NotificationService","createNotification"],"duration":49,"failureMessages":[],"fullName":"NotificationService createNotification should throw BadRequestException on create failure","status":"passed","title":"should throw BadRequestException on create failure"},{"ancestorTitles":["NotificationService","getNotificationById"],"duration":5,"failureMessages":[],"fullName":"NotificationService getNotificationById should return notification for user","status":"passed","title":"should return notification for user"},{"ancestorTitles":["NotificationService","getNotificationById"],"duration":5,"failureMessages":[],"fullName":"NotificationService getNotificationById should return notification without user filter for admin","status":"passed","title":"should return notification without user filter for admin"},{"ancestorTitles":["NotificationService","getNotificationById"],"duration":6,"failureMessages":[],"fullName":"NotificationService getNotificationById should return null when notification not found","status":"passed","title":"should return null when notification not found"},{"ancestorTitles":["NotificationService","getNotifications"],"duration":18,"failureMessages":[],"fullName":"NotificationService getNotifications should return paginated notifications with filters","status":"passed","title":"should return paginated notifications with filters"},{"ancestorTitles":["NotificationService","getNotifications"],"duration":7,"failureMessages":[],"fullName":"NotificationService getNotifications should apply tenant isolation by requiring userId","status":"passed","title":"should apply tenant isolation by requiring userId"},{"ancestorTitles":["NotificationService","updateNotification"],"duration":6,"failureMessages":[],"fullName":"NotificationService updateNotification should update notification successfully","status":"passed","title":"should update notification successfully"},{"ancestorTitles":["NotificationService","updateNotification"],"duration":5,"failureMessages":[],"fullName":"NotificationService updateNotification should throw NotFoundException when notification not found","status":"passed","title":"should throw NotFoundException when notification not found"},{"ancestorTitles":["NotificationService","deleteNotification"],"duration":4,"failureMessages":[],"fullName":"NotificationService deleteNotification should delete notification successfully","status":"passed","title":"should delete notification successfully"},{"ancestorTitles":["NotificationService","deleteNotification"],"duration":6,"failureMessages":[],"fullName":"NotificationService deleteNotification should throw NotFoundException when notification not found","status":"passed","title":"should throw NotFoundException when notification not found"},{"ancestorTitles":["NotificationService","markAsRead"],"duration":6,"failureMessages":[],"fullName":"NotificationService markAsRead should mark notification as read","status":"passed","title":"should mark notification as read"},{"ancestorTitles":["NotificationService","getUnreadCount"],"duration":5,"failureMessages":[],"fullName":"NotificationService getUnreadCount should return unread count for user","status":"passed","title":"should return unread count for user"},{"ancestorTitles":["NotificationService","getStatistics"],"duration":9,"failureMessages":[],"fullName":"NotificationService getStatistics should return notification statistics","status":"passed","title":"should return notification statistics"},{"ancestorTitles":["NotificationService","getStatistics"],"duration":6,"failureMessages":[],"fullName":"NotificationService getStatistics should use cache for repeated statistics calls","status":"passed","title":"should use cache for repeated statistics calls"},{"ancestorTitles":["NotificationService","sendNotification"],"duration":6,"failureMessages":[],"fullName":"NotificationService sendNotification should send email notification successfully","status":"passed","title":"should send email notification successfully"},{"ancestorTitles":["NotificationService","sendNotification"],"duration":6,"failureMessages":[],"fullName":"NotificationService sendNotification should handle send failure","status":"passed","title":"should handle send failure"},{"ancestorTitles":["NotificationService","getTemplates"],"duration":16,"failureMessages":[],"fullName":"NotificationService getTemplates should return templates with filters","status":"passed","title":"should return templates with filters"},{"ancestorTitles":["NotificationService","getTemplates"],"duration":7,"failureMessages":[],"fullName":"NotificationService getTemplates should use cache for repeated template calls","status":"passed","title":"should use cache for repeated template calls"},{"ancestorTitles":["NotificationService","getTemplateByName"],"duration":4,"failureMessages":[],"fullName":"NotificationService getTemplateByName should return template by name","status":"passed","title":"should return template by name"},{"ancestorTitles":["NotificationService","markAsUnread"],"duration":7,"failureMessages":[],"fullName":"NotificationService markAsUnread should mark notification as unread","status":"passed","title":"should mark notification as unread"},{"ancestorTitles":["NotificationService","archiveNotification"],"duration":4,"failureMessages":[],"fullName":"NotificationService archiveNotification should archive notification","status":"passed","title":"should archive notification"},{"ancestorTitles":["NotificationService","unarchiveNotification"],"duration":6,"failureMessages":[],"fullName":"NotificationService unarchiveNotification should unarchive notification","status":"passed","title":"should unarchive notification"},{"ancestorTitles":["NotificationService","sendBulkNotifications"],"duration":6,"failureMessages":[],"fullName":"NotificationService sendBulkNotifications should send multiple notifications successfully","status":"passed","title":"should send multiple notifications successfully"},{"ancestorTitles":["NotificationService","sendBulkNotifications"],"duration":4,"failureMessages":[],"fullName":"NotificationService sendBulkNotifications should handle partial failures in bulk notifications","status":"passed","title":"should handle partial failures in bulk notifications"},{"ancestorTitles":["NotificationService","createTemplate"],"duration":5,"failureMessages":[],"fullName":"NotificationService createTemplate should create template successfully","status":"passed","title":"should create template successfully"},{"ancestorTitles":["NotificationService","createTemplate"],"duration":6,"failureMessages":[],"fullName":"NotificationService createTemplate should throw BadRequestException when required fields are missing","status":"passed","title":"should throw BadRequestException when required fields are missing"},{"ancestorTitles":["NotificationService","getTemplateById"],"duration":4,"failureMessages":[],"fullName":"NotificationService getTemplateById should return template by id","status":"passed","title":"should return template by id"},{"ancestorTitles":["NotificationService","getTemplateById"],"duration":3,"failureMessages":[],"fullName":"NotificationService getTemplateById should return null when template not found","status":"passed","title":"should return null when template not found"},{"ancestorTitles":["NotificationService","updateTemplate"],"duration":4,"failureMessages":[],"fullName":"NotificationService updateTemplate should update template successfully","status":"passed","title":"should update template successfully"},{"ancestorTitles":["NotificationService","updateTemplate"],"duration":4,"failureMessages":[],"fullName":"NotificationService updateTemplate should throw NotFoundException when template not found","status":"passed","title":"should throw NotFoundException when template not found"},{"ancestorTitles":["NotificationService","deleteTemplate"],"duration":7,"failureMessages":[],"fullName":"NotificationService deleteTemplate should delete template successfully","status":"passed","title":"should delete template successfully"},{"ancestorTitles":["NotificationService","deleteTemplate"],"duration":4,"failureMessages":[],"fullName":"NotificationService deleteTemplate should throw NotFoundException when template not found","status":"passed","title":"should throw NotFoundException when template not found"},{"ancestorTitles":["NotificationService","createTemplateFromNotification"],"duration":4,"failureMessages":[],"fullName":"NotificationService createTemplateFromNotification should create template from notification successfully","status":"passed","title":"should create template from notification successfully"},{"ancestorTitles":["NotificationService","createTemplateFromNotification"],"duration":5,"failureMessages":[],"fullName":"NotificationService createTemplateFromNotification should throw NotFoundException when notification not found","status":"passed","title":"should throw NotFoundException when notification not found"},{"ancestorTitles":["NotificationService","parsePeriod"],"duration":4,"failureMessages":[],"fullName":"NotificationService parsePeriod should parse period correctly","status":"passed","title":"should parse period correctly"},{"ancestorTitles":["NotificationService","parsePeriod"],"duration":4,"failureMessages":[],"fullName":"NotificationService parsePeriod should throw BadRequestException for invalid period","status":"passed","title":"should throw BadRequestException for invalid period"},{"ancestorTitles":["NotificationService","Performance Tests"],"duration":6,"failureMessages":[],"fullName":"NotificationService Performance Tests should handle large bulk notifications efficiently","status":"passed","title":"should handle large bulk notifications efficiently"},{"ancestorTitles":["NotificationService","Performance Tests"],"duration":4,"failureMessages":[],"fullName":"NotificationService Performance Tests should cache statistics efficiently","status":"passed","title":"should cache statistics efficiently"},{"ancestorTitles":["NotificationService","Performance Tests"],"duration":4,"failureMessages":[],"fullName":"NotificationService Performance Tests should handle template caching efficiently","status":"passed","title":"should handle template caching efficiently"}]},{"numFailingTests":0,"numPassingTests":19,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858456247,"loadTestEnvironmentEnd":1759858455903,"loadTestEnvironmentStart":1759858455899,"runtime":344,"setupAfterEnvEnd":1759858455938,"setupAfterEnvStart":1759858455936,"setupFilesEnd":1759858455903,"setupFilesStart":1759858455903,"slow":false,"start":1759858455903},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\auth\\auth.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AuthService","registration"],"duration":7,"failureMessages":[],"fullName":"AuthService registration должен успешно зарегистрировать нового пользователя","status":"passed","title":"должен успешно зарегистрировать нового пользователя"},{"ancestorTitles":["AuthService","registration"],"duration":3,"failureMessages":[],"fullName":"AuthService registration должен успешно зарегистрировать пользователя с ADMIN ролью для специального email","status":"passed","title":"должен успешно зарегистрировать пользователя с ADMIN ролью для специального email"},{"ancestorTitles":["AuthService","registration"],"duration":12,"failureMessages":[],"fullName":"AuthService registration должен пробросить ошибку если UserService.createUser выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если UserService.createUser выбрасывает исключение"},{"ancestorTitles":["AuthService","registration"],"duration":3,"failureMessages":[],"fullName":"AuthService registration должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение"},{"ancestorTitles":["AuthService","login"],"duration":4,"failureMessages":[],"fullName":"AuthService login должен успешно авторизовать пользователя с корректными данными","status":"passed","title":"должен успешно авторизовать пользователя с корректными данными"},{"ancestorTitles":["AuthService","login"],"duration":5,"failureMessages":[],"fullName":"AuthService login должен выбросить UnauthorizedException для несуществующего email","status":"passed","title":"должен выбросить UnauthorizedException для несуществующего email"},{"ancestorTitles":["AuthService","login"],"duration":7,"failureMessages":[],"fullName":"AuthService login должен выбросить UnauthorizedException для неверного пароля","status":"passed","title":"должен выбросить UnauthorizedException для неверного пароля"},{"ancestorTitles":["AuthService","login"],"duration":6,"failureMessages":[],"fullName":"AuthService login должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение"},{"ancestorTitles":["AuthService","logout"],"duration":3,"failureMessages":[],"fullName":"AuthService logout должен успешно выполнить logout","status":"passed","title":"должен успешно выполнить logout"},{"ancestorTitles":["AuthService","logout"],"duration":2,"failureMessages":[],"fullName":"AuthService logout должен пробросить ошибку если TokenService.decodeRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.decodeRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","logout"],"duration":2,"failureMessages":[],"fullName":"AuthService logout должен пробросить ошибку если TokenService.removeRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.removeRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":4,"failureMessages":[],"fullName":"AuthService updateAccessToken должен успешно обновить access токен","status":"passed","title":"должен успешно обновить access токен"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":3,"failureMessages":[],"fullName":"AuthService updateAccessToken должен пробросить ошибку если TokenService.rotateRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.rotateRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":3,"failureMessages":[],"fullName":"AuthService updateAccessToken должен логировать ошибку при неудачном обновлении токена","status":"passed","title":"должен логировать ошибку при неудачном обновлении токена"},{"ancestorTitles":["AuthService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать пустой email в DTO","status":"passed","title":"должен обработать пустой email в DTO"},{"ancestorTitles":["AuthService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать пустой пароль в DTO","status":"passed","title":"должен обработать пустой пароль в DTO"},{"ancestorTitles":["AuthService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать null значения в зависимостях","status":"passed","title":"должен обработать null значения в зависимостях"},{"ancestorTitles":["AuthService","getToken (private method)"],"duration":3,"failureMessages":[],"fullName":"AuthService getToken (private method) должен возвращать токен с refresh токеном","status":"passed","title":"должен возвращать токен с refresh токеном"},{"ancestorTitles":["AuthService","getToken (private method)"],"duration":10,"failureMessages":[],"fullName":"AuthService getToken (private method) должен возвращать токен без refresh токена","status":"passed","title":"должен возвращать токен без refresh токена"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858456555,"loadTestEnvironmentEnd":1759858456252,"loadTestEnvironmentStart":1759858456249,"runtime":302,"setupAfterEnvEnd":1759858456280,"setupAfterEnvStart":1759858456277,"setupFilesEnd":1759858456253,"setupFilesStart":1759858456253,"slow":false,"start":1759858456253},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\tests\\user-flags.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":9,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен успешно обновить флаги пользователя","status":"passed","title":"должен успешно обновить флаги пользователя"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":5,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен обновить только переданные флаги","status":"passed","title":"должен обновить только переданные флаги"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":12,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен обработать пустой объект флагов","status":"passed","title":"должен обработать пустой объект флагов"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен успешно обновить предпочтения пользователя","status":"passed","title":"должен успешно обновить предпочтения пользователя"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":8,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен обновить только переданные предпочтения","status":"passed","title":"должен обновить только переданные предпочтения"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен обработать пустой объект предпочтений","status":"passed","title":"должен обработать пустой объект предпочтений"},{"ancestorTitles":["UserService - Flags and Preferences","getUserStats"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences getUserStats должен вернуть статистику пользователей","status":"passed","title":"должен вернуть статистику пользователей"},{"ancestorTitles":["UserService - Flags and Preferences","getUserStats"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences getUserStats должен вернуть статистику с нулевыми значениями","status":"passed","title":"должен вернуть статистику с нулевыми значениями"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при обновлении флагов","status":"passed","title":"должен обработать ошибку репозитория при обновлении флагов"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при обновлении предпочтений","status":"passed","title":"должен обработать ошибку репозитория при обновлении предпочтений"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при получении статистики","status":"passed","title":"должен обработать ошибку репозитория при получении статистики"},{"ancestorTitles":["UserService - Flags and Preferences","Data validation edge cases"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences Data validation edge cases должен обработать все возможные флаги","status":"passed","title":"должен обработать все возможные флаги"},{"ancestorTitles":["UserService - Flags and Preferences","Data validation edge cases"],"duration":3,"failureMessages":[],"fullName":"UserService - Flags and Preferences Data validation edge cases должен обработать все возможные предпочтения","status":"passed","title":"должен обработать все возможные предпочтения"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858456901,"loadTestEnvironmentEnd":1759858456560,"loadTestEnvironmentStart":1759858456557,"runtime":340,"setupAfterEnvEnd":1759858456593,"setupAfterEnvStart":1759858456590,"setupFilesEnd":1759858456561,"setupFilesStart":1759858456561,"slow":false,"start":1759858456561},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\strategies\\jwt.strategy.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":2,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен вернуть данные пользователя для валидного payload","status":"passed","title":"должен вернуть данные пользователя для валидного payload"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":8,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен бросить ошибку если пользователь не найден","status":"passed","title":"должен бросить ошибку если пользователь не найден"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":2,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен корректно обработать payload с admin ролью","status":"passed","title":"должен корректно обработать payload с admin ролью"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен корректно обработать пользователей с разными email","status":"passed","title":"должен корректно обработать пользователей с разными email"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен передать корректный userId в checkUserAuth","status":"passed","title":"должен передать корректный userId в checkUserAuth"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен обработать ошибку от UserService","status":"passed","title":"должен обработать ошибку от UserService"},{"ancestorTitles":["JwtStrategy (unit)","validate"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) validate должен вернуть CheckResponse даже если checkUserAuth возвращает объект с минимальными полями","status":"passed","title":"должен вернуть CheckResponse даже если checkUserAuth возвращает объект с минимальными полями"},{"ancestorTitles":["JwtStrategy (unit)","Конфигурация стратегии"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) Конфигурация стратегии должен использовать secretOrKey из JwtSettings","status":"passed","title":"должен использовать secretOrKey из JwtSettings"},{"ancestorTitles":["JwtStrategy (unit)","Конфигурация стратегии"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) Конфигурация стратегии должен извлекать JWT из Authorization header","status":"passed","title":"должен извлекать JWT из Authorization header"},{"ancestorTitles":["JwtStrategy (unit)","Конфигурация стратегии"],"duration":5,"failureMessages":[],"fullName":"JwtStrategy (unit) Конфигурация стратегии не должен игнорировать истечение токена (ignoreExpiration: false)","status":"passed","title":"не должен игнорировать истечение токена (ignoreExpiration: false)"},{"ancestorTitles":["JwtStrategy (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) Граничные случаи должен обработать payload с минимальным userId","status":"passed","title":"должен обработать payload с минимальным userId"},{"ancestorTitles":["JwtStrategy (unit)","Граничные случаи"],"duration":2,"failureMessages":[],"fullName":"JwtStrategy (unit) Граничные случаи должен обработать payload с большим userId","status":"passed","title":"должен обработать payload с большим userId"},{"ancestorTitles":["JwtStrategy (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) Граничные случаи должен обработать пользователя без ролей","status":"passed","title":"должен обработать пользователя без ролей"},{"ancestorTitles":["JwtStrategy (unit)","Производительность"],"duration":1,"failureMessages":[],"fullName":"JwtStrategy (unit) Производительность должен обрабатывать множественные валидации быстро","status":"passed","title":"должен обрабатывать множественные валидации быстро"}]},{"numFailingTests":0,"numPassingTests":50,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858457201,"loadTestEnvironmentEnd":1759858456908,"loadTestEnvironmentStart":1759858456904,"runtime":293,"setupAfterEnvEnd":1759858456935,"setupAfterEnvStart":1759858456933,"setupFilesEnd":1759858456908,"setupFilesStart":1759858456908,"slow":false,"start":1759858456908},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\notification\\tests\\template-renderer.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":7,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should render template with variables successfully","status":"passed","title":"should render template with variables successfully"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should render template with single variable","status":"passed","title":"should render template with single variable"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":4,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should render template with repeated variables","status":"passed","title":"should render template with repeated variables"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should render template with different data types","status":"passed","title":"should render template with different data types"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should handle null and undefined values","status":"passed","title":"should handle null and undefined values"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should fail with empty template","status":"passed","title":"should fail with empty template"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should fail with null template","status":"passed","title":"should fail with null template"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should fail with missing variables","status":"passed","title":"should fail with missing variables"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":7,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should fail with multiple missing variables","status":"passed","title":"should fail with multiple missing variables"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should handle template with no variables","status":"passed","title":"should handle template with no variables"},{"ancestorTitles":["TemplateRendererService","renderTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService renderTemplate should handle extra variables not used in template","status":"passed","title":"should handle extra variables not used in template"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should validate correct template","status":"passed","title":"should validate correct template"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should validate template with no variables","status":"passed","title":"should validate template with no variables"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should reject empty template","status":"passed","title":"should reject empty template"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should reject null template","status":"passed","title":"should reject null template"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should reject template with unbalanced braces","status":"passed","title":"should reject template with unbalanced braces"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should reject template with empty variables","status":"passed","title":"should reject template with empty variables"},{"ancestorTitles":["TemplateRendererService","validateTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService validateTemplate should handle multiple validation errors","status":"passed","title":"should handle multiple validation errors"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should extract variables from template","status":"passed","title":"should extract variables from template"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should extract unique variables from template with duplicates","status":"passed","title":"should extract unique variables from template with duplicates"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should return empty array for template with no variables","status":"passed","title":"should return empty array for template with no variables"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should return empty array for empty template","status":"passed","title":"should return empty array for empty template"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":9,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should return empty array for null template","status":"passed","title":"should return empty array for null template"},{"ancestorTitles":["TemplateRendererService","extractVariables"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService extractVariables should handle variables with spaces","status":"passed","title":"should handle variables with spaces"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":4,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should sanitize template by removing dangerous HTML tags","status":"passed","title":"should sanitize template by removing dangerous HTML tags"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should remove iframe tags","status":"passed","title":"should remove iframe tags"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should remove object and embed tags","status":"passed","title":"should remove object and embed tags"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should normalize whitespace","status":"passed","title":"should normalize whitespace"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should return empty string for empty template","status":"passed","title":"should return empty string for empty template"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should return empty string for null template","status":"passed","title":"should return empty string for null template"},{"ancestorTitles":["TemplateRendererService","sanitizeTemplate"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService sanitizeTemplate should preserve template variables during sanitization","status":"passed","title":"should preserve template variables during sanitization"},{"ancestorTitles":["TemplateRendererService","getSupportedSyntax"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService getSupportedSyntax should return supported syntax","status":"passed","title":"should return supported syntax"},{"ancestorTitles":["TemplateRendererService","Error handling"],"duration":21,"failureMessages":[],"fullName":"TemplateRendererService Error handling should handle errors gracefully in renderTemplate","status":"passed","title":"should handle errors gracefully in renderTemplate"},{"ancestorTitles":["TemplateRendererService","Error handling"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Error handling should handle non-Error exceptions in renderTemplate","status":"passed","title":"should handle non-Error exceptions in renderTemplate"},{"ancestorTitles":["TemplateRendererService","Error handling"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Error handling should handle errors in validateTemplate","status":"passed","title":"should handle errors in validateTemplate"},{"ancestorTitles":["TemplateRendererService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Edge cases should handle template with only variables","status":"passed","title":"should handle template with only variables"},{"ancestorTitles":["TemplateRendererService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Edge cases should handle template with nested braces in text","status":"passed","title":"should handle template with nested braces in text"},{"ancestorTitles":["TemplateRendererService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Edge cases should handle variables with special characters","status":"passed","title":"should handle variables with special characters"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should handle large template rendering efficiently","status":"passed","title":"should handle large template rendering efficiently"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should cache template validation efficiently","status":"passed","title":"should cache template validation efficiently"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should cache variable extraction efficiently","status":"passed","title":"should cache variable extraction efficiently"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should handle template sanitization efficiently","status":"passed","title":"should handle template sanitization efficiently"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should handle bulk template rendering efficiently","status":"passed","title":"should handle bulk template rendering efficiently"},{"ancestorTitles":["TemplateRendererService","Performance Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Performance Tests should handle complex template operations efficiently","status":"passed","title":"should handle complex template operations efficiently"},{"ancestorTitles":["TemplateRendererService","Caching Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Caching Tests should cache template validation results","status":"passed","title":"should cache template validation results"},{"ancestorTitles":["TemplateRendererService","Caching Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Caching Tests should cache variable extraction results","status":"passed","title":"should cache variable extraction results"},{"ancestorTitles":["TemplateRendererService","Caching Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Caching Tests should handle cache invalidation for template validation","status":"passed","title":"should handle cache invalidation for template validation"},{"ancestorTitles":["TemplateRendererService","Edge Cases and Stress Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Edge Cases and Stress Tests should handle very long templates efficiently","status":"passed","title":"should handle very long templates efficiently"},{"ancestorTitles":["TemplateRendererService","Edge Cases and Stress Tests"],"duration":2,"failureMessages":[],"fullName":"TemplateRendererService Edge Cases and Stress Tests should handle templates with many variables efficiently","status":"passed","title":"should handle templates with many variables efficiently"},{"ancestorTitles":["TemplateRendererService","Edge Cases and Stress Tests"],"duration":3,"failureMessages":[],"fullName":"TemplateRendererService Edge Cases and Stress Tests should handle concurrent template operations","status":"passed","title":"should handle concurrent template operations"}]},{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858457504,"loadTestEnvironmentEnd":1759858457212,"loadTestEnvironmentStart":1759858457209,"runtime":292,"setupAfterEnvEnd":1759858457240,"setupAfterEnvStart":1759858457238,"setupFilesEnd":1759858457212,"setupFilesStart":1759858457212,"slow":false,"start":1759858457212},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\guards\\role.guard.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RoleGuard (unit)","Публичные endpoints (без @Roles)"],"duration":6,"failureMessages":[],"fullName":"RoleGuard (unit) Публичные endpoints (без @Roles) должен разрешить доступ если роли не требуются","status":"passed","title":"должен разрешить доступ если роли не требуются"},{"ancestorTitles":["RoleGuard (unit)","Публичные endpoints (без @Roles)"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Публичные endpoints (без @Roles) должен разрешить доступ если роли undefined","status":"passed","title":"должен разрешить доступ если роли undefined"},{"ancestorTitles":["RoleGuard (unit)","Отсутствие Authorization header"],"duration":11,"failureMessages":[],"fullName":"RoleGuard (unit) Отсутствие Authorization header должен вернуть 401 если Authorization header отсутствует","status":"passed","title":"должен вернуть 401 если Authorization header отсутствует"},{"ancestorTitles":["RoleGuard (unit)","Отсутствие Authorization header"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Отсутствие Authorization header должен вернуть 401 если Authorization header пустая строка","status":"passed","title":"должен вернуть 401 если Authorization header пустая строка"},{"ancestorTitles":["RoleGuard (unit)","Невалидный Bearer token"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Невалидный Bearer token должен вернуть 401 если токен не начинается с \"Bearer \"","status":"passed","title":"должен вернуть 401 если токен не начинается с \"Bearer \""},{"ancestorTitles":["RoleGuard (unit)","Невалидный Bearer token"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Невалидный Bearer token должен вернуть 401 если токен начинается с \"Basic \" (неправильная схема)","status":"passed","title":"должен вернуть 401 если токен начинается с \"Basic \" (неправильная схема)"},{"ancestorTitles":["RoleGuard (unit)","Невалидный Bearer token"],"duration":5,"failureMessages":[],"fullName":"RoleGuard (unit) Невалидный Bearer token должен вернуть 401 если после \"Bearer \" нет токена","status":"passed","title":"должен вернуть 401 если после \"Bearer \" нет токена"},{"ancestorTitles":["RoleGuard (unit)","Невалидный Bearer token"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Невалидный Bearer token должен обработать ошибку если токен только пробелы после \"Bearer \"","status":"passed","title":"должен обработать ошибку если токен только пробелы после \"Bearer \""},{"ancestorTitles":["RoleGuard (unit)","Пользователь без ролей"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Пользователь без ролей должен вернуть 403 если у пользователя нет ролей (roles undefined)","status":"passed","title":"должен вернуть 403 если у пользователя нет ролей (roles undefined)"},{"ancestorTitles":["RoleGuard (unit)","Пользователь без ролей"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Пользователь без ролей должен вернуть 403 если у пользователя пустой массив ролей","status":"passed","title":"должен вернуть 403 если у пользователя пустой массив ролей"},{"ancestorTitles":["RoleGuard (unit)","Недостаточные права (роли не совпадают)"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Недостаточные права (роли не совпадают) должен вернуть false если роль пользователя не совпадает с требуемой","status":"passed","title":"должен вернуть false если роль пользователя не совпадает с требуемой"},{"ancestorTitles":["RoleGuard (unit)","Недостаточные права (роли не совпадают)"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Недостаточные права (роли не совпадают) должен вернуть false если ни одна из ролей пользователя не подходит","status":"passed","title":"должен вернуть false если ни одна из ролей пользователя не подходит"},{"ancestorTitles":["RoleGuard (unit)","Успешная авторизация"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Успешная авторизация должен разрешить доступ если роль пользователя совпадает","status":"passed","title":"должен разрешить доступ если роль пользователя совпадает"},{"ancestorTitles":["RoleGuard (unit)","Успешная авторизация"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Успешная авторизация должен разрешить доступ если у пользователя есть роль ADMIN","status":"passed","title":"должен разрешить доступ если у пользователя есть роль ADMIN"},{"ancestorTitles":["RoleGuard (unit)","Успешная авторизация"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Успешная авторизация должен разрешить доступ если у пользователя есть одна из требуемых ролей","status":"passed","title":"должен разрешить доступ если у пользователя есть одна из требуемых ролей"},{"ancestorTitles":["RoleGuard (unit)","Успешная авторизация"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Успешная авторизация должен разрешить доступ если у пользователя множественные роли","status":"passed","title":"должен разрешить доступ если у пользователя множественные роли"},{"ancestorTitles":["RoleGuard (unit)","Кэширование role sets"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Кэширование role sets должен использовать кэш для одинаковых наборов ролей","status":"passed","title":"должен использовать кэш для одинаковых наборов ролей"},{"ancestorTitles":["RoleGuard (unit)","Кэширование role sets"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Кэширование role sets должен работать с разными порядками ролей (кэш нормализует)","status":"passed","title":"должен работать с разными порядками ролей (кэш нормализует)"},{"ancestorTitles":["RoleGuard (unit)","Обработка ошибок TokenService"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Обработка ошибок TokenService должен обработать TokenService ошибку и вернуть 403","status":"passed","title":"должен обработать TokenService ошибку и вернуть 403"},{"ancestorTitles":["RoleGuard (unit)","Обработка ошибок TokenService"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Обработка ошибок TokenService должен обработать TokenService ошибку с неизвестным типом","status":"passed","title":"должен обработать TokenService ошибку с неизвестным типом"},{"ancestorTitles":["RoleGuard (unit)","Обработка ошибок TokenService"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Обработка ошибок TokenService должен пробросить UnauthorizedException от TokenService","status":"passed","title":"должен пробросить UnauthorizedException от TokenService"},{"ancestorTitles":["RoleGuard (unit)","Обработка ошибок TokenService"],"duration":2,"failureMessages":[],"fullName":"RoleGuard (unit) Обработка ошибок TokenService должен пробросить ForbiddenException от TokenService","status":"passed","title":"должен пробросить ForbiddenException от TokenService"},{"ancestorTitles":["RoleGuard (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Граничные случаи должен обработать множественные требуемые роли","status":"passed","title":"должен обработать множественные требуемые роли"},{"ancestorTitles":["RoleGuard (unit)","Граничные случаи"],"duration":4,"failureMessages":[],"fullName":"RoleGuard (unit) Граничные случаи должен обработать регистрозависимость ролей","status":"passed","title":"должен обработать регистрозависимость ролей"},{"ancestorTitles":["RoleGuard (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"RoleGuard (unit) Граничные случаи должен корректно обрабатывать токен с пробелами","status":"passed","title":"должен корректно обрабатывать токен с пробелами"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858457769,"loadTestEnvironmentEnd":1759858457510,"loadTestEnvironmentStart":1759858457507,"runtime":259,"setupAfterEnvEnd":1759858457539,"setupAfterEnvStart":1759858457537,"setupFilesEnd":1759858457510,"setupFilesStart":1759858457510,"slow":false,"start":1759858457510},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\tests\\user.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService","updatePhone"],"duration":3,"failureMessages":[],"fullName":"UserService updatePhone updates phone and returns user with id and phone","status":"passed","title":"updates phone and returns user with id and phone"},{"ancestorTitles":["UserService","updatePhone"],"duration":1,"failureMessages":[],"fullName":"UserService updatePhone throws NotFoundException when user not updated","status":"passed","title":"throws NotFoundException when user not updated"},{"ancestorTitles":["UserService","updatePhone"],"duration":1,"failureMessages":[],"fullName":"UserService updatePhone maps SequelizeValidationError to BadRequestException","status":"passed","title":"maps SequelizeValidationError to BadRequestException"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword throws NotFoundException when user not found","status":"passed","title":"throws NotFoundException when user not found"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword throws BadRequestException when old password mismatch","status":"passed","title":"throws BadRequestException when old password mismatch"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword updates password on success","status":"passed","title":"updates password on success"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458056,"loadTestEnvironmentEnd":1759858457775,"loadTestEnvironmentStart":1759858457770,"runtime":281,"setupAfterEnvEnd":1759858457810,"setupAfterEnvStart":1759858457808,"setupFilesEnd":1759858457775,"setupFilesStart":1759858457775,"slow":false,"start":1759858457775},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user-address\\user-address.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserAddressService"],"duration":11,"failureMessages":[],"fullName":"UserAddressService createAddress: creates non-default address","status":"passed","title":"createAddress: creates non-default address"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService createAddress: creates default address and returns refreshed entity","status":"passed","title":"createAddress: creates default address and returns refreshed entity"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService getAddresses: returns list","status":"passed","title":"getAddresses: returns list"},{"ancestorTitles":["UserAddressService"],"duration":2,"failureMessages":[],"fullName":"UserAddressService getAddress: should return entity when found","status":"passed","title":"getAddress: should return entity when found"},{"ancestorTitles":["UserAddressService"],"duration":7,"failureMessages":[],"fullName":"UserAddressService getAddress: should throw NotFoundException when not found","status":"passed","title":"getAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService updateAddress: should update and return entity","status":"passed","title":"updateAddress: should update and return entity"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService updateAddress: should throw NotFoundException when not found","status":"passed","title":"updateAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService updateAddress: should return refreshed entity when is_default true","status":"passed","title":"updateAddress: should return refreshed entity when is_default true"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService removeAddress: should remove address successfully","status":"passed","title":"removeAddress: should remove address successfully"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService removeAddress: should throw NotFoundException when not found","status":"passed","title":"removeAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService setDefaultAddress: should set default address successfully","status":"passed","title":"setDefaultAddress: should set default address successfully"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService setDefaultAddress: should throw NotFoundException when not found","status":"passed","title":"setDefaultAddress: should throw NotFoundException when not found"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458163,"loadTestEnvironmentEnd":1759858458065,"loadTestEnvironmentStart":1759858458061,"runtime":97,"setupAfterEnvEnd":1759858458093,"setupAfterEnvStart":1759858458091,"setupFilesEnd":1759858458066,"setupFilesStart":1759858458066,"slow":false,"start":1759858458066},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\validators\\password-strength.validator.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Валидные пароли"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Валидные пароли должен принять все валидные пароли","status":"passed","title":"должен принять все валидные пароли"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Слабые пароли (должны быть отклонены)"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Слабые пароли (должны быть отклонены) должен отклонить пароль короче 8 символов","status":"passed","title":"должен отклонить пароль короче 8 символов"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Слабые пароли (должны быть отклонены)"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Слабые пароли (должны быть отклонены) должен отклонить пароль без заглавных букв","status":"passed","title":"должен отклонить пароль без заглавных букв"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Слабые пароли (должны быть отклонены)"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Слабые пароли (должны быть отклонены) должен отклонить пароль без строчных букв","status":"passed","title":"должен отклонить пароль без строчных букв"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Слабые пароли (должны быть отклонены)"],"duration":0,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Слабые пароли (должны быть отклонены) должен отклонить пароль без цифр","status":"passed","title":"должен отклонить пароль без цифр"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Слабые пароли (должны быть отклонены)"],"duration":0,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Слабые пароли (должны быть отклонены) должен отклонить пароль без спецсимволов","status":"passed","title":"должен отклонить пароль без спецсимволов"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Простые/распространённые пароли"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Простые/распространённые пароли должен отклонить все распространённые пароли","status":"passed","title":"должен отклонить все распространённые пароли"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Граничные случаи должен отклонить невалидные входные данные","status":"passed","title":"должен отклонить невалидные входные данные"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Граничные случаи должен принять пароль ровно 8 символов (минимум)","status":"passed","title":"должен принять пароль ровно 8 символов (минимум)"},{"ancestorTitles":["IsPasswordStrongConstraint (unit)","Сообщение об ошибке"],"duration":4,"failureMessages":[],"fullName":"IsPasswordStrongConstraint (unit) Сообщение об ошибке должен вернуть корректное сообщение по умолчанию","status":"passed","title":"должен вернуть корректное сообщение по умолчанию"}]},{"numFailingTests":0,"numPassingTests":25,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458357,"loadTestEnvironmentEnd":1759858458167,"loadTestEnvironmentStart":1759858458164,"runtime":190,"setupAfterEnvEnd":1759858458194,"setupAfterEnvStart":1759858458191,"setupFilesEnd":1759858458167,"setupFilesStart":1759858458167,"slow":false,"start":1759858458167},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\guards\\bruteforce.guard.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BruteforceGuard (unit)","Профили rate limiting"],"duration":14,"failureMessages":[],"fullName":"BruteforceGuard (unit) Профили rate limiting должен применить лимит login после 3 попыток","status":"passed","title":"должен применить лимит login после 3 попыток"},{"ancestorTitles":["BruteforceGuard (unit)","Профили rate limiting"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Профили rate limiting должен применить лимит refresh после 5 попыток","status":"passed","title":"должен применить лимит refresh после 5 попыток"},{"ancestorTitles":["BruteforceGuard (unit)","Профили rate limiting"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Профили rate limiting должен применить лимит registration после 2 попыток","status":"passed","title":"должен применить лимит registration после 2 попыток"},{"ancestorTitles":["BruteforceGuard (unit)","Профили rate limiting"],"duration":9,"failureMessages":[],"fullName":"BruteforceGuard (unit) Профили rate limiting не должен применять лимиты для не-auth роутов","status":"passed","title":"не должен применять лимиты для не-auth роутов"},{"ancestorTitles":["BruteforceGuard (unit)","Изоляция между профилями"],"duration":3,"failureMessages":[],"fullName":"BruteforceGuard (unit) Изоляция между профилями счётчики login и refresh должны быть независимыми","status":"passed","title":"счётчики login и refresh должны быть независимыми"},{"ancestorTitles":["BruteforceGuard (unit)","Изоляция между профилями"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Изоляция между профилями счётчики для разных IP должны быть независимыми","status":"passed","title":"счётчики для разных IP должны быть независимыми"},{"ancestorTitles":["BruteforceGuard (unit)","Извлечение IP адреса"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Извлечение IP адреса должен извлечь IP из x-forwarded-for (первый в списке)","status":"passed","title":"должен извлечь IP из x-forwarded-for (первый в списке)"},{"ancestorTitles":["BruteforceGuard (unit)","Извлечение IP адреса"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Извлечение IP адреса должен извлечь IP из x-real-ip","status":"passed","title":"должен извлечь IP из x-real-ip"},{"ancestorTitles":["BruteforceGuard (unit)","Извлечение IP адреса"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Извлечение IP адреса должен извлечь IP из x-client-ip","status":"passed","title":"должен извлечь IP из x-client-ip"},{"ancestorTitles":["BruteforceGuard (unit)","Извлечение IP адреса"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Извлечение IP адреса должен использовать socket.remoteAddress как fallback","status":"passed","title":"должен использовать socket.remoteAddress как fallback"},{"ancestorTitles":["BruteforceGuard (unit)","Извлечение IP адреса"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Извлечение IP адреса должен вернуть \"unknown\" если IP невалиден","status":"passed","title":"должен вернуть \"unknown\" если IP невалиден"},{"ancestorTitles":["BruteforceGuard (unit)","Валидация IP адреса"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Валидация IP адреса должен принять валидные IPv4 адреса","status":"passed","title":"должен принять валидные IPv4 адреса"},{"ancestorTitles":["BruteforceGuard (unit)","Валидация IP адреса"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Валидация IP адреса должен принять валидные IPv6 адреса","status":"passed","title":"должен принять валидные IPv6 адреса"},{"ancestorTitles":["BruteforceGuard (unit)","Валидация IP адреса"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Валидация IP адреса должен отклонить невалидные IP адреса","status":"passed","title":"должен отклонить невалидные IP адреса"},{"ancestorTitles":["BruteforceGuard (unit)","Маскирование IP для логов"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Маскирование IP для логов должен замаскировать последний октет IPv4","status":"passed","title":"должен замаскировать последний октет IPv4"},{"ancestorTitles":["BruteforceGuard (unit)","Маскирование IP для логов"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Маскирование IP для логов должен замаскировать последние группы IPv6","status":"passed","title":"должен замаскировать последние группы IPv6"},{"ancestorTitles":["BruteforceGuard (unit)","Маскирование IP для логов"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Маскирование IP для логов должен вернуть \"unknown\" без изменений","status":"passed","title":"должен вернуть \"unknown\" без изменений"},{"ancestorTitles":["BruteforceGuard (unit)","Маскирование IP для логов"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Маскирование IP для логов должен вернуть \"masked\" для невалидных форматов","status":"passed","title":"должен вернуть \"masked\" для невалидных форматов"},{"ancestorTitles":["BruteforceGuard (unit)","Тестовое окружение"],"duration":8,"failureMessages":[],"fullName":"BruteforceGuard (unit) Тестовое окружение должен пропускать запросы если RATE_LIMIT_ENABLED=false","status":"passed","title":"должен пропускать запросы если RATE_LIMIT_ENABLED=false"},{"ancestorTitles":["BruteforceGuard (unit)","Тестовое окружение"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Тестовое окружение должен применять лимиты если RATE_LIMIT_ENABLED=true","status":"passed","title":"должен применять лимиты если RATE_LIMIT_ENABLED=true"},{"ancestorTitles":["BruteforceGuard (unit)","Защита от повторных вызовов"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Защита от повторных вызовов не должен считать запрос дважды если уже обработан","status":"passed","title":"не должен считать запрос дважды если уже обработан"},{"ancestorTitles":["BruteforceGuard (unit)","Сброс счётчиков"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Сброс счётчиков должен очистить все счётчики после resetCounters()","status":"passed","title":"должен очистить все счётчики после resetCounters()"},{"ancestorTitles":["BruteforceGuard (unit)","Логирование блокировок"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Логирование блокировок должен логировать блокировку с замаскированным IP","status":"passed","title":"должен логировать блокировку с замаскированным IP"},{"ancestorTitles":["BruteforceGuard (unit)","Логирование блокировок"],"duration":2,"failureMessages":[],"fullName":"BruteforceGuard (unit) Логирование блокировок не должен логировать PII (полный IP)","status":"passed","title":"не должен логировать PII (полный IP)"},{"ancestorTitles":["BruteforceGuard (unit)","Сообщение об ошибке"],"duration":1,"failureMessages":[],"fullName":"BruteforceGuard (unit) Сообщение об ошибке должен возвращать русское сообщение при блокировке","status":"passed","title":"должен возвращать русское сообщение при блокировке"}]},{"numFailingTests":0,"numPassingTests":19,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458469,"loadTestEnvironmentEnd":1759858458364,"loadTestEnvironmentStart":1759858458359,"runtime":105,"setupAfterEnvEnd":1759858458392,"setupAfterEnvStart":1759858458390,"setupFilesEnd":1759858458364,"setupFilesStart":1759858458364,"slow":false,"start":1759858458364},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\validators\\name.validator.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":2,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять простое русское имя","status":"passed","title":"должен принять простое русское имя"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять простое английское имя","status":"passed","title":"должен принять простое английское имя"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять имя с дефисом","status":"passed","title":"должен принять имя с дефисом"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять имя с апострофом","status":"passed","title":"должен принять имя с апострофом"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":0,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять полное ФИО","status":"passed","title":"должен принять полное ФИО"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":0,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять имя с пробелами по краям (trimmed)","status":"passed","title":"должен принять имя с пробелами по краям (trimmed)"},{"ancestorTitles":["IsValidNameConstraint (unit)","Валидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Валидные имена должен принять имя длиной от 2 до 100 символов","status":"passed","title":"должен принять имя длиной от 2 до 100 символов"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить имя короче 2 символов","status":"passed","title":"должен отклонить имя короче 2 символов"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":2,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить имя длиннее 100 символов","status":"passed","title":"должен отклонить имя длиннее 100 символов"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить имя с цифрами","status":"passed","title":"должен отклонить имя с цифрами"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить имя со спецсимволами (кроме дефис и апостроф)","status":"passed","title":"должен отклонить имя со спецсимволами (кроме дефис и апостроф)"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":0,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить HTML-теги","status":"passed","title":"должен отклонить HTML-теги"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":0,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить пустую строку","status":"passed","title":"должен отклонить пустую строку"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить строку только из пробелов","status":"passed","title":"должен отклонить строку только из пробелов"},{"ancestorTitles":["IsValidNameConstraint (unit)","Невалидные имена"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Невалидные имена должен отклонить не-строку","status":"passed","title":"должен отклонить не-строку"},{"ancestorTitles":["IsValidNameConstraint (unit)","Граничные случаи"],"duration":5,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Граничные случаи должен принять имя ровно 2 символа (минимум)","status":"passed","title":"должен принять имя ровно 2 символа (минимум)"},{"ancestorTitles":["IsValidNameConstraint (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Граничные случаи должен принять имя ровно 100 символов (максимум)","status":"passed","title":"должен принять имя ровно 100 символов (максимум)"},{"ancestorTitles":["IsValidNameConstraint (unit)","Граничные случаи"],"duration":0,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Граничные случаи должен отклонить имя 101 символ","status":"passed","title":"должен отклонить имя 101 символ"},{"ancestorTitles":["IsValidNameConstraint (unit)","Сообщение об ошибке"],"duration":1,"failureMessages":[],"fullName":"IsValidNameConstraint (unit) Сообщение об ошибке должен вернуть корректное сообщение по умолчанию","status":"passed","title":"должен вернуть корректное сообщение по умолчанию"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458600,"loadTestEnvironmentEnd":1759858458474,"loadTestEnvironmentStart":1759858458471,"runtime":126,"setupAfterEnvEnd":1759858458501,"setupAfterEnvStart":1759858458499,"setupFilesEnd":1759858458474,"setupFilesStart":1759858458474,"slow":false,"start":1759858458474},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\middleware\\correlation-id.middleware.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CorrelationIdMiddleware (unit)","Генерация correlation ID"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Генерация correlation ID должен сгенерировать новый correlation ID если заголовок отсутствует","status":"passed","title":"должен сгенерировать новый correlation ID если заголовок отсутствует"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Генерация correlation ID"],"duration":6,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Генерация correlation ID должен генерировать уникальные correlation ID для разных запросов","status":"passed","title":"должен генерировать уникальные correlation ID для разных запросов"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Пробрасывание существующего correlation ID"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Пробрасывание существующего correlation ID должен использовать correlation ID из заголовка x-request-id","status":"passed","title":"должен использовать correlation ID из заголовка x-request-id"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Пробрасывание существующего correlation ID"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Пробрасывание существующего correlation ID должен корректно обработать различные форматы correlation ID","status":"passed","title":"должен корректно обработать различные форматы correlation ID"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Пробрасывание существующего correlation ID"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Пробрасывание существующего correlation ID должен генерировать новый ID если x-request-id пустая строка","status":"passed","title":"должен генерировать новый ID если x-request-id пустая строка"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Добавление correlation ID в response"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Добавление correlation ID в response должен добавить x-request-id в response headers","status":"passed","title":"должен добавить x-request-id в response headers"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Добавление correlation ID в response"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Добавление correlation ID в response должен добавить существующий correlation ID в response headers","status":"passed","title":"должен добавить существующий correlation ID в response headers"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Вызов next middleware"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Вызов next middleware должен вызвать next() для продолжения цепочки middleware","status":"passed","title":"должен вызвать next() для продолжения цепочки middleware"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Вызов next middleware"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Вызов next middleware должен вызвать next() даже если correlation ID уже установлен","status":"passed","title":"должен вызвать next() даже если correlation ID уже установлен"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Вызов next middleware"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Вызов next middleware должен вызвать next() без аргументов (успешное выполнение)","status":"passed","title":"должен вызвать next() без аргументов (успешное выполнение)"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Последовательность операций"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Последовательность операций должен выполнить операции в правильной последовательности","status":"passed","title":"должен выполнить операции в правильной последовательности"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Последовательность операций"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Последовательность операций должен установить correlationId в request перед вызовом setHeader","status":"passed","title":"должен установить correlationId в request перед вызовом setHeader"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Граничные случаи должен обработать request с пустым объектом заголовков","status":"passed","title":"должен обработать request с пустым объектом заголовков"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Граничные случаи должен обработать множественные заголовки x-request-id (взять первый)","status":"passed","title":"должен обработать множественные заголовки x-request-id (взять первый)"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Граничные случаи"],"duration":0,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Граничные случаи должен обработать x-request-id с пробелами по краям","status":"passed","title":"должен обработать x-request-id с пробелами по краям"},{"ancestorTitles":["CorrelationIdMiddleware (unit)","Производительность"],"duration":18,"failureMessages":[],"fullName":"CorrelationIdMiddleware (unit) Производительность должен обрабатывать множественные запросы быстро","status":"passed","title":"должен обрабатывать множественные запросы быстро"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458709,"loadTestEnvironmentEnd":1759858458611,"loadTestEnvironmentStart":1759858458606,"runtime":98,"setupAfterEnvEnd":1759858458637,"setupAfterEnvStart":1759858458635,"setupFilesEnd":1759858458611,"setupFilesStart":1759858458611,"slow":false,"start":1759858458611},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\validators\\phone.validator.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["IsValidPhoneConstraint (unit)","Валидные номера телефонов"],"duration":3,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Валидные номера телефонов должен принять все валидные форматы номеров","status":"passed","title":"должен принять все валидные форматы номеров"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Невалидные номера телефонов"],"duration":1,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Невалидные номера телефонов должен отклонить номера короче 7 цифр","status":"passed","title":"должен отклонить номера короче 7 цифр"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Невалидные номера телефонов"],"duration":1,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Невалидные номера телефонов должен отклонить номера длиннее 15 цифр","status":"passed","title":"должен отклонить номера длиннее 15 цифр"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Невалидные номера телефонов"],"duration":1,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Невалидные номера телефонов должен отклонить номера с буквами","status":"passed","title":"должен отклонить номера с буквами"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Невалидные номера телефонов"],"duration":1,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Невалидные номера телефонов должен отклонить номера со спецсимволами","status":"passed","title":"должен отклонить номера со спецсимволами"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Невалидные номера телефонов"],"duration":1,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Невалидные номера телефонов должен отклонить невалидные входные данные","status":"passed","title":"должен отклонить невалидные входные данные"},{"ancestorTitles":["IsValidPhoneConstraint (unit)","Сообщение об ошибке"],"duration":2,"failureMessages":[],"fullName":"IsValidPhoneConstraint (unit) Сообщение об ошибке должен вернуть корректное сообщение по умолчанию","status":"passed","title":"должен вернуть корректное сообщение по умолчанию"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458893,"loadTestEnvironmentEnd":1759858458715,"loadTestEnvironmentStart":1759858458711,"runtime":178,"setupAfterEnvEnd":1759858458752,"setupAfterEnvStart":1759858458748,"setupFilesEnd":1759858458715,"setupFilesStart":1759858458715,"slow":false,"start":1759858458715},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\validators\\sanitize-string.validator.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["IsSanitizedStringConstraint (unit)","Валидные строки"],"duration":4,"failureMessages":[],"fullName":"IsSanitizedStringConstraint (unit) Валидные строки должен принять все валидные строки","status":"passed","title":"должен принять все валидные строки"},{"ancestorTitles":["IsSanitizedStringConstraint (unit)","XSS-атаки (должны быть заблокированы)"],"duration":2,"failureMessages":[],"fullName":"IsSanitizedStringConstraint (unit) XSS-атаки (должны быть заблокированы) должен отклонить все XSS-атаки","status":"passed","title":"должен отклонить все XSS-атаки"},{"ancestorTitles":["IsSanitizedStringConstraint (unit)","Граничные случаи"],"duration":1,"failureMessages":[],"fullName":"IsSanitizedStringConstraint (unit) Граничные случаи должен отклонить невалидные входные данные","status":"passed","title":"должен отклонить невалидные входные данные"},{"ancestorTitles":["IsSanitizedStringConstraint (unit)","Сообщение об ошибке"],"duration":1,"failureMessages":[],"fullName":"IsSanitizedStringConstraint (unit) Сообщение об ошибке должен вернуть корректное сообщение по умолчанию","status":"passed","title":"должен вернуть корректное сообщение по умолчанию"}]},{"numFailingTests":0,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858458979,"loadTestEnvironmentEnd":1759858458902,"loadTestEnvironmentStart":1759858458895,"runtime":77,"setupAfterEnvEnd":1759858458929,"setupAfterEnvStart":1759858458927,"setupFilesEnd":1759858458902,"setupFilesStart":1759858458902,"slow":false,"start":1759858458902},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\config\\env-validation-secrets.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - минимальная длина"],"duration":13,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - минимальная длина должен отклонить короткий COOKIE_PARSER_SECRET_KEY в production","status":"passed","title":"должен отклонить короткий COOKIE_PARSER_SECRET_KEY в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - минимальная длина"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - минимальная длина должен отклонить короткий JWT_ACCESS_SECRET в staging","status":"passed","title":"должен отклонить короткий JWT_ACCESS_SECRET в staging"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - минимальная длина"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - минимальная длина должен принять секрет 32 символа в production","status":"passed","title":"должен принять секрет 32 символа в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - минимальная длина"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - минимальная длина должен принять секрет 64 символа в production","status":"passed","title":"должен принять секрет 64 символа в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"change-me-please-123...\" в production","status":"passed","title":"должен отклонить слабый секрет \"change-me-please-123...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"please_change_me_asa...\" в production","status":"passed","title":"должен отклонить слабый секрет \"please_change_me_asa...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"replace-with-strong-...\" в production","status":"passed","title":"должен отклонить слабый секрет \"replace-with-strong-...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":5,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"secret12345678901234...\" в production","status":"passed","title":"должен отклонить слабый секрет \"secret12345678901234...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"password123456789012...\" в production","status":"passed","title":"должен отклонить слабый секрет \"password123456789012...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен отклонить слабый секрет \"test1234567890123456...\" в production","status":"passed","title":"должен отклонить слабый секрет \"test1234567890123456...\" в production"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен принять слабые секреты в development","status":"passed","title":"должен принять слабые секреты в development"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Production/Staging секреты - слабые значения"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Production/Staging секреты - слабые значения должен принять слабые секреты в test","status":"passed","title":"должен принять слабые секреты в test"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Ротация секретов"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Ротация секретов должен принять опциональные параметры ротации","status":"passed","title":"должен принять опциональные параметры ротации"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Ротация секретов"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Ротация секретов должен работать без параметров ротации","status":"passed","title":"должен работать без параметров ротации"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Обязательные секреты"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Обязательные секреты должен требовать COOKIE_PARSER_SECRET_KEY","status":"passed","title":"должен требовать COOKIE_PARSER_SECRET_KEY"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Обязательные секреты"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Обязательные секреты должен требовать JWT_ACCESS_SECRET","status":"passed","title":"должен требовать JWT_ACCESS_SECRET"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Обязательные секреты"],"duration":2,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Обязательные секреты должен требовать JWT_REFRESH_SECRET","status":"passed","title":"должен требовать JWT_REFRESH_SECRET"},{"ancestorTitles":["Environment Validation - Secrets (unit)","Обязательные секреты"],"duration":1,"failureMessages":[],"fullName":"Environment Validation - Secrets (unit) Обязательные секреты должен отклонить пустые секреты","status":"passed","title":"должен отклонить пустые секреты"}]},{"numFailingTests":0,"numPassingTests":21,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858459059,"loadTestEnvironmentEnd":1759858458987,"loadTestEnvironmentStart":1759858458981,"runtime":72,"setupAfterEnvEnd":1759858459023,"setupAfterEnvStart":1759858459020,"setupFilesEnd":1759858458987,"setupFilesStart":1759858458987,"slow":false,"start":1759858458987},"testFilePath":"F:\\git\\online-store-backend\\tests\\unit\\utils\\logger.factory.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Logger Factory (unit)","createLogger"],"duration":5,"failureMessages":[],"fullName":"Logger Factory (unit) createLogger should create logger with context","status":"passed","title":"should create logger with context"},{"ancestorTitles":["Logger Factory (unit)","createLogger"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) createLogger should create logger with correlation ID","status":"passed","title":"should create logger with correlation ID"},{"ancestorTitles":["Logger Factory (unit)","createLogger"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) createLogger should reuse base logger (singleton)","status":"passed","title":"should reuse base logger (singleton)"},{"ancestorTitles":["Logger Factory (unit)","createLoggerWithCorrelation"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) createLoggerWithCorrelation should create logger with correlation from request","status":"passed","title":"should create logger with correlation from request"},{"ancestorTitles":["Logger Factory (unit)","createLoggerWithCorrelation"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) createLoggerWithCorrelation should create logger without correlation if no request","status":"passed","title":"should create logger without correlation if no request"},{"ancestorTitles":["Logger Factory (unit)","createLoggerWithCorrelation"],"duration":0,"failureMessages":[],"fullName":"Logger Factory (unit) createLoggerWithCorrelation should handle request without correlationId","status":"passed","title":"should handle request without correlationId"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":0,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should mask email addresses","status":"passed","title":"should mask email addresses"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should mask phone numbers","status":"passed","title":"should mask phone numbers"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should mask short strings completely","status":"passed","title":"should mask short strings completely"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":0,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should mask strings with first 2 and last 2 chars","status":"passed","title":"should mask strings with first 2 and last 2 chars"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":0,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should handle empty or null values","status":"passed","title":"should handle empty or null values"},{"ancestorTitles":["Logger Factory (unit)","maskPII"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) maskPII should mask very short values","status":"passed","title":"should mask very short values"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should remove PII fields from object","status":"passed","title":"should remove PII fields from object"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":2,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should handle nested objects","status":"passed","title":"should handle nested objects"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should handle arrays in objects","status":"passed","title":"should handle arrays in objects"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":0,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should not modify non-PII fields","status":"passed","title":"should not modify non-PII fields"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should handle empty object","status":"passed","title":"should handle empty object"},{"ancestorTitles":["Logger Factory (unit)","sanitizeForLogging"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) sanitizeForLogging should mask common token fields","status":"passed","title":"should mask common token fields"},{"ancestorTitles":["Logger Factory (unit)","Logger integration"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) Logger integration should allow logging without throwing errors","status":"passed","title":"should allow logging without throwing errors"},{"ancestorTitles":["Logger Factory (unit)","Logger integration"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) Logger integration should handle logging with PII masking","status":"passed","title":"should handle logging with PII masking"},{"ancestorTitles":["Logger Factory (unit)","Logger integration"],"duration":1,"failureMessages":[],"fullName":"Logger Factory (unit) Logger integration should create unique loggers for different contexts","status":"passed","title":"should create unique loggers for different contexts"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759858459111,"loadTestEnvironmentEnd":1759858459070,"loadTestEnvironmentStart":1759858459065,"runtime":41,"setupAfterEnvEnd":1759858459099,"setupAfterEnvStart":1759858459097,"setupFilesEnd":1759858459070,"setupFilesStart":1759858459070,"slow":false,"start":1759858459070},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\config\\env\\validation.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["validateEnv"],"duration":2,"failureMessages":[],"fullName":"validateEnv should validate minimal valid env","status":"passed","title":"should validate minimal valid env"},{"ancestorTitles":["validateEnv"],"duration":7,"failureMessages":[],"fullName":"validateEnv should throw on missing required keys","status":"passed","title":"should throw on missing required keys"},{"ancestorTitles":["validateEnv"],"duration":1,"failureMessages":[],"fullName":"validateEnv should throw on invalid NODE_ENV","status":"passed","title":"should throw on invalid NODE_ENV"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.(t|j)s","!src/**/*.spec.ts","!src/**/*.test.ts","!src/main.ts","!src/**/*.module.ts","!src/**/*.dto.ts","!src/**/*.interface.ts","!src/**/*.response.ts","!src/**/*.request.ts"],"coverageDirectory":"F:\\git\\online-store-backend\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":70,"functions":70,"lines":70,"statements":70}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["F:\\git\\online-store-backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-reports","filename":"test-report.html","expand":true,"hideIcon":false,"pageTitle":"Online Store Backend - Test Results","darkTheme":false,"includeFailureMsg":true,"includeSuiteFailure":true,"includeConsoleLog":true,"includeStackTrace":true,"includeObsoleteSnapshots":true,"reportTitle":"Test Results Report","sort":"status"}]],"rootDir":"F:\\git\\online-store-backend","runInBand":false,"runTestsByPath":false,"seed":1243907864,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"F:\\git\\online-store-backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759858459121,"_reporterOptions":{"publicPath":"./test-reports","filename":"test-report.html","expand":true,"pageTitle":"Online Store Backend - Test Results","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":true,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true,"includeStackTrace":true,"includeObsoleteSnapshots":true,"reportTitle":"Test Results Report","sort":"status"},"logInfoMapping":{},"attachInfos":{}})