window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":18,"numPassedTests":311,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":18,"numTotalTests":311,"startTime":1759670458909,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670469121,"loadTestEnvironmentEnd":1759670459211,"loadTestEnvironmentStart":1759670459158,"runtime":9908,"setupAfterEnvEnd":1759670459382,"setupAfterEnvStart":1759670459382,"setupFilesEnd":1759670459213,"setupFilesStart":1759670459213,"slow":true,"start":1759670459213},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-admin.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":67,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 200: returns user statistics for admin","status":"passed","title":"200: returns user statistics for admin"},{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":27,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 403: regular user cannot access admin stats","status":"passed","title":"403: regular user cannot access admin stats"},{"ancestorTitles":["User Admin Integration Tests","GET /user/admin/stats"],"duration":12,"failureMessages":[],"fullName":"User Admin Integration Tests GET /user/admin/stats 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":38,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/block/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/block/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":40,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/unblock/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/unblock/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":36,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/suspend/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/suspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":40,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/unsuspend/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/unsuspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":42,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/delete/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/delete/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":40,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/restore/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/restore/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":49,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/premium/upgrade/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/premium/upgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":39,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/premium/downgrade/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/premium/downgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":43,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/employee/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/employee/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":42,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/employee/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/employee/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":31,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/vip/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/vip/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":41,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/vip/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/vip/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":42,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/highvalue/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/highvalue/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":41,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/highvalue/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/highvalue/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":42,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/wholesale/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/wholesale/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":45,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/wholesale/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/wholesale/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":48,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/affiliate/set/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/affiliate/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":39,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints ADMIN 200 -> { path: '/online-store/user/admin/affiliate/unset/13' }","status":"passed","title":"ADMIN 200 -> { path: '/online-store/user/admin/affiliate/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":22,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/block/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/block/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":18,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/unblock/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/unblock/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":15,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/suspend/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/suspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":18,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/unsuspend/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/unsuspend/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":14,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/delete/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/delete/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":14,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/restore/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/restore/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":17,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/premium/upgrade/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/premium/upgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":18,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/premium/downgrade/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/premium/downgrade/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":19,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/employee/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/employee/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":22,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/employee/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/employee/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":19,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/vip/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/vip/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":21,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/vip/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/vip/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":16,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/highvalue/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/highvalue/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":14,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/highvalue/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/highvalue/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":15,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/wholesale/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/wholesale/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":14,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/wholesale/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/wholesale/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":13,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/affiliate/set/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/affiliate/set/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin flag endpoints"],"duration":14,"failureMessages":[],"fullName":"User Admin Integration Tests Admin flag endpoints USER 403 -> { path: '/online-store/user/admin/affiliate/unset/13' }","status":"passed","title":"USER 403 -> { path: '/online-store/user/admin/affiliate/unset/13' }"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":12,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 401: admin endpoints require auth","status":"passed","title":"401: admin endpoints require auth"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":39,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 403: regular user cannot access admin endpoints","status":"passed","title":"403: regular user cannot access admin endpoints"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":164,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can list users","status":"passed","title":"200: admin can list users"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":136,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 400: invalid query parameters","status":"passed","title":"400: invalid query parameters"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":287,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can create and delete users","status":"passed","title":"200: admin can create and delete users"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":212,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 200: admin can update user profile","status":"passed","title":"200: admin can update user profile"},{"ancestorTitles":["User Admin Integration Tests","Admin user management"],"duration":43,"failureMessages":[],"fullName":"User Admin Integration Tests Admin user management 409: duplicate email on update","status":"passed","title":"409: duplicate email on update"},{"ancestorTitles":["User Admin Integration Tests","Role management"],"duration":215,"failureMessages":[],"fullName":"User Admin Integration Tests Role management 200: admin can add and remove roles","status":"passed","title":"200: admin can add and remove roles"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670471524,"loadTestEnvironmentEnd":1759670469156,"loadTestEnvironmentStart":1759670469146,"runtime":2368,"setupAfterEnvEnd":1759670469212,"setupAfterEnvStart":1759670469212,"setupFilesEnd":1759670469156,"setupFilesStart":1759670469156,"slow":false,"start":1759670469156},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\product\\product.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProductController Pagination V2","GET /product/list-v2"],"duration":40,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/list-v2 должен возвращать продукты в новом формате { data, meta }","status":"passed","title":"должен возвращать продукты в новом формате { data, meta }"},{"ancestorTitles":["ProductController Pagination V2","GET /product/list-v2"],"duration":30,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/list-v2 должен корректно обрабатывать пагинацию","status":"passed","title":"должен корректно обрабатывать пагинацию"},{"ancestorTitles":["ProductController Pagination V2","GET /product/brand/:brandId/list-v2"],"duration":25,"failureMessages":[],"fullName":"ProductController Pagination V2 GET /product/brand/:brandId/list-v2 должен возвращать продукты бренда в новом формате","status":"passed","title":"должен возвращать продукты бренда в новом формате"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670473324,"loadTestEnvironmentEnd":1759670471537,"loadTestEnvironmentStart":1759670471531,"runtime":1787,"setupAfterEnvEnd":1759670471572,"setupAfterEnvStart":1759670471572,"setupFilesEnd":1759670471537,"setupFilesStart":1759670471537,"slow":false,"start":1759670471537},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-verification.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":33,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 401: requires auth for verification requests","status":"passed","title":"401: requires auth for verification requests"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":161,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: email verification request with auth","status":"passed","title":"200: email verification request with auth"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":167,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: phone verification request with auth","status":"passed","title":"200: phone verification request with auth"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":175,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 400: invalid verification codes","status":"passed","title":"400: invalid verification codes"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":182,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 200: admin can verify user email/phone","status":"passed","title":"200: admin can verify user email/phone"},{"ancestorTitles":["User Verification Integration Tests","Verification endpoints"],"duration":129,"failureMessages":[],"fullName":"User Verification Integration Tests Verification endpoints 404: admin cannot verify non-existent user","status":"passed","title":"404: admin cannot verify non-existent user"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670474708,"loadTestEnvironmentEnd":1759670473337,"loadTestEnvironmentStart":1759670473332,"runtime":1371,"setupAfterEnvEnd":1759670473377,"setupAfterEnvStart":1759670473377,"setupFilesEnd":1759670473337,"setupFilesStart":1759670473337,"slow":false,"start":1759670473337},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-preferences.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":64,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: updates preferences with valid data","status":"passed","title":"200: updates preferences with valid data"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":58,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: updates only provided preferences","status":"passed","title":"200: updates only provided preferences"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":21,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 400: invalid enum values","status":"passed","title":"400: invalid enum values"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":18,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":39,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: accepts empty object","status":"passed","title":"200: accepts empty object"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":19,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 400: very long strings in preferences","status":"passed","title":"400: very long strings in preferences"},{"ancestorTitles":["User Preferences Integration Tests","PATCH /user/profile/preferences"],"duration":179,"failureMessages":[],"fullName":"User Preferences Integration Tests PATCH /user/profile/preferences 200: special characters in preferences","status":"passed","title":"200: special characters in preferences"}]},{"numFailingTests":0,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670476484,"loadTestEnvironmentEnd":1759670474723,"loadTestEnvironmentStart":1759670474716,"runtime":1761,"setupAfterEnvEnd":1759670474771,"setupAfterEnvStart":1759670474771,"setupFilesEnd":1759670474723,"setupFilesStart":1759670474723,"slow":false,"start":1759670474723},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-profile.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":38,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 200: updates phone with valid number","status":"passed","title":"200: updates phone with valid number"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":18,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 400: rejects invalid phone format","status":"passed","title":"400: rejects invalid phone format"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":13,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile/phone"],"duration":356,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile/phone 409: rejects duplicate phone for another user","status":"passed","title":"409: rejects duplicate phone for another user"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":43,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 200: user updates own profile","status":"passed","title":"200: user updates own profile"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":49,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 200: partial update only firstName","status":"passed","title":"200: partial update only firstName"},{"ancestorTitles":["User Profile Integration Tests","PATCH /user/profile"],"duration":18,"failureMessages":[],"fullName":"User Profile Integration Tests PATCH /user/profile 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Profile Integration Tests","Password management"],"duration":102,"failureMessages":[],"fullName":"User Profile Integration Tests Password management 400: wrong old password","status":"passed","title":"400: wrong old password"},{"ancestorTitles":["User Profile Integration Tests","Misc endpoints"],"duration":27,"failureMessages":[],"fullName":"User Profile Integration Tests Misc endpoints 200: GET /user/me with minimal body","status":"passed","title":"200: GET /user/me with minimal body"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670478113,"loadTestEnvironmentEnd":1759670476498,"loadTestEnvironmentStart":1759670476492,"runtime":1615,"setupAfterEnvEnd":1759670476543,"setupAfterEnvStart":1759670476543,"setupFilesEnd":1759670476498,"setupFilesStart":1759670476498,"slow":false,"start":1759670476498},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-addresses.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":34,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 401: requires auth for all address endpoints","status":"passed","title":"401: requires auth for all address endpoints"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":267,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 200: full CRUD flow with auth","status":"passed","title":"200: full CRUD flow with auth"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":34,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 400: validation errors on create","status":"passed","title":"400: validation errors on create"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":97,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 404: non-existent address operations","status":"passed","title":"404: non-existent address operations"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":57,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 400: invalid id parameter","status":"passed","title":"400: invalid id parameter"},{"ancestorTitles":["User Addresses Integration Tests","User Addresses CRUD"],"duration":202,"failureMessages":[],"fullName":"User Addresses Integration Tests User Addresses CRUD 200: setting new default unsets previous default","status":"passed","title":"200: setting new default unsets previous default"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670479376,"loadTestEnvironmentEnd":1759670478127,"loadTestEnvironmentStart":1759670478120,"runtime":1249,"setupAfterEnvEnd":1759670478164,"setupAfterEnvStart":1759670478164,"setupFilesEnd":1759670478127,"setupFilesStart":1759670478127,"slow":false,"start":1759670478127},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user\\tests\\user-flags.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":61,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: updates flags with valid data","status":"passed","title":"200: updates flags with valid data"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":43,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: updates only provided flags","status":"passed","title":"200: updates only provided flags"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":22,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: invalid data types","status":"passed","title":"400: invalid data types"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":14,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 401: requires auth","status":"passed","title":"401: requires auth"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":39,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 200: accepts empty object","status":"passed","title":"200: accepts empty object"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":94,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: null and undefined values in flags","status":"passed","title":"400: null and undefined values in flags"},{"ancestorTitles":["User Flags Integration Tests","PATCH /user/profile/flags"],"duration":14,"failureMessages":[],"fullName":"User Flags Integration Tests PATCH /user/profile/flags 400: array instead of object","status":"passed","title":"400: array instead of object"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670480558,"loadTestEnvironmentEnd":1759670479395,"loadTestEnvironmentStart":1759670479386,"runtime":1162,"setupAfterEnvEnd":1759670479434,"setupAfterEnvStart":1759670479434,"setupFilesEnd":1759670479396,"setupFilesStart":1759670479396,"slow":false,"start":1759670479396},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\controllers\\user-address\\user-address.controller.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":67,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should create address successfully","status":"passed","title":"should create address successfully"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":39,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should get addresses list","status":"passed","title":"should get addresses list"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":76,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should update address","status":"passed","title":"should update address"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":85,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should set default address","status":"passed","title":"should set default address"},{"ancestorTitles":["UserAddressController (integration)","CRUD Operations"],"duration":54,"failureMessages":[],"fullName":"UserAddressController (integration) CRUD Operations should remove address","status":"passed","title":"should remove address"},{"ancestorTitles":["UserAddressController (integration)","Error Handling"],"duration":16,"failureMessages":[],"fullName":"UserAddressController (integration) Error Handling should return 401 when no token","status":"passed","title":"should return 401 when no token"},{"ancestorTitles":["UserAddressController (integration)","Error Handling"],"duration":14,"failureMessages":[],"fullName":"UserAddressController (integration) Error Handling should return 400 on validation error","status":"passed","title":"should return 400 on validation error"}]},{"numFailingTests":0,"numPassingTests":47,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670481131,"loadTestEnvironmentEnd":1759670480573,"loadTestEnvironmentStart":1759670480567,"runtime":558,"setupAfterEnvEnd":1759670480607,"setupAfterEnvStart":1759670480607,"setupFilesEnd":1759670480573,"setupFilesStart":1759670480573,"slow":false,"start":1759670480573},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\user.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService","createUser"],"duration":8,"failureMessages":[],"fullName":"UserService createUser должен успешно создать обычного пользователя","status":"passed","title":"должен успешно создать обычного пользователя"},{"ancestorTitles":["UserService","createUser"],"duration":5,"failureMessages":[],"fullName":"UserService createUser должен создать пользователя с ADMIN ролью для специального email","status":"passed","title":"должен создать пользователя с ADMIN ролью для специального email"},{"ancestorTitles":["UserService","createUser"],"duration":31,"failureMessages":[],"fullName":"UserService createUser должен выбросить BadRequestException если пользователь уже существует","status":"passed","title":"должен выбросить BadRequestException если пользователь уже существует"},{"ancestorTitles":["UserService","getUser"],"duration":5,"failureMessages":[],"fullName":"UserService getUser должен успешно получить пользователя по ID","status":"passed","title":"должен успешно получить пользователя по ID"},{"ancestorTitles":["UserService","getUser"],"duration":4,"failureMessages":[],"fullName":"UserService getUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updateUser"],"duration":5,"failureMessages":[],"fullName":"UserService updateUser должен успешно обновить пользователя","status":"passed","title":"должен успешно обновить пользователя"},{"ancestorTitles":["UserService","updateUser"],"duration":5,"failureMessages":[],"fullName":"UserService updateUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updateUser"],"duration":8,"failureMessages":[],"fullName":"UserService updateUser должен выбросить ConflictException если email уже используется","status":"passed","title":"должен выбросить ConflictException если email уже используется"},{"ancestorTitles":["UserService","updateUser"],"duration":5,"failureMessages":[],"fullName":"UserService updateUser должен выбросить ConflictException (409) если репозиторий вернул SequelizeUniqueConstraintError","status":"passed","title":"должен выбросить ConflictException (409) если репозиторий вернул SequelizeUniqueConstraintError"},{"ancestorTitles":["UserService","removeUser"],"duration":5,"failureMessages":[],"fullName":"UserService removeUser должен успешно удалить пользователя","status":"passed","title":"должен успешно удалить пользователя"},{"ancestorTitles":["UserService","removeUser"],"duration":4,"failureMessages":[],"fullName":"UserService removeUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","addRole"],"duration":11,"failureMessages":[],"fullName":"UserService addRole должен успешно добавить роль пользователю","status":"passed","title":"должен успешно добавить роль пользователю"},{"ancestorTitles":["UserService","addRole"],"duration":4,"failureMessages":[],"fullName":"UserService addRole должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","addRole"],"duration":4,"failureMessages":[],"fullName":"UserService addRole должен выбросить NotFoundException если роль не найдена","status":"passed","title":"должен выбросить NotFoundException если роль не найдена"},{"ancestorTitles":["UserService","addRole"],"duration":5,"failureMessages":[],"fullName":"UserService addRole должен выбросить ConflictException если роль уже присвоена","status":"passed","title":"должен выбросить ConflictException если роль уже присвоена"},{"ancestorTitles":["UserService","removeUserRole"],"duration":5,"failureMessages":[],"fullName":"UserService removeUserRole должен успешно удалить роль у пользователя","status":"passed","title":"должен успешно удалить роль у пользователя"},{"ancestorTitles":["UserService","removeUserRole"],"duration":4,"failureMessages":[],"fullName":"UserService removeUserRole должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","findAuthenticatedUser"],"duration":4,"failureMessages":[],"fullName":"UserService findAuthenticatedUser должен успешно найти аутентифицированного пользователя","status":"passed","title":"должен успешно найти аутентифицированного пользователя"},{"ancestorTitles":["UserService","checkUserAuth"],"duration":4,"failureMessages":[],"fullName":"UserService checkUserAuth должен успешно проверить авторизацию пользователя","status":"passed","title":"должен успешно проверить авторизацию пользователя"},{"ancestorTitles":["UserService","checkUserAuth"],"duration":4,"failureMessages":[],"fullName":"UserService checkUserAuth должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","findUserByEmail"],"duration":6,"failureMessages":[],"fullName":"UserService findUserByEmail должен успешно найти пользователя по email","status":"passed","title":"должен успешно найти пользователя по email"},{"ancestorTitles":["UserService","findUserByEmail"],"duration":5,"failureMessages":[],"fullName":"UserService findUserByEmail должен вернуть null если пользователь не найден","status":"passed","title":"должен вернуть null если пользователь не найден"},{"ancestorTitles":["UserService","getListUsers"],"duration":4,"failureMessages":[],"fullName":"UserService getListUsers должен успешно получить список пользователей","status":"passed","title":"должен успешно получить список пользователей"},{"ancestorTitles":["UserService","getListUsers"],"duration":12,"failureMessages":[],"fullName":"UserService getListUsers должен выбросить NotFoundException если список пуст","status":"passed","title":"должен выбросить NotFoundException если список пуст"},{"ancestorTitles":["UserService","createUser - дополнительные случаи"],"duration":5,"failureMessages":[],"fullName":"UserService createUser - дополнительные случаи должен создать роль USER если она не существует","status":"passed","title":"должен создать роль USER если она не существует"},{"ancestorTitles":["UserService","updatePhone"],"duration":4,"failureMessages":[],"fullName":"UserService updatePhone должен выбросить ConflictException если телефон уже используется","status":"passed","title":"должен выбросить ConflictException если телефон уже используется"},{"ancestorTitles":["UserService","updateFlags"],"duration":4,"failureMessages":[],"fullName":"UserService updateFlags должен успешно обновить флаги пользователя","status":"passed","title":"должен успешно обновить флаги пользователя"},{"ancestorTitles":["UserService","updateFlags"],"duration":4,"failureMessages":[],"fullName":"UserService updateFlags должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","updatePreferences"],"duration":4,"failureMessages":[],"fullName":"UserService updatePreferences должен успешно обновить предпочтения пользователя","status":"passed","title":"должен успешно обновить предпочтения пользователя"},{"ancestorTitles":["UserService","updatePreferences"],"duration":4,"failureMessages":[],"fullName":"UserService updatePreferences должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":5,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyEmailFlag: успешно","status":"passed","title":"verifyEmailFlag: успешно"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":4,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyEmailFlag: 404","status":"passed","title":"verifyEmailFlag: 404"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":4,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyPhoneFlag: успешно","status":"passed","title":"verifyPhoneFlag: успешно"},{"ancestorTitles":["UserService","verifyEmailFlag / verifyPhoneFlag"],"duration":5,"failureMessages":[],"fullName":"UserService verifyEmailFlag / verifyPhoneFlag verifyPhoneFlag: 404","status":"passed","title":"verifyPhoneFlag: 404"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock blockUser: успешно","status":"passed","title":"blockUser: успешно"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":9,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock blockUser: 404","status":"passed","title":"blockUser: 404"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock unblockUser: успешно","status":"passed","title":"unblockUser: успешно"},{"ancestorTitles":["UserService","Admin actions: block/unblock"],"duration":5,"failureMessages":[],"fullName":"UserService Admin actions: block/unblock unblockUser: 404","status":"passed","title":"unblockUser: 404"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend suspendUser: успешно","status":"passed","title":"suspendUser: успешно"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend suspendUser: 404","status":"passed","title":"suspendUser: 404"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":4,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend unsuspendUser: успешно","status":"passed","title":"unsuspendUser: успешно"},{"ancestorTitles":["UserService","Admin actions: suspend/unsuspend"],"duration":3,"failureMessages":[],"fullName":"UserService Admin actions: suspend/unsuspend unsuspendUser: 404","status":"passed","title":"unsuspendUser: 404"},{"ancestorTitles":["UserService","changePassword"],"duration":4,"failureMessages":[],"fullName":"UserService changePassword 404: пользователь не найден","status":"passed","title":"404: пользователь не найден"},{"ancestorTitles":["UserService","changePassword"],"duration":5,"failureMessages":[],"fullName":"UserService changePassword 400: неверный текущий пароль","status":"passed","title":"400: неверный текущий пароль"},{"ancestorTitles":["UserService","self-service verification"],"duration":5,"failureMessages":[],"fullName":"UserService self-service verification requestVerificationCode: вызывает репозиторий с корректными аргументами","status":"passed","title":"requestVerificationCode: вызывает репозиторий с корректными аргументами"},{"ancestorTitles":["UserService","self-service verification"],"duration":6,"failureMessages":[],"fullName":"UserService self-service verification confirmVerificationCode: успех при true","status":"passed","title":"confirmVerificationCode: успех при true"},{"ancestorTitles":["UserService","self-service verification"],"duration":4,"failureMessages":[],"fullName":"UserService self-service verification confirmVerificationCode: 400 при неверном/просроченном коде","status":"passed","title":"confirmVerificationCode: 400 при неверном/просроченном коде"}]},{"numFailingTests":0,"numPassingTests":39,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670481700,"loadTestEnvironmentEnd":1759670481169,"loadTestEnvironmentStart":1759670481163,"runtime":531,"setupAfterEnvEnd":1759670481201,"setupAfterEnvStart":1759670481201,"setupFilesEnd":1759670481169,"setupFilesStart":1759670481169,"slow":false,"start":1759670481169},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\product\\product.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ProductService","productCreate"],"duration":7,"failureMessages":[],"fullName":"ProductService productCreate должен успешно создать товар с изображением","status":"passed","title":"должен успешно создать товар с изображением"},{"ancestorTitles":["ProductService","productCreate"],"duration":19,"failureMessages":[],"fullName":"ProductService productCreate должен пробросить ошибку если FileService.createFile выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если FileService.createFile выбрасывает исключение"},{"ancestorTitles":["ProductService","productCreate"],"duration":9,"failureMessages":[],"fullName":"ProductService productCreate должен пробросить ошибку если ProductRepository.create выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.create выбрасывает исключение"},{"ancestorTitles":["ProductService","getProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService getProduct должен успешно получить товар по ID","status":"passed","title":"должен успешно получить товар по ID"},{"ancestorTitles":["ProductService","getProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService getProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","getProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService getProduct должен пробросить ошибку если ProductRepository.findProductProperty выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.findProductProperty выбрасывает исключение"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":4,"failureMessages":[],"fullName":"ProductService getListProductV2 должен успешно получить список товаров с поиском и сортировкой","status":"passed","title":"должен успешно получить список товаров с поиском и сортировкой"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":3,"failureMessages":[],"fullName":"ProductService getListProductV2 должен использовать значения по умолчанию для сортировки","status":"passed","title":"должен использовать значения по умолчанию для сортировки"},{"ancestorTitles":["ProductService","getListProductV2"],"duration":3,"failureMessages":[],"fullName":"ProductService getListProductV2 должен корректно обработать page=0","status":"passed","title":"должен корректно обработать page=0"},{"ancestorTitles":["ProductService","getListProductByBrandIdV2"],"duration":4,"failureMessages":[],"fullName":"ProductService getListProductByBrandIdV2 должен успешно получить товары по бренду","status":"passed","title":"должен успешно получить товары по бренду"},{"ancestorTitles":["ProductService","getListProductByBrandIdV2"],"duration":3,"failureMessages":[],"fullName":"ProductService getListProductByBrandIdV2 должен пробросить ошибку если ProductRepository.findListProductByBrandId выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.findListProductByBrandId выбрасывает исключение"},{"ancestorTitles":["ProductService","getListProductByCategoryIdV2"],"duration":4,"failureMessages":[],"fullName":"ProductService getListProductByCategoryIdV2 должен успешно получить товары по категории","status":"passed","title":"должен успешно получить товары по категории"},{"ancestorTitles":["ProductService","getAllByBrandIdAndCategoryIdV2"],"duration":4,"failureMessages":[],"fullName":"ProductService getAllByBrandIdAndCategoryIdV2 должен успешно получить товары по бренду и категории","status":"passed","title":"должен успешно получить товары по бренду и категории"},{"ancestorTitles":["ProductService","removeProduct"],"duration":7,"failureMessages":[],"fullName":"ProductService removeProduct должен успешно удалить товар","status":"passed","title":"должен успешно удалить товар"},{"ancestorTitles":["ProductService","removeProduct"],"duration":3,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","removeProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление файла не удалось","status":"passed","title":"должен выбросить ConflictException если удаление файла не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление характеристик не удалось","status":"passed","title":"должен выбросить ConflictException если удаление характеристик не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":5,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление рейтинга не удалось","status":"passed","title":"должен выбросить ConflictException если удаление рейтинга не удалось"},{"ancestorTitles":["ProductService","removeProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService removeProduct должен выбросить ConflictException если удаление товара не удалось","status":"passed","title":"должен выбросить ConflictException если удаление товара не удалось"},{"ancestorTitles":["ProductService","updateProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService updateProduct должен успешно обновить товар","status":"passed","title":"должен успешно обновить товар"},{"ancestorTitles":["ProductService","updateProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService updateProduct должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["ProductService","updateProduct"],"duration":6,"failureMessages":[],"fullName":"ProductService updateProduct должен пробросить ошибку если FileService.updateFile выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если FileService.updateFile выбрасывает исключение"},{"ancestorTitles":["ProductService","updateProduct"],"duration":4,"failureMessages":[],"fullName":"ProductService updateProduct должен пробросить ошибку если ProductRepository.updateProduct выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если ProductRepository.updateProduct выбрасывает исключение"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":6,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен корректно рассчитать пагинацию для обычных значений","status":"passed","title":"должен корректно рассчитать пагинацию для обычных значений"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":5,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен исправить page=0 на page=1","status":"passed","title":"должен исправить page=0 на page=1"},{"ancestorTitles":["ProductService","getPaginate (private method)"],"duration":5,"failureMessages":[],"fullName":"ProductService getPaginate (private method) должен обработать отрицательные значения page","status":"passed","title":"должен обработать отрицательные значения page"},{"ancestorTitles":["ProductService","getMetadata (private method)"],"duration":4,"failureMessages":[],"fullName":"ProductService getMetadata (private method) должен корректно рассчитать метаданные","status":"passed","title":"должен корректно рассчитать метаданные"},{"ancestorTitles":["ProductService","getMetadata (private method)"],"duration":17,"failureMessages":[],"fullName":"ProductService getMetadata (private method) должен обработать случай с пустым списком","status":"passed","title":"должен обработать случай с пустым списком"},{"ancestorTitles":["ProductService","Edge cases"],"duration":7,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать пустой поисковый запрос","status":"passed","title":"должен обработать пустой поисковый запрос"},{"ancestorTitles":["ProductService","Edge cases"],"duration":6,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать null значения в зависимостях","status":"passed","title":"должен обработать null значения в зависимостях"},{"ancestorTitles":["ProductService","Edge cases"],"duration":6,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать большие значения пагинации","status":"passed","title":"должен обработать большие значения пагинации"},{"ancestorTitles":["ProductService","Edge cases"],"duration":6,"failureMessages":[],"fullName":"ProductService Edge cases должен обработать ошибки при работе с файлами","status":"passed","title":"должен обработать ошибки при работе с файлами"},{"ancestorTitles":["ProductService","Integration scenarios"],"duration":6,"failureMessages":[],"fullName":"ProductService Integration scenarios должен выполнить полный цикл создания и удаления товара","status":"passed","title":"должен выполнить полный цикл создания и удаления товара"},{"ancestorTitles":["ProductService","Integration scenarios"],"duration":8,"failureMessages":[],"fullName":"ProductService Integration scenarios должен выполнить поиск с различными фильтрами","status":"passed","title":"должен выполнить поиск с различными фильтрами"},{"ancestorTitles":["ProductService","Error handling"],"duration":5,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["ProductService","Error handling"],"duration":4,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки файловой системы","status":"passed","title":"должен корректно обрабатывать ошибки файловой системы"},{"ancestorTitles":["ProductService","Error handling"],"duration":6,"failureMessages":[],"fullName":"ProductService Error handling должен корректно обрабатывать ошибки рейтингового сервиса","status":"passed","title":"должен корректно обрабатывать ошибки рейтингового сервиса"},{"ancestorTitles":["ProductService","Performance scenarios"],"duration":6,"failureMessages":[],"fullName":"ProductService Performance scenarios должен эффективно обрабатывать большие списки товаров","status":"passed","title":"должен эффективно обрабатывать большие списки товаров"},{"ancestorTitles":["ProductService","Performance scenarios"],"duration":4,"failureMessages":[],"fullName":"ProductService Performance scenarios должен корректно обрабатывать пустые результаты поиска","status":"passed","title":"должен корректно обрабатывать пустые результаты поиска"}]},{"numFailingTests":0,"numPassingTests":30,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670482225,"loadTestEnvironmentEnd":1759670481745,"loadTestEnvironmentStart":1759670481738,"runtime":480,"setupAfterEnvEnd":1759670481784,"setupAfterEnvStart":1759670481784,"setupFilesEnd":1759670481745,"setupFilesStart":1759670481745,"slow":false,"start":1759670481745},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\token\\token.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["TokenService","generateAccessToken"],"duration":7,"failureMessages":[],"fullName":"TokenService generateAccessToken должен успешно сгенерировать access токен","status":"passed","title":"должен успешно сгенерировать access токен"},{"ancestorTitles":["TokenService","generateAccessToken"],"duration":15,"failureMessages":[],"fullName":"TokenService generateAccessToken должен пробросить ошибку если JwtService.signAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.signAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен успешно сгенерировать refresh токен","status":"passed","title":"должен успешно сгенерировать refresh токен"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен пробросить ошибку если RefreshTokenRepository.createRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если RefreshTokenRepository.createRefreshToken выбрасывает исключение"},{"ancestorTitles":["TokenService","generateRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService generateRefreshToken должен пробросить ошибку если JwtService.signAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.signAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":8,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен успешно декодировать валидный refresh токен","status":"passed","title":"должен успешно декодировать валидный refresh токен"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":7,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен выбросить UnprocessableEntityException для истекшего токена","status":"passed","title":"должен выбросить UnprocessableEntityException для истекшего токена"},{"ancestorTitles":["TokenService","decodeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService decodeRefreshToken должен выбросить UnprocessableEntityException для неверного формата токена","status":"passed","title":"должен выбросить UnprocessableEntityException для неверного формата токена"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":2,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен успешно получить пользователя из payload","status":"passed","title":"должен успешно получить пользователя из payload"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен выбросить UnprocessableEntityException для отсутствующего subject","status":"passed","title":"должен выбросить UnprocessableEntityException для отсутствующего subject"},{"ancestorTitles":["TokenService","getUserFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getUserFromRefreshTokenPayload должен пробросить ошибку если UserRepository.findUser выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если UserRepository.findUser выбрасывает исключение"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен успешно получить сохраненный refresh токен","status":"passed","title":"должен успешно получить сохраненный refresh токен"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":4,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен выбросить UnprocessableEntityException для отсутствующего jti","status":"passed","title":"должен выбросить UnprocessableEntityException для отсутствующего jti"},{"ancestorTitles":["TokenService","getStoredRefreshTokenFromRefreshTokenPayload"],"duration":3,"failureMessages":[],"fullName":"TokenService getStoredRefreshTokenFromRefreshTokenPayload должен вернуть null если токен не найден","status":"passed","title":"должен вернуть null если токен не найден"},{"ancestorTitles":["TokenService","decodedAccessToken"],"duration":4,"failureMessages":[],"fullName":"TokenService decodedAccessToken должен успешно декодировать access токен","status":"passed","title":"должен успешно декодировать access токен"},{"ancestorTitles":["TokenService","decodedAccessToken"],"duration":3,"failureMessages":[],"fullName":"TokenService decodedAccessToken должен пробросить ошибку если JwtService.verifyAsync выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если JwtService.verifyAsync выбрасывает исключение"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен успешно обновить refresh токен","status":"passed","title":"должен успешно обновить refresh токен"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен выбросить NotFoundException если refresh токен не найден","status":"passed","title":"должен выбросить NotFoundException если refresh токен не найден"},{"ancestorTitles":["TokenService","updateRefreshToken"],"duration":8,"failureMessages":[],"fullName":"TokenService updateRefreshToken должен выбросить UnprocessableEntityException если пользователь не найден","status":"passed","title":"должен выбросить UnprocessableEntityException если пользователь не найден"},{"ancestorTitles":["TokenService","createAccessTokenFromRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService createAccessTokenFromRefreshToken должен успешно создать access токен из refresh токена","status":"passed","title":"должен успешно создать access токен из refresh токена"},{"ancestorTitles":["TokenService","hashRefreshToken"],"duration":63,"failureMessages":[],"fullName":"TokenService hashRefreshToken должен успешно захешировать refresh токен","status":"passed","title":"должен успешно захешировать refresh токен"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":2,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен успешно получить дату истечения токена","status":"passed","title":"должен успешно получить дату истечения токена"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":3,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен вернуть undefined если токен не содержит exp","status":"passed","title":"должен вернуть undefined если токен не содержит exp"},{"ancestorTitles":["TokenService","getRefreshExpiresAt"],"duration":2,"failureMessages":[],"fullName":"TokenService getRefreshExpiresAt должен вернуть undefined если токен невалидный","status":"passed","title":"должен вернуть undefined если токен невалидный"},{"ancestorTitles":["TokenService","removeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService removeRefreshToken должен удалить единственный refresh токен","status":"passed","title":"должен удалить единственный refresh токен"},{"ancestorTitles":["TokenService","removeRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService removeRefreshToken должен удалить все refresh токены если их больше одного","status":"passed","title":"должен удалить все refresh токены если их больше одного"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":4,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен успешно ротировать refresh токен","status":"passed","title":"должен успешно ротировать refresh токен"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить NotFoundException если токен не найден","status":"passed","title":"должен выбросить NotFoundException если токен не найден"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить UnprocessableEntityException если пользователь токена не совпадает","status":"passed","title":"должен выбросить UnprocessableEntityException если пользователь токена не совпадает"},{"ancestorTitles":["TokenService","rotateRefreshToken"],"duration":3,"failureMessages":[],"fullName":"TokenService rotateRefreshToken должен выбросить UnprocessableEntityException если токен истек","status":"passed","title":"должен выбросить UnprocessableEntityException если токен истек"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670482604,"loadTestEnvironmentEnd":1759670482253,"loadTestEnvironmentStart":1759670482249,"runtime":351,"setupAfterEnvEnd":1759670482281,"setupAfterEnvStart":1759670482281,"setupFilesEnd":1759670482253,"setupFilesStart":1759670482253,"slow":false,"start":1759670482253},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\cart\\cart.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["CartService","getCart"],"duration":16,"failureMessages":[],"fullName":"CartService getCart должен получить корзину, создать новую или пробросить ошибку","status":"passed","title":"должен получить корзину, создать новую или пробросить ошибку"},{"ancestorTitles":["CartService","appendToCart"],"duration":6,"failureMessages":[],"fullName":"CartService appendToCart должен добавить товар, создать корзину или выбросить ошибки","status":"passed","title":"должен добавить товар, создать корзину или выбросить ошибки"},{"ancestorTitles":["CartService","Cart operations"],"duration":4,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию increment","status":"passed","title":"должен выполнить операцию increment"},{"ancestorTitles":["CartService","Cart operations"],"duration":4,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию decrement","status":"passed","title":"должен выполнить операцию decrement"},{"ancestorTitles":["CartService","Cart operations"],"duration":3,"failureMessages":[],"fullName":"CartService Cart operations должен выполнить операцию removeProductFromCart","status":"passed","title":"должен выполнить операцию removeProductFromCart"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":4,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен очистить корзину","status":"passed","title":"должен очистить корзину"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":6,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен создать новую корзину и очистить если cartId отсутствует","status":"passed","title":"должен создать новую корзину и очистить если cartId отсутствует"},{"ancestorTitles":["CartService","Cart operations","clearCart"],"duration":4,"failureMessages":[],"fullName":"CartService Cart operations clearCart должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно трансформировать данные корзины с товарами","status":"passed","title":"должен корректно трансформировать данные корзины с товарами"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно трансформировать пустую корзину","status":"passed","title":"должен корректно трансформировать пустую корзину"},{"ancestorTitles":["CartService","TransformData (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService TransformData (private method) должен корректно обработать корзину без товаров","status":"passed","title":"должен корректно обработать корзину без товаров"},{"ancestorTitles":["CartService","findCart (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService findCart (private method) должен вернуть корзину если она найдена","status":"passed","title":"должен вернуть корзину если она найдена"},{"ancestorTitles":["CartService","findCart (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService findCart (private method) должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["CartService","findProduct (private method)"],"duration":3,"failureMessages":[],"fullName":"CartService findProduct (private method) должен вернуть товар если он найден","status":"passed","title":"должен вернуть товар если он найден"},{"ancestorTitles":["CartService","findProduct (private method)"],"duration":2,"failureMessages":[],"fullName":"CartService findProduct (private method) должен выбросить NotFoundException если товар не найден","status":"passed","title":"должен выбросить NotFoundException если товар не найден"},{"ancestorTitles":["CartService","notFound (private method)"],"duration":5,"failureMessages":[],"fullName":"CartService notFound (private method) должен выбросить NotFoundException с правильным сообщением","status":"passed","title":"должен выбросить NotFoundException с правильным сообщением"},{"ancestorTitles":["CartService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"CartService Edge cases должен обработать корзину с несколькими товарами","status":"passed","title":"должен обработать корзину с несколькими товарами"},{"ancestorTitles":["CartService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"CartService Edge cases должен обработать товар с нулевой ценой","status":"passed","title":"должен обработать товар с нулевой ценой"},{"ancestorTitles":["CartService","Edge cases"],"duration":2,"failureMessages":[],"fullName":"CartService Edge cases должен обработать товар с дробной ценой","status":"passed","title":"должен обработать товар с дробной ценой"},{"ancestorTitles":["CartService","Integration scenarios"],"duration":3,"failureMessages":[],"fullName":"CartService Integration scenarios должен выполнить полный цикл работы с корзиной","status":"passed","title":"должен выполнить полный цикл работы с корзиной"},{"ancestorTitles":["CartService","Error handling"],"duration":5,"failureMessages":[],"fullName":"CartService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["CartService","Error handling"],"duration":11,"failureMessages":[],"fullName":"CartService Error handling должен корректно обрабатывать ошибки при работе с товарами","status":"passed","title":"должен корректно обрабатывать ошибки при работе с товарами"}]},{"numFailingTests":0,"numPassingTests":15,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670483019,"loadTestEnvironmentEnd":1759670482628,"loadTestEnvironmentStart":1759670482620,"runtime":391,"setupAfterEnvEnd":1759670482673,"setupAfterEnvStart":1759670482673,"setupFilesEnd":1759670482628,"setupFilesStart":1759670482628,"slow":false,"start":1759670482628},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\tests\\user-flags.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":8,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен успешно обновить флаги пользователя","status":"passed","title":"должен успешно обновить флаги пользователя"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":6,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен обновить только переданные флаги","status":"passed","title":"должен обновить только переданные флаги"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":19,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService - Flags and Preferences","updateFlags"],"duration":5,"failureMessages":[],"fullName":"UserService - Flags and Preferences updateFlags должен обработать пустой объект флагов","status":"passed","title":"должен обработать пустой объект флагов"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":5,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен успешно обновить предпочтения пользователя","status":"passed","title":"должен успешно обновить предпочтения пользователя"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":7,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен обновить только переданные предпочтения","status":"passed","title":"должен обновить только переданные предпочтения"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["UserService - Flags and Preferences","updatePreferences"],"duration":12,"failureMessages":[],"fullName":"UserService - Flags and Preferences updatePreferences должен обработать пустой объект предпочтений","status":"passed","title":"должен обработать пустой объект предпочтений"},{"ancestorTitles":["UserService - Flags and Preferences","getUserStats"],"duration":6,"failureMessages":[],"fullName":"UserService - Flags and Preferences getUserStats должен вернуть статистику пользователей","status":"passed","title":"должен вернуть статистику пользователей"},{"ancestorTitles":["UserService - Flags and Preferences","getUserStats"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences getUserStats должен вернуть статистику с нулевыми значениями","status":"passed","title":"должен вернуть статистику с нулевыми значениями"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при обновлении флагов","status":"passed","title":"должен обработать ошибку репозитория при обновлении флагов"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":5,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при обновлении предпочтений","status":"passed","title":"должен обработать ошибку репозитория при обновлении предпочтений"},{"ancestorTitles":["UserService - Flags and Preferences","Error handling"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences Error handling должен обработать ошибку репозитория при получении статистики","status":"passed","title":"должен обработать ошибку репозитория при получении статистики"},{"ancestorTitles":["UserService - Flags and Preferences","Data validation edge cases"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences Data validation edge cases должен обработать все возможные флаги","status":"passed","title":"должен обработать все возможные флаги"},{"ancestorTitles":["UserService - Flags and Preferences","Data validation edge cases"],"duration":4,"failureMessages":[],"fullName":"UserService - Flags and Preferences Data validation edge cases должен обработать все возможные предпочтения","status":"passed","title":"должен обработать все возможные предпочтения"}]},{"numFailingTests":0,"numPassingTests":28,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670483434,"loadTestEnvironmentEnd":1759670483036,"loadTestEnvironmentStart":1759670483030,"runtime":398,"setupAfterEnvEnd":1759670483067,"setupAfterEnvStart":1759670483067,"setupFilesEnd":1759670483036,"setupFilesStart":1759670483036,"slow":false,"start":1759670483036},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\order\\order.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["OrderService","adminGetStoreOrderList"],"duration":5,"failureMessages":[],"fullName":"OrderService adminGetStoreOrderList должен получить список заказов магазина","status":"passed","title":"должен получить список заказов магазина"},{"ancestorTitles":["OrderService","adminGetStoreOrderList"],"duration":20,"failureMessages":[],"fullName":"OrderService adminGetStoreOrderList должен выбросить NotFoundException если список заказов пуст","status":"passed","title":"должен выбросить NotFoundException если список заказов пуст"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен получить список заказов пользователя","status":"passed","title":"должен получить список заказов пользователя"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":3,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен выбросить NotFoundException если пользователь не найден","status":"passed","title":"должен выбросить NotFoundException если пользователь не найден"},{"ancestorTitles":["OrderService","adminGetOrderListUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderListUser должен выбросить NotFoundException если список заказов пользователя пуст","status":"passed","title":"должен выбросить NotFoundException если список заказов пользователя пуст"},{"ancestorTitles":["OrderService","adminGetOrderUser"],"duration":4,"failureMessages":[],"fullName":"OrderService adminGetOrderUser должен получить заказ пользователя","status":"passed","title":"должен получить заказ пользователя"},{"ancestorTitles":["OrderService","adminGetOrderUser"],"duration":3,"failureMessages":[],"fullName":"OrderService adminGetOrderUser должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":4,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен создать новый заказ если у пользователя нет заказов","status":"passed","title":"должен создать новый заказ если у пользователя нет заказов"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен вернуть существующий заказ если у пользователя уже есть заказы","status":"passed","title":"должен вернуть существующий заказ если у пользователя уже есть заказы"},{"ancestorTitles":["OrderService","adminCreateOrder"],"duration":6,"failureMessages":[],"fullName":"OrderService adminCreateOrder должен выбросить ошибку если userId не указан","status":"passed","title":"должен выбросить ошибку если userId не указан"},{"ancestorTitles":["OrderService","adminRemoveOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminRemoveOrder должен удалить заказ","status":"passed","title":"должен удалить заказ"},{"ancestorTitles":["OrderService","adminRemoveOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService adminRemoveOrder должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","userGetOrderList"],"duration":9,"failureMessages":[],"fullName":"OrderService userGetOrderList должен получить список заказов пользователя","status":"passed","title":"должен получить список заказов пользователя"},{"ancestorTitles":["OrderService","userGetOrderList"],"duration":4,"failureMessages":[],"fullName":"OrderService userGetOrderList должен выбросить NotFoundException если заказы не найдены","status":"passed","title":"должен выбросить NotFoundException если заказы не найдены"},{"ancestorTitles":["OrderService","userGetOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService userGetOrder должен получить заказ пользователя","status":"passed","title":"должен получить заказ пользователя"},{"ancestorTitles":["OrderService","userGetOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService userGetOrder должен выбросить NotFoundException если заказ не найден","status":"passed","title":"должен выбросить NotFoundException если заказ не найден"},{"ancestorTitles":["OrderService","userCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService userCreateOrder должен создать заказ пользователя","status":"passed","title":"должен создать заказ пользователя"},{"ancestorTitles":["OrderService","guestCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService guestCreateOrder должен создать заказ гостя","status":"passed","title":"должен создать заказ гостя"},{"ancestorTitles":["OrderService","guestCreateOrder"],"duration":3,"failureMessages":[],"fullName":"OrderService guestCreateOrder должен выбросить ошибку если userId или cartId не указаны","status":"passed","title":"должен выбросить ошибку если userId или cartId не указаны"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":5,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен создать заказ и очистить корзину","status":"passed","title":"должен создать заказ и очистить корзину"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":4,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен выбросить NotFoundException если корзина не найдена","status":"passed","title":"должен выбросить NotFoundException если корзина не найдена"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":3,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен выбросить NotFoundException если корзина пуста","status":"passed","title":"должен выбросить NotFoundException если корзина пуста"},{"ancestorTitles":["OrderService","createOrder (private method)"],"duration":3,"failureMessages":[],"fullName":"OrderService createOrder (private method) должен пропустить проверку пользователя если userId равен 0","status":"passed","title":"должен пропустить проверку пользователя если userId равен 0"},{"ancestorTitles":["OrderService","notFound (private method)"],"duration":4,"failureMessages":[],"fullName":"OrderService notFound (private method) должен выбросить NotFoundException с правильным сообщением","status":"passed","title":"должен выбросить NotFoundException с правильным сообщением"},{"ancestorTitles":["OrderService","Edge cases"],"duration":3,"failureMessages":[],"fullName":"OrderService Edge cases должен обработать заказ с нулевой суммой","status":"passed","title":"должен обработать заказ с нулевой суммой"},{"ancestorTitles":["OrderService","Edge cases"],"duration":4,"failureMessages":[],"fullName":"OrderService Edge cases должен обработать заказ без комментария","status":"passed","title":"должен обработать заказ без комментария"},{"ancestorTitles":["OrderService","Error handling"],"duration":3,"failureMessages":[],"fullName":"OrderService Error handling должен корректно обрабатывать ошибки базы данных","status":"passed","title":"должен корректно обрабатывать ошибки базы данных"},{"ancestorTitles":["OrderService","Error handling"],"duration":10,"failureMessages":[],"fullName":"OrderService Error handling должен корректно обрабатывать ошибки при работе с корзиной","status":"passed","title":"должен корректно обрабатывать ошибки при работе с корзиной"}]},{"numFailingTests":0,"numPassingTests":12,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670483734,"loadTestEnvironmentEnd":1759670483454,"loadTestEnvironmentStart":1759670483449,"runtime":280,"setupAfterEnvEnd":1759670483480,"setupAfterEnvStart":1759670483480,"setupFilesEnd":1759670483454,"setupFilesStart":1759670483454,"slow":false,"start":1759670483454},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user-address\\user-address.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserAddressService"],"duration":6,"failureMessages":[],"fullName":"UserAddressService createAddress: creates non-default address","status":"passed","title":"createAddress: creates non-default address"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService createAddress: creates default address and returns refreshed entity","status":"passed","title":"createAddress: creates default address and returns refreshed entity"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService getAddresses: returns list","status":"passed","title":"getAddresses: returns list"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService getAddress: should return entity when found","status":"passed","title":"getAddress: should return entity when found"},{"ancestorTitles":["UserAddressService"],"duration":8,"failureMessages":[],"fullName":"UserAddressService getAddress: should throw NotFoundException when not found","status":"passed","title":"getAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService updateAddress: should update and return entity","status":"passed","title":"updateAddress: should update and return entity"},{"ancestorTitles":["UserAddressService"],"duration":2,"failureMessages":[],"fullName":"UserAddressService updateAddress: should throw NotFoundException when not found","status":"passed","title":"updateAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":3,"failureMessages":[],"fullName":"UserAddressService updateAddress: should return refreshed entity when is_default true","status":"passed","title":"updateAddress: should return refreshed entity when is_default true"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService removeAddress: should remove address successfully","status":"passed","title":"removeAddress: should remove address successfully"},{"ancestorTitles":["UserAddressService"],"duration":1,"failureMessages":[],"fullName":"UserAddressService removeAddress: should throw NotFoundException when not found","status":"passed","title":"removeAddress: should throw NotFoundException when not found"},{"ancestorTitles":["UserAddressService"],"duration":2,"failureMessages":[],"fullName":"UserAddressService setDefaultAddress: should set default address successfully","status":"passed","title":"setDefaultAddress: should set default address successfully"},{"ancestorTitles":["UserAddressService"],"duration":9,"failureMessages":[],"fullName":"UserAddressService setDefaultAddress: should throw NotFoundException when not found","status":"passed","title":"setDefaultAddress: should throw NotFoundException when not found"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670484010,"loadTestEnvironmentEnd":1759670483746,"loadTestEnvironmentStart":1759670483742,"runtime":264,"setupAfterEnvEnd":1759670483777,"setupAfterEnvStart":1759670483777,"setupFilesEnd":1759670483746,"setupFilesStart":1759670483746,"slow":false,"start":1759670483746},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\user\\tests\\user.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["UserService","updatePhone"],"duration":2,"failureMessages":[],"fullName":"UserService updatePhone updates phone and returns user with id and phone","status":"passed","title":"updates phone and returns user with id and phone"},{"ancestorTitles":["UserService","updatePhone"],"duration":1,"failureMessages":[],"fullName":"UserService updatePhone throws NotFoundException when user not updated","status":"passed","title":"throws NotFoundException when user not updated"},{"ancestorTitles":["UserService","updatePhone"],"duration":1,"failureMessages":[],"fullName":"UserService updatePhone maps SequelizeValidationError to BadRequestException","status":"passed","title":"maps SequelizeValidationError to BadRequestException"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword throws NotFoundException when user not found","status":"passed","title":"throws NotFoundException when user not found"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword throws BadRequestException when old password mismatch","status":"passed","title":"throws BadRequestException when old password mismatch"},{"ancestorTitles":["UserService","changePassword"],"duration":1,"failureMessages":[],"fullName":"UserService changePassword updates password on success","status":"passed","title":"updates password on success"}]},{"numFailingTests":0,"numPassingTests":19,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670484503,"loadTestEnvironmentEnd":1759670484020,"loadTestEnvironmentStart":1759670484016,"runtime":483,"setupAfterEnvEnd":1759670484065,"setupAfterEnvStart":1759670484065,"setupFilesEnd":1759670484020,"setupFilesStart":1759670484020,"slow":false,"start":1759670484020},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\services\\auth\\auth.service.unit.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AuthService","registration"],"duration":15,"failureMessages":[],"fullName":"AuthService registration должен успешно зарегистрировать нового пользователя","status":"passed","title":"должен успешно зарегистрировать нового пользователя"},{"ancestorTitles":["AuthService","registration"],"duration":3,"failureMessages":[],"fullName":"AuthService registration должен успешно зарегистрировать пользователя с ADMIN ролью для специального email","status":"passed","title":"должен успешно зарегистрировать пользователя с ADMIN ролью для специального email"},{"ancestorTitles":["AuthService","registration"],"duration":18,"failureMessages":[],"fullName":"AuthService registration должен пробросить ошибку если UserService.createUser выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если UserService.createUser выбрасывает исключение"},{"ancestorTitles":["AuthService","registration"],"duration":7,"failureMessages":[],"fullName":"AuthService registration должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение"},{"ancestorTitles":["AuthService","login"],"duration":8,"failureMessages":[],"fullName":"AuthService login должен успешно авторизовать пользователя с корректными данными","status":"passed","title":"должен успешно авторизовать пользователя с корректными данными"},{"ancestorTitles":["AuthService","login"],"duration":10,"failureMessages":[],"fullName":"AuthService login должен выбросить UnauthorizedException для несуществующего email","status":"passed","title":"должен выбросить UnauthorizedException для несуществующего email"},{"ancestorTitles":["AuthService","login"],"duration":7,"failureMessages":[],"fullName":"AuthService login должен выбросить UnauthorizedException для неверного пароля","status":"passed","title":"должен выбросить UnauthorizedException для неверного пароля"},{"ancestorTitles":["AuthService","login"],"duration":6,"failureMessages":[],"fullName":"AuthService login должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.generateAccessToken выбрасывает исключение"},{"ancestorTitles":["AuthService","logout"],"duration":13,"failureMessages":[],"fullName":"AuthService logout должен успешно выполнить logout","status":"passed","title":"должен успешно выполнить logout"},{"ancestorTitles":["AuthService","logout"],"duration":5,"failureMessages":[],"fullName":"AuthService logout должен пробросить ошибку если TokenService.decodeRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.decodeRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","logout"],"duration":4,"failureMessages":[],"fullName":"AuthService logout должен пробросить ошибку если TokenService.removeRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.removeRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":5,"failureMessages":[],"fullName":"AuthService updateAccessToken должен успешно обновить access токен","status":"passed","title":"должен успешно обновить access токен"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":5,"failureMessages":[],"fullName":"AuthService updateAccessToken должен пробросить ошибку если TokenService.rotateRefreshToken выбрасывает исключение","status":"passed","title":"должен пробросить ошибку если TokenService.rotateRefreshToken выбрасывает исключение"},{"ancestorTitles":["AuthService","updateAccessToken"],"duration":5,"failureMessages":[],"fullName":"AuthService updateAccessToken должен логировать ошибку при неудачном обновлении токена","status":"passed","title":"должен логировать ошибку при неудачном обновлении токена"},{"ancestorTitles":["AuthService","Edge cases"],"duration":5,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать пустой email в DTO","status":"passed","title":"должен обработать пустой email в DTO"},{"ancestorTitles":["AuthService","Edge cases"],"duration":4,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать пустой пароль в DTO","status":"passed","title":"должен обработать пустой пароль в DTO"},{"ancestorTitles":["AuthService","Edge cases"],"duration":7,"failureMessages":[],"fullName":"AuthService Edge cases должен обработать null значения в зависимостях","status":"passed","title":"должен обработать null значения в зависимостях"},{"ancestorTitles":["AuthService","getToken (private method)"],"duration":4,"failureMessages":[],"fullName":"AuthService getToken (private method) должен возвращать токен с refresh токеном","status":"passed","title":"должен возвращать токен с refresh токеном"},{"ancestorTitles":["AuthService","getToken (private method)"],"duration":4,"failureMessages":[],"fullName":"AuthService getToken (private method) должен возвращать токен без refresh токена","status":"passed","title":"должен возвращать токен без refresh токена"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1759670484767,"loadTestEnvironmentEnd":1759670484526,"loadTestEnvironmentStart":1759670484519,"runtime":241,"setupAfterEnvEnd":1759670484556,"setupAfterEnvStart":1759670484556,"setupFilesEnd":1759670484526,"setupFilesStart":1759670484526,"slow":false,"start":1759670484526},"testFilePath":"F:\\git\\online-store-backend\\src\\infrastructure\\responses\\paginate\\paginated.response.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PaginatedResponse"],"duration":1,"failureMessages":[],"fullName":"PaginatedResponse должен создавать объект с правильной структурой","status":"passed","title":"должен создавать объект с правильной структурой"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.(t|j)s","!src/**/*.spec.ts","!src/**/*.test.ts","!src/main.ts","!src/**/*.module.ts","!src/**/*.dto.ts","!src/**/*.interface.ts","!src/**/*.response.ts","!src/**/*.request.ts"],"coverageDirectory":"F:\\git\\online-store-backend\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":70,"functions":70,"lines":70,"statements":70}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["F:\\git\\online-store-backend\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-reports","filename":"test-report.html","expand":true,"hideIcon":false,"pageTitle":"Online Store Backend - Test Results","darkTheme":false,"includeFailureMsg":true,"includeSuiteFailure":true,"includeConsoleLog":true,"includeStackTrace":true,"includeObsoleteSnapshots":true,"reportTitle":"Test Results Report","sort":"status"}]],"rootDir":"F:\\git\\online-store-backend","runInBand":false,"runTestsByPath":false,"seed":-1727546562,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPatterns":{"patterns":[],"type":"TestPathPatterns"},"testSequencer":"F:\\git\\online-store-backend\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"waitForUnhandledRejections":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759670484776,"_reporterOptions":{"publicPath":"./test-reports","filename":"test-report.html","expand":true,"pageTitle":"Online Store Backend - Test Results","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":true,"stripSkippedTest":false,"includeFailureMsg":true,"includeSuiteFailure":true,"includeStackTrace":true,"includeObsoleteSnapshots":true,"reportTitle":"Test Results Report","sort":"status"},"logInfoMapping":{},"attachInfos":{}})