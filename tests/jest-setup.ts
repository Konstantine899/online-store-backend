import * as dotenv from 'dotenv';
import * as path from 'path';

/**
 * Jest global setup - –∑–∞–≥—Ä—É–∂–∞–µ—Ç .test.env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç
 * –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö environment –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è unit-—Ç–µ—Å—Ç–æ–≤.
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º .test.env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
const envPath = path.resolve(__dirname, '../.test.env');

const result = dotenv.config({ path: envPath });

if (result.error) {
    console.warn(
        `‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å .test.env –∏–∑ ${envPath}. ` +
            `Unit-—Ç–µ—Å—Ç—ã –º–æ–≥—É—Ç —É–ø–∞—Å—Ç—å –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.`,
    );
    console.warn(`–û—à–∏–±–∫–∞: ${result.error.message}`);
} else {
    console.log(`‚úÖ Environment loaded from ${envPath}`);
    console.log(`   NODE_ENV: ${process.env.NODE_ENV}`);
    console.log(`   DEBUG_SQL: ${process.env.DEBUG_SQL || 'false'}`);
}

/**
 * –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ SQL –ª–æ–≥–æ–≤ –≤ —Ç–µ—Å—Ç–∞—Ö (–µ—Å–ª–∏ DEBUG_SQL –Ω–µ –≤–∫–ª—é—á–µ–Ω)
 * 
 * Sequelize –º–æ–∂–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ console.log –¥–∞–∂–µ –ø—Ä–∏ logging:false.
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º SQL-–ø–æ–¥–æ–±–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –≤—ã–≤–æ–¥–∞.
 */
if (process.env.DEBUG_SQL !== 'true') {
    const originalConsoleLog = console.log;
    const originalConsoleDebug = console.debug;

    // –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è SQL –ª–æ–≥–æ–≤
    const sqlPatterns = [
        /Executing \(default\):/i,
        /SELECT.*FROM/i,
        /INSERT INTO/i,
        /UPDATE.*SET/i,
        /DELETE FROM/i,
        /CREATE TABLE/i,
        /ALTER TABLE/i,
        /DROP TABLE/i,
    ];

    const isSqlLog = (message: string): boolean => {
        return sqlPatterns.some((pattern) => pattern.test(message));
    };

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log
    console.log = (...args: any[]): void => {
        const message = args.join(' ');
        if (!isSqlLog(message)) {
            originalConsoleLog(...args);
        }
        // SQL –ª–æ–≥–∏ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    };

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.debug (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç debug)
    console.debug = (...args: any[]): void => {
        const message = args.join(' ');
        if (!isSqlLog(message)) {
            originalConsoleDebug(...args);
        }
        // SQL –ª–æ–≥–∏ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    };

    console.log('üîá SQL logging suppressed (set DEBUG_SQL=true to enable)');
}


